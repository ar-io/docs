(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7716],{7809:()=>{},7716:(e,t,a)=>{"use strict";var n;function o(e){return void 0===e||e}function r(e){let t=Array(e);for(let a=0;a<e;a++)t[a]=i();return t}function i(){return Object.create(null)}function s(e,t){return t.length-e.length}function d(e){return"string"==typeof e}function l(e){return"object"==typeof e}function c(e){return"function"==typeof e}function h(e,t){var a=u;if(e&&(t&&(e=m(e,t)),this.H&&(e=m(e,this.H)),this.J&&1<e.length&&(e=m(e,this.J)),a||""===a)){if(t=e.split(a),this.filter){e=this.filter,a=t.length;let n=[];for(let o=0,r=0;o<a;o++){let a=t[o];a&&!e[a]&&(n[r++]=a)}e=n}else e=t}return e}a.r(t),a.d(t,{search:()=>$});let u=/[\p{Z}\p{S}\p{P}\p{C}]+/u,p=/[\u0300-\u036f]/g;function f(e,t){let a=Object.keys(e),n=a.length,o=[],r="",i=0;for(let s=0,d,l;s<n;s++)(l=e[d=a[s]])?(o[i++]=g(t?"(?!\\b)"+d+"(\\b|_)":d),o[i++]=l):r+=(r?"|":"")+d;return r&&(o[i++]=g(t?"(?!\\b)("+r+")(\\b|_)":"("+r+")"),o[i]=""),o}function m(e,t){for(let a=0,n=t.length;a<n&&(e=e.replace(t[a],t[a+1]));a+=2);return e}function g(e){return RegExp(e,"g")}function w(e){let t="",a="";for(let n=0,o=e.length,r;n<o;n++)(r=e[n])!==a&&(t+=a=r);return t}function y(e){return h.call(this,(""+e).toLowerCase(),!1)}let b={},v={};function k(e){A(e,"add"),A(e,"append"),A(e,"search"),A(e,"update"),A(e,"remove")}function A(e,t){e[t+"Async"]=function(){let e;let a=this,n=arguments;var o=n[n.length-1];return c(o)&&(e=o,delete n[n.length-1]),o=new Promise(function(e){setTimeout(function(){a.async=!0;let o=a[t].apply(a,n);a.async=!1,e(o)})}),e?(o.then(e),this):o}}function T(e,t,a,n){let o=e.length,r=[],s,d,l=0;n&&(n=[]);for(let c=o-1;0<=c;c--){let h=e[c],u=h.length,p=i(),f=!s;for(let e=0;e<u;e++){let i=h[e],u=i.length;if(u)for(let e=0,h,m;e<u;e++)if(m=i[e],s){if(s[m]){if(!c){if(a)a--;else if(r[l++]=m,l===t)return r}(c||n)&&(p[m]=1),f=!0}if(n&&(h=(d[m]||0)+1,d[m]=h,h<o)){let e=n[h-2]||(n[h-2]=[]);e[e.length]=m}}else p[m]=1}if(n)s||(d=p);else if(!f)return[];s=p}if(n)for(let e=n.length-1,o,i;0<=e;e--){i=(o=n[e]).length;for(let e=0,n;e<i;e++)if(!s[n=o[e]]){if(a)a--;else if(r[l++]=n,l===t)return r;s[n]=1}}return r}function I(e){this.l=!0!==e&&e,this.cache=i(),this.h=[]}function x(e,t,a){l(e)&&(e=e.query);let n=this.cache.get(e);return n||(n=this.search(e,t,a),this.cache.set(e,n)),n}I.prototype.set=function(e,t){if(!this.cache[e]){var a=this.h.length;for(a===this.l?delete this.cache[this.h[a-1]]:a++,--a;0<a;a--)this.h[a]=this.h[a-1];this.h[0]=e}this.cache[e]=t},I.prototype.get=function(e){let t=this.cache[e];if(this.l&&t&&(e=this.h.indexOf(e))){let t=this.h[e-1];this.h[e-1]=this.h[e],this.h[e]=t}return t};let S={memory:{charset:"latin:extra",D:3,B:4,m:!1},performance:{D:3,B:3,s:!1,context:{depth:2,D:1}},match:{charset:"latin:extra",G:"reverse"},score:{charset:"latin:advanced",D:20,B:3,context:{depth:3,D:9}},default:{}};function N(e,t,a,n,o,r,i,s){setTimeout(function(){let d=e(a?a+"."+n:n,JSON.stringify(i));d&&d.then?d.then(function(){t.export(e,t,a,o,r+1,s)}):t.export(e,t,a,o,r+1,s)})}function R(e,t){if(!(this instanceof R))return new R(e);if(e){d(e)?e=S[e]:(a=e.preset)&&(e=Object.assign({},a[a],e)),a=e.charset;var a,n=e.lang;d(a)&&(-1===a.indexOf(":")&&(a+=":default"),a=v[a]),d(n)&&(n=b[n])}else e={};let s,l,c=e.context||{};if(this.encode=e.encode||a&&a.encode||y,this.register=t||i(),this.D=s=e.resolution||9,this.G=t=a&&a.G||e.tokenize||"strict",this.depth="strict"===t&&c.depth,this.l=o(c.bidirectional),this.s=l=o(e.optimize),this.m=o(e.fastupdate),this.B=e.minlength||1,this.C=e.boost,this.map=l?r(s):i(),this.A=s=c.resolution||1,this.h=l?r(s):i(),this.F=a&&a.F||e.rtl,this.H=(t=e.matcher||n&&n.H)&&f(t,!1),this.J=(t=e.stemmer||n&&n.J)&&f(t,!0),a=t=e.filter||n&&n.filter){a=t,n=i();for(let e=0,t=a.length;e<t;e++)n[a[e]]=1;a=n}this.filter=a,this.cache=(t=e.cache)&&new I(t)}function O(e,t,a,n,o){return a&&1<e?t+(n||0)<=e?a+(o||0):(e-1)/(t+(n||0))*(a+(o||0))+1|0:0}function D(e,t,a,n,o,r,s){let d=s?e.h:e.map;(!t[a]||s&&!t[a][s])&&(e.s&&(d=d[n]),s?((t=t[a]||(t[a]=i()))[s]=1,d=d[s]||(d[s]=i())):t[a]=1,d=d[a]||(d[a]=[]),e.s||(d=d[n]||(d[n]=[])),r&&d.includes(o)||(d[d.length]=o,e.m&&((e=e.register[o]||(e.register[o]=[]))[e.length]=d)))}function E(e,t,a,n,o,r,i,s){let d=[],l=s?e.h:e.map;if(e.s||(l=G(l,i,s,e.l)),l){let a=0,c=Math.min(l.length,s?e.A:e.D);for(let t=0,h=0,u,p;t<c&&(!(u=l[t])||(e.s&&(u=G(u,i,s,e.l)),o&&u&&r&&((p=u.length)<=o?(o-=p,u=null):(u=u.slice(o),o=0)),!u||(d[a++]=u,!r||!((h+=u.length)>=n))));t++);if(a)return r?P(d,n,0):void(t[t.length]=d)}return!a&&d}function P(e,t,a){return e=1===e.length?e[0]:[].concat.apply([],e),a||e.length>t?e.slice(a,a+t):e}function G(e,t,a,n){return e=a?(e=e[(n=n&&t>a)?t:a])&&e[n?a:t]:e[t]}function q(e,t,a,n,o){let r=0;if(e.constructor===Array){if(o)-1!==(t=e.indexOf(t))?1<e.length&&(e.splice(t,1),r++):r++;else{o=Math.min(e.length,a);for(let i=0,s;i<o;i++)(s=e[i])&&(r=q(s,t,a,n,o),n||r||delete e[i])}}else for(let i in e)(r=q(e[i],t,a,n,o))||delete e[i];return r}function L(e){e=e.data;var t=self._index;let a=e.args;var n=e.task;"init"===n?(n=e.options||{},e=e.factory,t=n.encode,n.cache=!1,t&&0===t.indexOf("function")&&(n.encode=Function("return "+t)()),e?(Function("return "+e)()(self),self._index=new self.FlexSearch.Index(n),delete self.FlexSearch):self._index=new R(n)):(e=e.id,t=t[n].apply(t,a),postMessage("search"===n?{id:e,msg:t}:{id:e}))}(n=R.prototype).append=function(e,t){return this.add(e,t,!0)},n.add=function(e,t,a,n){if(t&&(e||0===e)){if(!n&&!a&&this.register[e])return this.update(e,t);if(n=(t=this.encode(t)).length){let c=i(),h=i(),u=this.depth,p=this.D;for(let f=0;f<n;f++){let m=t[this.F?n-1-f:f];var o=m.length;if(m&&o>=this.B&&(u||!h[m])){var r=O(p,n,f),s="";switch(this.G){case"full":if(2<o){for(r=0;r<o;r++)for(var d=o;d>r;d--)if(d-r>=this.B){var l=O(p,n,f,o,r);D(this,h,s=m.substring(r,d),l,e,a)}break}case"reverse":if(1<o){for(d=o-1;0<d;d--)(s=m[d]+s).length>=this.B&&D(this,h,s,O(p,n,f,o,d),e,a);s=""}case"forward":if(1<o){for(d=0;d<o;d++)(s+=m[d]).length>=this.B&&D(this,h,s,r,e,a);break}default:if(this.C&&(r=Math.min(r/this.C(t,m,f)|0,p-1)),D(this,h,m,r,e,a),u&&1<n&&f<n-1){for(o=i(),s=this.A,r=m,d=Math.min(u+1,n-f),o[r]=1,l=1;l<d;l++)if((m=t[this.F?n-1-f-l:f+l])&&m.length>=this.B&&!o[m]){o[m]=1;let t=this.l&&m>r;D(this,c,t?r:m,O(s+(n/2>s?0:1),n,f,d-1,l-1),e,a,t?m:r)}}}}}this.m||(this.register[e]=1)}}return this},n.search=function(e,t,a){let n,o,r;a||(!t&&l(e)?e=(a=e).query:l(t)&&(a=t));let d=[],c,h,u=0;if(a){e=a.query||e,t=a.limit,u=a.offset||0;var p=a.context;h=a.suggest}if(e&&1<(c=(e=this.encode(""+e)).length)){a=i();var f=[];for(let t=0,n=0,o;t<c;t++)if((o=e[t])&&o.length>=this.B&&!a[o]){if(!this.s&&!h&&!this.map[o])return d;f[n++]=o,a[o]=1}c=(e=f).length}if(!c)return d;for(t||(t=100),p=this.depth&&1<c&&!1!==p,a=0,p?(n=e[0],a=1):1<c&&e.sort(s);a<c;a++){if(r=e[a],p?(o=E(this,d,h,t,u,2===c,r,n),h&&!1===o&&d.length||(n=r)):o=E(this,d,h,t,u,1===c,r),o)return o;if(h&&a===c-1){if(!(f=d.length)){if(p){p=0,a=-1;continue}return d}if(1===f)return P(d[0],t,u)}}return T(d,t,u,h)},n.contain=function(e){return!!this.register[e]},n.update=function(e,t){return this.remove(e).add(e,t)},n.remove=function(e,t){let a=this.register[e];if(a){if(this.m)for(let t=0,n;t<a.length;t++)(n=a[t]).splice(n.indexOf(e),1);else q(this.map,e,this.D,this.s),this.depth&&q(this.h,e,this.A,this.s);if(t||delete this.register[e],this.cache){t=this.cache;for(let a=0,n;a<t.h.length;a++)n=t.h[a],t.cache[n].includes(e)&&(t.h.splice(a--,1),delete t.cache[n])}}return this},n.searchCache=x,n.export=function(e,t,a,n,o,r){let s,d,l=!0;switch(void 0===r&&(l=new Promise(e=>{r=e})),o||(o=0)){case 0:if(s="reg",this.m)for(let e in d=i(),this.register)d[e]=1;else d=this.register;break;case 1:s="cfg",d={doc:0,opt:this.s?1:0};break;case 2:s="map",d=this.map;break;case 3:s="ctx",d=this.h;break;default:void 0===a&&r&&r();return}return N(e,t||this,a,s,n,o,d,r),l},n.import=function(e,t){if(t)switch(d(t)&&(t=JSON.parse(t)),e){case"cfg":this.s=!!t.opt;break;case"reg":this.m=!1,this.register=t;break;case"map":this.map=t;break;case"ctx":this.h=t}},k(R.prototype);let C=0;function F(e){var t;if(!(this instanceof F))return new F(e);e?c(t=e.encode)&&(e.encode=t.toString()):e={},(t=(self||window)._factory)&&(t=t.toString());let n="undefined"==typeof window&&self.exports,o=this;this.o=function(e,t,n){let o;try{o=t?new(a(7809)).Worker("//node/node.js"):e?new Worker(URL.createObjectURL(new Blob(["onmessage="+L.toString()],{type:"text/javascript"}))):new Worker(d(n)?n:"worker/worker.js",{type:"module"})}catch(e){}return o}(t,n,e.worker),this.h=i(),this.o&&(n?this.o.on("message",function(e){o.h[e.id](e.msg),delete o.h[e.id]}):this.o.onmessage=function(e){e=e.data,o.h[e.id](e.msg),delete o.h[e.id]},this.o.postMessage({task:"init",factory:t,options:e}))}function W(e){F.prototype[e]=F.prototype[e+"Async"]=function(){let t;let a=this,n=[].slice.call(arguments);var o=n[n.length-1];return c(o)&&(t=o,n.splice(n.length-1,1)),o=new Promise(function(t){setTimeout(function(){a.h[++C]=t,a.o.postMessage({task:e,id:C,args:n})})}),t?(o.then(t),this):o}}function B(e){if(!(this instanceof B))return new B(e);var t,a=e.document||e.doc||e;this.K=[],this.h=[],this.A=[],this.register=i(),this.key=(t=a.key||a.id)&&_(t,this.A)||"id",this.m=o(e.fastupdate),this.C=(t=a.store)&&!0!==t&&[],this.store=t&&i(),this.I=(t=a.tag)&&_(t,this.A),this.l=t&&i(),this.cache=(t=e.cache)&&new I(t),e.cache=!1,this.o=e.worker,this.async=!1,t=i();let n=a.index||a.field||a;d(n)&&(n=[n]);for(let a=0,o,r;a<n.length;a++)d(o=n[a])||(r=o,o=o.field),r=l(r)?Object.assign({},e,r):e,this.o&&(t[o]=new F(r),t[o].o||(this.o=!1)),this.o||(t[o]=new R(r,this.register)),this.K[a]=_(o,this.A),this.h[a]=o;if(this.C)for(d(e=a.store)&&(e=[e]),a=0;a<e.length;a++)this.C[a]=_(e[a],this.A);this.index=t}function _(e,t){let a=e.split(":"),n=0;for(let o=0;o<a.length;o++)0<=(e=a[o]).indexOf("[]")&&(e=e.substring(0,e.length-2))&&(t[n]=!0),e&&(a[n++]=e);return n<a.length&&(a.length=n),1<n?a:a[0]}function z(e,t){if(d(t))e=e[t];else for(let a=0;e&&a<t.length;a++)e=e[t[a]];return e}function j(e,t,a,n){let o=this.l[e],r=o&&o.length-a;if(r&&0<r)return(r>t||a)&&(o=o.slice(a,a+t)),n&&(o=U.call(this,o)),{tag:e,result:o}}function U(e){let t=Array(e.length);for(let a=0,n;a<e.length;a++)n=e[a],t[a]={id:n,doc:this.store[n]};return t}W("add"),W("append"),W("search"),W("update"),W("remove"),(n=B.prototype).add=function(e,t,a){if(l(e)&&(e=z(t=e,this.key)),t&&(e||0===e)){if(!a&&this.register[e])return this.update(e,t);for(let n=0,o,r;n<this.h.length;n++)r=this.h[n],d(o=this.K[n])&&(o=[o]),function e(t,a,n,o,r,i,s,d){if(t=t[s]){if(o===a.length-1){if(t.constructor===Array){if(n[o]){for(a=0;a<t.length;a++)r.add(i,t[a],!0,!0);return}t=t.join(" ")}r.add(i,t,d,!0)}else if(t.constructor===Array)for(s=0;s<t.length;s++)e(t,a,n,o,r,i,s,d);else s=a[++o],e(t,a,n,o,r,i,s,d)}}(t,o,this.A,0,this.index[r],e,o[0],a);if(this.I){let n=z(t,this.I),o=i();d(n)&&(n=[n]);for(let t=0,r,i;t<n.length;t++)if(!o[r=n[t]]&&(o[r]=1,i=this.l[r]||(this.l[r]=[]),!a||!i.includes(e))&&(i[i.length]=e,this.m)){let t=this.register[e]||(this.register[e]=[]);t[t.length]=i}}if(this.store&&(!a||!this.store[e])){let a;if(this.C){a=i();for(let e=0,n;e<this.C.length;e++)d(n=this.C[e])?a[n]=t[n]:function e(t,a,n,o,r){if(t=t[r],o===n.length-1)a[r]=t;else if(t){if(t.constructor===Array)for(a=a[r]=Array(t.length),r=0;r<t.length;r++)e(t,a,n,o,r);else a=a[r]||(a[r]=i()),r=n[++o],e(t,a,n,o,r)}}(t,a,n,0,n[0])}this.store[e]=a||t}}return this},n.append=function(e,t){return this.add(e,t,!0)},n.update=function(e,t){return this.remove(e).add(e,t)},n.remove=function(e){if(l(e)&&(e=z(e,this.key)),this.register[e]){for(var t=0;t<this.h.length&&(this.index[this.h[t]].remove(e,!this.o),!this.m);t++);if(this.I&&!this.m)for(let a in this.l){let n=(t=this.l[a]).indexOf(e);-1!==n&&(1<t.length?t.splice(n,1):delete this.l[a])}this.store&&delete this.store[e],delete this.register[e]}return this},n.search=function(e,t,a,n){a||(!t&&l(e)?(a=e,e=""):l(t)&&(a=t,t=0));let o=[],r=[],s,c,h,u,p,f,m=0;if(a){if(a.constructor===Array)h=a,a=null;else{if(e=a.query||e,h=(s=a.pluck)||a.index||a.field,u=a.tag,c=this.store&&a.enrich,p="and"===a.bool,t=a.limit||t||100,f=a.offset||0,u&&(d(u)&&(u=[u]),!e)){for(let e=0,a;e<u.length;e++)(a=j.call(this,u[e],t,f,c))&&(o[o.length]=a,m++);return m?o:[]}d(h)&&(h=[h])}}h||(h=this.h),p=p&&(1<h.length||u&&1<u.length);let g=!n&&(this.o||this.async)&&[];for(let s=0,l,w,y;s<h.length;s++){let b;if(d(w=h[s])||(w=(b=w).field,e=b.query||e,t=b.limit||t,c=b.enrich||c),g)g[s]=this.index[w].searchAsync(e,t,b||a);else{if(y=(l=n?n[s]:this.index[w].search(e,t,b||a))&&l.length,u&&y){let e=[],a=0;p&&(e[0]=[l]);for(let t=0,n,o;t<u.length;t++)n=u[t],(y=(o=this.l[n])&&o.length)&&(a++,e[e.length]=p?[o]:o);a&&(y=(l=p?T(e,t||100,f||0):function(e,t){let a=i(),n=i(),o=[];for(let t=0;t<e.length;t++)a[e[t]]=1;for(let e=0,r;e<t.length;e++){r=t[e];for(let e=0,t;e<r.length;e++)a[t=r[e]]&&!n[t]&&(n[t]=1,o[o.length]=t)}return o}(l,e)).length)}if(y)r[m]=w,o[m++]=l;else if(p)return[]}}if(g){let n=this;return new Promise(function(o){Promise.all(g).then(function(r){o(n.search(e,t,a,r))})})}if(!m)return[];if(s&&(!c||!this.store))return o[0];for(let e=0,t;e<r.length;e++){if((t=o[e]).length&&c&&(t=U.call(this,t)),s)return t;o[e]={field:r[e],result:t}}return o},n.contain=function(e){return!!this.register[e]},n.get=function(e){return this.store[e]},n.set=function(e,t){return this.store[e]=t,this},n.searchCache=x,n.export=function(e,t,a,n,o,r){let i;if(void 0===r&&(i=new Promise(e=>{r=e})),o||(o=0),n||(n=0),n<this.h.length){let a=this.h[n],i=this.index[a];t=this,setTimeout(function(){i.export(e,t,o?a:"",n,o++,r)||(n++,o=1,t.export(e,t,a,n,o,r))})}else{let t,i;switch(o){case 1:t="tag",i=this.l,a=null;break;case 2:t="store",i=this.store,a=null;break;default:r();return}N(e,this,a,t,n,o,i,r)}return i},n.import=function(e,t){if(t)switch(d(t)&&(t=JSON.parse(t)),e){case"tag":this.l=t;break;case"reg":this.m=!1,this.register=t;for(let e=0,a;e<this.h.length;e++)(a=this.index[this.h[e]]).register=t,a.m=!1;break;case"store":this.store=t;break;default:let a=(e=e.split("."))[0];e=e[1],a&&e&&this.index[a].import(e,t)}},k(B.prototype);let M=[g("[\xe0\xe1\xe2\xe3\xe4\xe5]"),"a",g("[\xe8\xe9\xea\xeb]"),"e",g("[\xec\xed\xee\xef]"),"i",g("[\xf2\xf3\xf4\xf5\xf6ő]"),"o",g("[\xf9\xfa\xfb\xfcű]"),"u",g("[\xfdŷ\xff]"),"y",g("\xf1"),"n",g("[\xe7c]"),"k",g("\xdf"),"s",g(" & ")," and "];function H(e){var t=e=""+e;return t.normalize&&(t=t.normalize("NFD").replace(p,"")),h.call(this,t.toLowerCase(),!e.normalize&&M)}let Y=/[^a-z0-9]+/,Q={b:"p",v:"f",w:"f",z:"s",x:"s",ß:"s",d:"t",n:"m",c:"k",g:"k",j:"k",q:"k",i:"e",y:"e",u:"o"};function V(e){e=H.call(this,e).join(" ");let t=[];if(e){let a=e.split(Y),n=a.length;for(let o=0,r,i=0;o<n;o++)if((e=a[o])&&(!this.filter||!this.filter[e])){let a=Q[r=e[0]]||r,n=a;for(let t=1;t<e.length;t++){let o=Q[r=e[t]]||r;o&&o!==n&&(a+=o,n=o)}t[i++]=a}}return t}let K=[g("ae"),"a",g("oe"),"o",g("sh"),"s",g("th"),"t",g("ph"),"f",g("pf"),"f",g("(?![aeo])h(?![aeo])"),"",g("(?!^[aeo])h(?!^[aeo])"),""];function X(e,t){return e&&(2<(e=V.call(this,e).join(" ")).length&&(e=m(e,K)),t||(1<e.length&&(e=w(e)),e&&(e=e.split(" ")))),e||[]}let J=g("(?!\\b)[aeo]");v["latin:default"]={encode:y,F:!1,G:""},v["latin:simple"]={encode:H,F:!1,G:""},v["latin:balance"]={encode:V,F:!1,G:"strict"},v["latin:advanced"]={encode:X,F:!1,G:""},v["latin:extra"]={encode:function(e){return e&&(1<(e=X.call(this,e,!0)).length&&(e=e.replace(J,"")),1<e.length&&(e=w(e)),e&&(e=e.split(" "))),e||[]},F:!1,G:""};let Z=new({Index:R,Document:B,Worker:F,registerCharset:function(e,t){v[e]=t},registerLanguage:function(e,t){b[e]=t}}).Document({tokenize:"full",document:{id:"url",index:"content",store:["title","pageTitle"]},context:{resolution:9,depth:2,bidirectional:!0}});for(let{url:e,sections:t}of[{url:"/",sections:[["Welcome to the Permaweb",null,["Data in paradise. The AR.IO ecosystem is dedicated to cultivating products and protocols for sustaining access to digital permanence, making the permaweb available to everyone. Powered by the IO Token, this global network of Gateways connects users to permanently stored data, files, applications, and web pages on the Arweave decentralized storage network.","ar.io Gateways\nar.io's modular gateways are built for the Arweave permanent data storage network and optimized for data retrieval, caching, serving and indexing transactions.","ArNS Names\nArNS is a censorship-resistant naming system stored on Arweave, enabling user-friendly domain names that link to permaweb dApps, web pages, data, and identities.","IO Token\nIO powers the AR.IO Network and its suite of permaweb applications as a permissionless and censorship resistant medium of common value for the network.","White Paper\nA comprehensive document that details a decentralized and incentivized gateway network aimed at making the permaweb more accessible to all.","The Permaweb\nLearn more about the Arweave network, the permaweb and the reason the ar.io gateway network was built.","ar://\nThe Wayfinder protocol transforms traditional Arweave URLs into more concise and user-friendly forms.","ar.io = Arweave Input & Output","Questions? Join our Discord","ar.io Discord"]]]},{url:"/community-resources",sections:[["Community Resources",null,["ar.io Github","ar.io Twitter","ar.io Discord","Contact Us Directly"]]]},{url:"/build/ar-io-sdk",sections:[["ar.io SDK",null,[]],["Overview","overview",["The ar.io SDK provides functionality for interacting with the ar.io ecosystem of services and protocols. This includes, the ar.io Network, gateways, the IO token,  and ArNS domains. The ar.io SDK is available for both NodeJS and web environments."]],["ar.io Network","ar-io-network",["The ar.io Network is the AO smart contract process that controls all child services and protocols.","The ar.io SDK supports read operations to access various details about the current or historical state of the network. It also provides write operations for managing features such as the Gateway Address Registry and IO token."]],["Gateways","gateways",["ar.io gateways are open source nodes that index and serve Arweave transaction headers and data items. Gateway operators may join their gateway to the Gateway Address Registry (GAR), which makes the gateway discoverable using the ar.io SDK. The gateway information is stored in the ar.io AO contract as a JSON object with the following attributes:","The ar.io SDK supports write operations for gateway management, including joining, leaving, and updating settings. It also provides read operations for discovering gateways in the GAR and retrieving details about specific gateways."]],["IO Token","io-token",["IO (ɸ) is an AO token that powers the ar.io Network and and its suite of permaweb applications. It is used to join the GAR, as payment for services like ArNS, as incentives for participation in the ar.io Network, and more.","The ar.io SDK supports read and write operations for getting token information and balances, or transferring tokens."]],["ArNS","ar-ns",["The Arweave Name System (ArNS) is a protocol which allows for assigning friendly names to Arweave transactions or data items. Powered by Arweave Name Tokens (ANTs), AO tokens that manage settings for individual ArNS domains, ArNS enables easy interaction with data stored on Arweave.","The ar.io SDK supports read and write operations for managing ArNS domains, including retrieving domain information, leasing, purchasing, and extending leases. Additionally, it allows direct read and write access to ANTs."]]]},{url:"/build/gateways",sections:[["Gateway Architecture",null,[]],["Overview","overview",["A gateway’s primary role in the Arweave ecosystem is to act as a bridge between the Arweave network and the outside world. This means that a gateway's main task is to make it easier for users to interact with the Arweave network by simplifying the technical processes of writing, reading, and discovering data on the blockweave in a trust-minimized fashion.","The core functions of a general Arweave gateway are broken down into the following areas.","Writing data involves:","Proxying Layer 1 transaction headers to one or more healthy and active Arweave nodes (miners) to facilitate inclusion in the mempools of as many nodes as possible.","Proxying chunks for Layer 1 Arweave transactions to Arweave nodes to help facilitate storage and replication of the chunks on the blockweave.","Receiving and bundling so-called Layer 2 data items (e.g., ANS-104 spec) as Layer 1 transactions.","Reading involves retrieving:","Transaction headers for a Layer 1 Arweave transaction.","Individual data chunks for a Layer 1 Arweave transaction.","Blocks from the blockweave.","Storage pricing rates for data from the Arweave node network.","Contiguous streams of chunks representing an entire Layer 1 transaction.","Layer 2 bundled data items (e.g., ANS-104).","Wallet information (e.g., token balance).","Discovering data involves:","Facilitating efficient, structured queries for Layer 1 and Layer 2 transaction and wallet data by:","examining incoming streams of data (i.e., directly ingested transactions and data items, blocks emitted by the chain, etc.).","managing index data in a database or analogous data store.","Parsing and executing user queries.","Facilitating friendly-path routing via Arweave manifest indexing."]],["AR.IO Gateway Benefits","ar-io-gateway-benefits",["AR.IO gateways provide many new benefits and capabilities beyond general Arweave gateways:","Providing the modularity and configurability necessary for operating extensible gateways that can be deployed at small or large scales to meet the needs of specific applications, use cases, communities, or business models.","Providing pluggable means for consuming telemetry data for internal and external monitoring and alerting.","Facilitating friendly-subdomain-name routing to Arweave transactions via a direct integration with the Arweave Name System (ArNS).","Facilitating configurable content moderation policies.","Providing connectivity to a decentralized network of other AR.IO gateways, enabling data sharing and other shared workloads."]],["Gateway Modularity","gateway-modularity",["A design principle of AR.IO gateways is that their core components should be interchangeable with compatible implementations.","The core services in the gateway are written in Typescript, with flexible interfaces to the various subsystems and databases. This allows operators to customize their gateway to meet their specific requirements. Gateway services can be turned on or off depending on the operator's needs. For example, an operator might choose to have their gateway serve data, but not actively index Layer 2 bundled data.","This flexibility also allows operators to utilize the technologies that are appropriate for the scale and environments in which they operate.","For example, small scale operators might want to use low-overhead relational databases to power their indexing while larger scale operators might opt to use cloud-native, horizontally scalable databases. Analogous examples for storage and caching exist as well.","Gateway Tech Stack Options","Topology\nChain Index\nBundle Index\nData Index\nData Store","Small\nSQLite\nSQLite\nSQLite\nLocal File System","Large\nPostgreSQL\nCassandra\nCassandra\nS3 Compatible"]],["ARNS Indexing and Routing","arns-indexing-and-routing",["The Arweave Name System’s (ArNS) state is managed by the IO token’s smart contract. AR.IO gateways shall perform the following minimum functions relative to ArNS:","Actively track state changes in the contract.","Maintain up-to-date indexes for routing configurations based on the state of the IO contract as well as the states of the Arweave Name Token (ANT) contracts to which each name is affiliated.","Manage the expiration of stale records.","Facilitate ArNS routing based on the subdomains specified on incoming requests where appropriate.","Provide a custom HTTP response header for ArNS requests indicating the corresponding Arweave transaction ID."]],["Content Moderation","content-moderation",["The AR.IO Network will adopt Arweave’s voluntary content moderation model whereby every participant of the network has the autonomy to decide which content they want to (or can legally) store, serve, and see. Each gateway operating on the network has the right and ability to blocklist any content (or address) that is deemed in violation of its content policies or non-compliant with local regulations."]]]},{url:"/learn/foundation",sections:[["AR.IO Foundation",null,[]],["What is the AR.IO Foundation?","what-is-the-ar-io-foundation",["The AR.IO Foundation is dedicated to the stewardship and prosperity of The AR.IO Network and its associated token ecosystem. It holds a non-revocable, exclusive license to promote the development of the network, prioritizing the ecosystem's wellbeing, particularly the users.","Key strategies employed by the Foundation (with the assistance of third-party teams) in support of the network include:","Providing grants and incentive programs","Making strategic investments","Engaging in direct software development","Producing educational content","Conducting publicity and marketing initiatives","Forming partnerships"]],["Guiding Philosophy","guiding-philosophy",["The AR.IO Foundation serves as a unifying force within the ecosystem, facilitating communication, fostering innovation, and driving overall progress. Its primary aim is to function as a supportive entity rather than exerting excessive control over the network or disrupting its economic processes.","The key objectives of the AR.IO Foundation are as follows:","Sustaining and advancing the AR.IO Network: The Foundation takes responsibility for the continued development and enhancement of the AR.IO Network. It works collaboratively with developers, contributors, and stakeholders to ensure the network remains robust, secure, and adaptable to evolving technological landscapes.","Allocating resources to promote ecosystem and community growth: The Foundation is entrusted with managing and allocating resources to fuel the growth and expansion of the AR.IO ecosystem. This includes funding research initiatives, supporting innovative projects, and encouraging community-driven initiatives that contribute to the network's overall health and vitality.","Managing the core development of the AR.IO Network: The Foundation oversees and coordinates the core development efforts of the AR.IO Network. This involves coordinating with developers and technical teams to implement upgrades, address vulnerabilities, and introduce new features that align with the network's vision and community consensus.","Fostering collaboration and inclusivity: The Foundation actively fosters a culture of collaboration and inclusivity within the AR.IO ecosystem. It encourages diverse perspectives and welcomes contributions from individuals and organizations, fostering an environment where all participants can thrive and collectively shape the network's future.","By diligently pursuing these objectives, the AR.IO Foundation aims to create an environment where the AR.IO Network can flourish as a decentralized, secure, and resilient platform, contributing positively to the broader permaweb and decentralized storage landscape."]]]},{url:"/learn/glossary",sections:[["Glossary",null,["Many novel terms and acronyms are used by the Arweave ecosystem as well as some new ones introduced by AR.IO. The list below is intended to serve as a non-exhaustive reference of those terms:"]],["aoComputer (AO):","ao-computer-ao",["The aoComputer is the actor oriented machine that emerges from the network of nodes that adhere to its core data protocol, running on the Arweave network. It is a single, unified computing environment, hosted on a heterogenous set of nodes in a distributed network. AO is designed to offer an environment in which an arbitrary number of parallel processes can be resident, coordinating through an open message passing layer. This message passing standard connects the machine's independently operating processes together into a 'web' -- in the same way that websites operate on independent servers but are conjoined into a cohesive, unified experience via hyperlinks."]],["Arweave Name System (ArNS):","arweave-name-system-ar-ns",["A decentralized and censorship-resistant naming system enabled by AR.IO gateways which connects friendly names to permaweb applications, pages, and data."]],["Arweave Name Token (ANT), “Name Token”:","arweave-name-token-ant-name-token",["An aoComputer based token, that is connected to each registered ArNS Name. Each ANT gives the owner the ability to update the subdomains and Arweave transaction IDs used by the registered name as well as transfer ownership and other functions."]],["Arweave Network Standards (ANS):","arweave-network-standards-ans",["Drafts and finalized standards for data formats, tag formats, data protocols, custom gateway features and anything that is built on top the Arweave Network. Specific standards are denoted by an associated number, e.g., ANS-###."]],["Base Layer Transaction:","base-layer-transaction",["Refers to one of up to 1,000 transactions that make up a single Arweave block. A base layer transaction may contain bundled data items."]],["Bundle, bundling:","bundle-bundling",["An Arweave concept introduced in ANS-104 that allows for a way of writing multiple independent data transactions into one base layer transaction. Bundled transactions contain multiple independent transactions, called data items, wrapped into one larger transaction. This offers two major network benefits:","A scaling solution for increasing the throughput of uploads to the Arweave network,","Allows delegation of payment for an upload to a third party, while maintaining the identity and signature of the person who created the upload, without them needing to have a wallet with funds."]],["Bundled Data Item (BDI):","bundled-data-item-bdi",["A data item / transaction nested within an ANS-104 bundled transaction."]],["Bundler:","bundler",["A third-party service and gateway feature that bundles data files on a user’s behalf."]],["Chunk:","chunk",["A chunk is a unit of data that is stored on the Arweave network. It represents a piece of a larger file that has been split into smaller, manageable segments for efficient storage and retrieval."]],["Decentralized, decentralization, etc:","decentralized-decentralization-etc",["A nonbinary, many axis scale enabling a system or platform to be: permissionless, trustless, verifiable, transparent, open-source, composable, resilient, and censorship resistant. Ultimately, something that is decentralized is not prone to single points of failure or influence."]],["Epoch:","epoch",["A specific duration (e.g., one block-week) during which network activities and evaluations are conducted. It serves as a key time frame for processes such as observation duties, performance assessments, and reward distributions within the network's protocols."]],["Gateway:","gateway",["A node operating on the Arweave network that provides services for reading from, writing to, and indexing the data stored on the permaweb. Sometimes referred to as “permaweb nodes”."]],["Gateway Address Registry (GAR):","gateway-address-registry-gar",["A decentralized directory maintained in the AR.IO smart contract. It serves as the authoritative list of all registered gateways on the AR.IO Network. The registry provides detailed metadata about each gateway to facilitate discovery, health monitoring, and data sharing among permaweb apps and users. The GAR is designed to be easily queryable, sortable, and filterable by end users and clients, allowing for tailored selections based on various criteria to meet specific use cases."]],["Indexing:","indexing",["The act of organizing transaction data tags into queryable databases."]],["Layer 2 Infrastructure:","layer-2-infrastructure",["Layer 2 refers to the technology / infrastructure stack built “above” a base layer. In this use, the AR.IO Network would be considered Layer 2 infrastructure to the base Arweave protocol."]],["Manifest (aka Path Manifest, Arweave Manifest):","manifest-aka-path-manifest-arweave-manifest",["Special “aggregate” files uploaded to Arweave that map user-definable sub-paths with other Arweave transaction IDs. This allows users to create logical groups of content, for example a directory of related files, or the files and assets that make up a web page or application. Instead of having to manually collate these assets, manifests group them together so that an entire website or app can be launched from a single manifest file. Gateways can interpret this structure, so that users can then reference individual transactions by their file name and/or path."]],["Mempool:","mempool",['Short for "memory pool," is a component of Arweave mining nodes that temporarily stores valid transactions that have been broadcasted to the network but have not yet been added to a block.']],["Miner (aka Arweave Node):","miner-aka-arweave-node",["A node operating on the Arweave network responsible for data storage and recall."]],["Native Address:","native-address",["The way public addresses are commonly (or by spec) represented in their native blockchain. Arweave keys are 43 character base64url representations of the public key, while Ethereum keys use a different hashing algorithm and start with 0x etc."]],["Normalized Address:","normalized-address",["43 character base64url representation of the sha256 hash of a public key. Public keys for other chains can be normalized by this representation."]],["Observer:","observer",["A gateway selected to evaluate the performance of peer gateways in resolving ArNS names. Observers assess and report on the operational efficacy of other gateways."]],["Optimistic Indexing:","optimistic-indexing",["Indexing transaction or data item headers before the associated L1 transaction has been accepted and confirmed in a chain block."]],["Owner:","owner",["Generally, the public key of the signer."]],["Owner Address:","owner-address",["The normalized address of the owner"]],["Period:","period",["Refers to a predefined time span (e.g., a block-day) that serves as a cycle for network activities such as dynamic pricing. It is a fundamental unit of time for operational and protocol processes within the network."]],["Permaweb:","permaweb",["The permaweb is the permanent and decentralized web of files and applications built on top of Arweave."]],["Protocol Balance:","protocol-balance",["The primary sink and source of IO tokens circulating through the AR.IO Network. This balance is akin to a central vault or wallet programmatically encoded into the network’s smart contract from which ArNS revenue is accumulated and incentive rewards are distributed."]],["Protocol Rewards:","protocol-rewards",["IO Token incentive rewards distributed by the protocol to the network’s eligible users and gateway operators."]],["Public Key:","public-key",["The publicly known keys for a signer (wallet). Public keys are different byte lengths depending on the signer type (e.g. Arweave vs. Ethereum (ECDSA), vs Solana, etc.)"]],["Seeding:","seeding",["Refers to the act of propagating new data throughout the network. Miner nodes seed Arweave base layer transaction data to other miners, while gateways ensure that the transactions they receive reach the Arweave nodes. Both gateways and Arweave nodes seed base layer transactions and data chunks."]],["Staking (of tokens):","staking-of-tokens",["Refers to the process of locking IO tokens into a protocol-facilitated vault, temporarily removing them from circulation until unlocked. This action represents an opportunity cost for the gateway operator and serves as a motivator to prioritize the network's collective interests."]],["Transaction ID (txID):","transaction-id-tx-id",["Every transaction and data file uploaded to Arweave is assigned a unique identifier code known as the Transaction ID. These txID’s can be referenced by users to easily locate and retrieve files."]],["Trust-minimization:","trust-minimization",["Relates to enacting network security by minimizing the number of entities and the degree to which they must be trusted to achieve reliable network interactions. A network with trust-minimizing mechanisms means that it has reduced exposure to undesirable third-party actions and built-in incentives to reward good behavior while punishing bad behavior."]],["Vault:","vault",["Token vaults are protocol level mechanisms used to contain staked tokens over time. Each vault contains a starting block height, ending block height (if applicable), along with a balance of tokens."]]]},{url:"/learn/introduction",sections:[["Introduction",null,[]],["TL;DR","tl-dr",["The goal of AR.IO is to create a decentralized and incentivized gateway network aimed at attracting more gateways to the Arweave network therefore making the permaweb more accessible to all. At the core of AR.IO’s incentivization mechanism is the IO Token, a utility token used for joining the network, payments, and protocol incentives. The network features modular and composable gateway infrastructure in addition to the Arweave Name System (ArNS) – a system for assigning friendly domain names to permaweb data."]],["What is AR.IO","what-is-ar-io",["AR.IO is a global network, protocol, and currency that enables the permaweb. It is the decentralized and incentivized gateway node network of the Arweave ecosystem. Comprised of operators, developers, and end users, this network leverages a utility token to proliferate access to the permaweb: the files, applications, web pages and data permanently stored on the Arweave decentralized storage network.","The various nodes on the AR.IO Network, known as gateways, are the interface between users and the permaweb. Each gateway acts like a “Permaweb Service Provider” and supports multiple, value-added, services like reading, writing, querying, and indexing of Arweave data.","The AR.IO token, referred to as IO or ɸ, is an aoComputer based token used for protocol incentives, gateway accountability, and payments for services like the Arweave Name System (ArNS). It will enable gateways on the AR.IO Network to operate under a low-trust model with the users of their service."]],["Why AR.IO ?","why-ar-io",["Arweave (a Layer 1 blockchain network) offers scalable and permanent on-chain data storage in a sustainable manner. It does this by incentivizing miner nodes through a tokenomic endowment model which ensures data is globally stored and replicated for hundreds of years without the need for continual payment by its uploader.","However, this Layer 1 protocol does not incorporate all the needs of permaweb applications like data indexing, querying, retrieval, and other vital services. Consequently, over the pasts few years, infrastructure services have been independently developed and deployed to meet the demands of the permaweb at scale. Users and apps have come to rely on these gateway utilities, but they are closed source, have complex codebases, and are expensive to operate.","Arweave also does not offer any tokenomic incentives to offset the expenses associated with operating a gateway, which has led to the community’s reliance on a single centrally controlled gateway subsidized for the betterment of the network: arweave.net. While arweave.net currently caches and indexes the entire weave with a high quality of service, it is a single bottleneck for the whole ecosystem.","AR.IO seeks to reduce the barriers of entry and attract more gateway operators to the permaweb with the goal of further enhancing its overall health, resiliency, and functionality through decentralized mechanisms that are as trustless as possible.","The solution will be applied in two directions:","By reducing gateway overhead costs with open source, efficient modular networked architecture.","By creating an economic incentive layer with the IO Token.","Our goal is to create a framework for a healthy and sustainable decentralized gateway network."]]]},{url:"/learn/labs",sections:[["AR.IO Labs",null,[]],["What is AR.IO Labs?","what-is-ar-io-labs",["AR.IO Labs serves as the for-profit arm of the AR.IO ecosystem, playing a crucial role in driving innovation, commercial development, and entrepreneurial initiatives. While the AR.IO Foundation focuses on the non-profit aspects and sustenance of the AR.IO Network, AR.IO Labs is geared towards harnessing the network's potential to create profitable ventures and cutting-edge products.","Key focuses of AR.IO Labs include:","Innovation and research","Commercial development","Incubation of startups","Collaboration with external entities","Token and asset management","Revenue generation for ecosystem sustainability","Adoption and marketing","Resilience and growth","As the for-profit arm of the AR.IO ecosystem, AR.IO Labs works in tandem with the AR.IO Foundation to create a sustainable and flourishing decentralized network that thrives both commercially and altruistically, fostering a balanced and impactful presence within the blockchain and decentralized technology landscape."]]]},{url:"/learn/token",sections:[["The IO Token",null,["NOTE: The IO Token and its associated functions are still in development and have not yet been released."]],["Overview","overview",["IO is the multifunction aoComputer based token that powers The AR.IO Network and its suite of permaweb applications. The IO Token (ɸ) has many uses, including:","Protocol incentives,","Staking by gateways,","Payments for services like the Arweave Name System (ArNS),","Gateway delegated staking","The token acts as a permissionless and censorship resistant medium of common value for the network."]]]},{url:"/build/ar-io-sdk/getting-started",sections:[["Getting Started",null,[]],["Prerequisites","prerequisites",["node >= v18.0.0","npm or yarn"]],["Installation","installation",[]],["Quick Start","quick-start",["The following examples demonstrate how to use the ar.io SDK to retrieve a list of active gateways from the Gateway Address Registry (GAR) across different environments.","Node","Web",":::warning Polyfills\nPolyfills are not provided by default for bundled web projects (Vite, ESBuild, Webpack, Rollup, etc.) . Depending on your apps bundler configuration and plugins, you will need to provide polyfills for various imports including crypto, process and buffer. Refer to examples/webpack and examples/vite for examples. For other project configurations, refer to your bundler's documentation for more information on how to provide the necessary polyfills.\n:::","Output","The output for obtaining a list of gateways, regardless of the environment used, will follow the structure outlined below:"]]]},{url:"/build/ar-io-sdk/release-notes",sections:[["ar.io SDK Changelog",null,[]],["Overview","overview",["Welcome to the documentation page for the ar.io SDK release notes. Here, you will find detailed information about each version of the ar.io SDK, including the enhancements, bug fixes, and any other changes introduced in every release. This page serves as a comprehensive resource to keep you informed about the latest developments and updates in the ar.io SDK. For those interested in exploring the source code, each release's code is readily accessible at our GitHub repository: ar.io SDK change logs. Stay updated with the continuous improvements and advancements in the ar.io SDK by referring to this page for all release-related information."]],["[2.4.0] (2024-11-12)",null,["View changes on GitHub","Bug Fixes","ant: add reassignName to ant implementation (9e705a9)","auctions: fix submitAuctionApi to accept type and years (6780a80)","auctions: update auction APIs and types (5fd2ccc)","auctions: update read APIs to fetch auctions, use vite example display active auction (32001c2)","auctions: update types and add intervalMs (bc21200)","corrected AoVaultData field to be startTimestamp (b9888bf)","delegates: fixes type (ae7be5c)","emitter: do non strict checks on state in arns emitter (6566a3c)","emitter: provide strictness in constuctor (060df05)","exports: add exports to barrel file (fec094e)","exports: dont export http stuff) (d6369aa)","io: consolidate instantGatewayWithdrawal and instantGatewayWithdrawal to just instantWithdrawal, update `cancelWithdrawal (ea9f3eb)","io: include address in delegate type for gateway (46ef1a7)","lint: add lint fix and missing bracket (72446aa)","PE-7080: add apis for fetching paginated delegates (e3d4af2)","schema: add strict mode to ANT with default to false (4864abf)","schemas: add passthrough on schema checks for ants (9cb2776)","schemas: add zod schemas and tests (feba587)","schema: specify HandlerNames instead of Handlers (44cc472)","schemas: update ant schema and tests (f3284ed)","schema: update handlers schema (6ec52e4)","strict: allow for passing in strict mode on apis (e147220)","tag: small tweak to instant tag (663de6f)","test: correct params for get record (f999c49)","tests: add esm tests and remove redundant cjs tests (95244ea)","tests: add js path on imports (db1520a)","tests: simplify strict check on test (62c9140)","types: add back delegates for AoGateway (d337a74)","types: update types to match contract (cb7d2b4)","types: use generic on PageParms for sortBy, update delegate types (7a1abc4)","util: create schema parsing util to pretty format errors (367537a)","validations: add zod schema validations on ant returns (163c2f1)","withdrawls: update API for cancelling withdrawls to allow delegate and operator withdrawls (5cb680a)","Features","ant: adds set-keywords and set-description methods for ants) (3b260a2)","ant: support releasing of name of ANTs (16363e8)","arns: add upgradeRecord API (9c1726d)","auctions: add auctions api to IO classes (974897b)","delegates: add instant delegate withdrawal for a fee (4b4cb8f)","getVault: init IO method PE-7081 (0e3cde2)","paginated vaults: init SDK paginated vaults PE-7081 (6d079f9)","paginated vaults: use flat array over nested vaults PE-7081 (e17cfb7)"]],["[2.3.2] (2024-10-16)","2-3-2-2024-10-16",["View changes on GitHub","Bug Fixes","io: add getDemandFactor api (feab461)","io: update getTokenSupply to type that returns full breakdown of tokens (e790055)","types: add totalEligibleGateways to AoEpochDistributionData type (9a35d39)","types: update gateways to include services (a3fe5b4)"]],["[2.3.1] (2024-10-09)","2-3-1-2024-10-09",["View changes on GitHub","Bug Fixes","use AoEpochObservationData type to match what is coming back from contract (684abf3)"]],["[2.3.0] (2024-10-08)",null,["View changes on GitHub","Bug Fixes","ao: check messages is not empty to avoid .length error when evaluating outputs of dryrun (a7b4953)","logs: enable logging in spawn and evolve utils (08ce71a)","luaID: update lua id to latest for ant source code (9c13dd3)","main: merge main back to alpha, release hotfixes on alpha (9299427)","types: add source code tx id to ant state type (8949f04)","types: fix types on ant (3bdb3a6)","types: remove restricted type (b1fac75)","types: update type and tests (877b03f)","types: update types (883ffb3)","Features","delegates: add cancel delegate withdrawal method (a3827dc)","io: add api for querying get registration fees handler to AoIORead class (7b3909f)"]],["[2.2.5] (2024-09-26)","2-2-5-2024-09-26",["View changes on GitHub","Bug Fixes","ant: allow sending tags on ant write interactions (99c24f8)"]],["[2.2.4] (2024-09-26)","2-2-4-2024-09-26",["View changes on GitHub","Bug Fixes","types: update getInfo types on IO (7a0d20d)"]],["[2.2.3] (2024-09-25)","2-2-3-2024-09-25",["View changes on GitHub","Bug Fixes","types: update type and tests (877b03f)"]],["[2.2.2] (2024-09-23)","2-2-2-2024-09-23",["View changes on GitHub","Bug Fixes","deps: update arbundles to @dha-team/arbundles (c41e4e4)"]],["[2.2.1] (2024-09-16)","2-2-1-2024-09-16",["View changes on GitHub","Bug Fixes","types: correct totalEpochCount for gateway stats (f82fed8)"]],["[2.2.0] (2024-08-30)","2-2-0-2024-08-30",["View changes on GitHub","Bug Fixes","logger: permit logger as argument for typeguard util and default it (45df626)","register: update spawn ant to register at end of spawn (4320c80)","signer: add typeguard util for aoSigner (0d7f210)","signing: add aosigner to contract signer (3b0495a)","tests: dont send messages to ao in e2e tests (e7108da)","tests: reconfigure test structure (1872a26)","tests: use test-wallet fixture in tests instead of generating anew each time (27a5dc2)","typeguard: return true or false in typeguard and log the error (4b851c5)","types: update types for epoch distributions (5aedf50)","util: use ANTRegistry class for registering ant on spawn instead of aoconnect (350112d)","Features","ant id: update lua ant id to latest (968c30e)","util: add AoAntState typeguard util (c6f457f)"]],["[2.1.0] (2024-08-07)","2-1-0-2024-08-07",["View changes on GitHub","Bug Fixes","actions: ignore engines in action (7f6f87d)","ant lua id: update to version Flwio4Lr08g6s6uim6lEJNnVGD9ylvz0_aafvpiL8FI (8cbd564)","ant: remove data from ant object, none of our ant methods require data attributes (0f267c1)","ao: update AoProcess to only support string | undefined (584aee1)","arns: update event emitter to provide more events and logs while loading arns records (8775896)","constants: do not set env var for ant registry (9e61cc7)","deps: move arconnect to dev deps (34f07d2)","emiter: use a set to filter out duplicate (7887af9)","emitter: add page size param for emitter to increase amount of records per page to 50k (b6f2157)","errors: use any type on error (f14ed5a)","events: use arns name space for events (1d67dfe)","evolve: call eval twice to ensure evolve txid is set (a6261e5)","evolve: dont double eval (a2a9121)","evolve: fixed evolve somehow (b06503b)","example: dont spawn in example (d1d5147)","example: remove unused arweave instance (d0035c0)","format: fix linting issues in format (b72dc1f)","gateway stats: update gateway stat types (a59b166)","io: add api that returns the total token supply (261c85c)","io: no longer add data to save observations (c017b52)","lint: fix lint errors and warnings (e532f4e)","lua id: set new lua id in constants (e4c3aaf)","naming: name AoSigner property aoSigner (4604524)","records: update arns emitter to use ant registry (e55a67b)","signer: describe signing function as signer vs aoSigner in case of signer type changes (3b23f80)","signer: move createAoSigner to be a util (7f7a0e6)","signer: pass in signing function instead of signer class (cba16e3)","signer: use AoSigner type as return type (8e95edd)","spawn: update spawn to use ant registry id in the tags (28dae7f)","tests: check the return of ACL on ant tests more granularly (350bab1)","tests: update e2e tests to only read from ant registry (a61e0bf)","tests: update web test to use ANT registry in app (38ca913)","tests: use const for unchanging test vars (9f965e1)","test: update browser test with data test id and render checks (93741cb)","test: use a known wallet adddress in tests (9dac280)","todo: remove completed todo comment (c868522)","types: add gateway weights to AoGateway (e725198)","types: check info on evolve util first (a44cca1)","types: remove deprecated types (c674876)","types: update AoGateway to include weights (5368668)","types: update type name to what contract returns (99edbad)","use custom event names to avoid overlap (5b919ac)","utils: revert new util (c959c81)","utils: update util to use ant registry (b2223d4)","Features","ant registry: add ant registry class (2056674)","evolve: add evolve util (47bfe20)","signing: add window arweave wallet to available signing options (7596aec)"]],["[2.0.2] (2024-07-12)","2-0-2-2024-07-12",["View changes on GitHub","Bug Fixes","types: update gateway settings type to only support observerAddress (13e073b)"]],["[2.0.1] (2024-07-11)","2-0-1-2024-07-11",["View changes on GitHub","Bug Fixes","logger: fixes the console logger to respect the log level provided by web clients (99d7993)"]],["[2.0.0] (2024-07-11)",null,["View changes on GitHub","Bug Fixes","arweave: use default arweave in IO (21d25b9)","deps: replace bunyan or console depending on the client environment (9d940aa)","log: allow log level configuration for clients  (9cb0981)","log: replace bunyan with winston to ensure browser compatibility (80b38e0)","Features","io: add paginated gateway support for larger state objects (e.g. balances, records, and gateways) (b23efa8)","util: add utility for fetching all records (8df2aac)","io: add leaveNetwork API (54222ce)","BREAKING CHANGES","deps: removes all smartweave implementations using warp-sdk. The result is an only AO compatible ANT and IO network contracts. Some utilities are preserved due to their usefulness.","imports: modifies web named exports to provide esm and cjs exports instead of minified bundle. The web bundle was causing issues in bundled projects, and polyfills are no longer provided by default. Refer to the README for specifications on how to use the SDK for a web project."]],["[1.2.2] (2024-07-11)","1-2-2-2024-07-11",["View changes on GitHub","Bug Fixes","api: ensure timestamps are always in miliseconds (93b162f)"]],["[1.2.1] (2024-07-04)","1-2-1-2024-07-04",["View changes on GitHub","Bug Fixes","io: default the IO process to use testnet (61bca5c)"]],["[1.2.0] (2024-07-03)","1-2-0-2024-07-03",["View changes on GitHub","Bug Fixes","ant: add event emitter util for fetching ants (ee5287b)","ant: fix read api and update types (977e0e3)","ant: handle when no data is returned (1de6610)","ants: separate out interfaces (60fd593)","ant: update apis to implement interface (9c54db0)","ant: update interface to expect undername instead of name for ant records (416cb3d)","ao ant: add handler for get state (fd20aa7)","ao reads: safely parse json (1ff5410)","ao: add AR-IO-SDK tag to process interaction (e5b5603)","ao: add default timestamp to getTokenCost (36fed1b)","ao: add getPrescribedNames for epoch api (747fad2)","ao: add retries to read interactions (67d59e2)","ao: fix tag for join network, update observation response (556f5d5)","ao: prune tags on joinNetwork (31978f9)","ao read: fix interface to have ant getState api (4e95bbd)","aos: update aos module id and lua id (e19139e)","ao: support connection config params in AO (3e6a246)","ao: support tags for all write interactions (67f8da9)","ao: update APIs for ao interface to be more descriptive (f07ac36)","ao: update epoch interfaces to support various inputs (ddc4c10)","ao: update send on process to use proper signer and evalute result (4e2f65d)","ao: update stake interface (427e8ba)","ao: use types and connect config in ao process to wrap connect from ao (05b07cf)","buy: require processId on buyRecord (cc5859f)","deps: add eventemitter3 dep (1d50cd1)","deps: use p-limit-lit to avoid jest issues (05e0673)","emitter: add a end and some console logs in the example (bc4e6b8)","emmiter: rename and move throttle to be variable powered (f9cf40d)","epochs: fix epoch default timestamp (ffb9df7)","events: return process ids on end of fetching (15e3f44)","handlers: update handler names (720b178)","io: add buyRecord API (30d5e74)","io: add epoch-settings api and tests (56555ea)","io: add init to provide custom process (8811016)","io: separate out io/ao contract interfaces (d96fa59)","io: update arns interactions on registry contract (9befe2a)","pLimit: add pLimit for util to avoid ao throttling (5b13560)","readds incorrectly removed descriptions (c77217a)","revert purchasetype tag (2dc08df)","spawn: add option state contractTxID to track where init state is from (1745766)","tags: make remaining tags ans-116 compliant (d034c8c)","tags: use updated ans-116 tag format for actions (261b788)","timeout: increase timeout period on arns emitter (b5ddb5f)","type: default to unknown return type for json (0bddce0)","types: add ao ant state type (02dbacd)","types: update some types for arns names and contract state (2d23241)","updates to use IO class and process terminology (ec45d66)","util: initial implementation of get ant process for wallet (885fa31)","Features","ant: add balance APIs to ant interface (ec67440)","ant: add utility for fetchint ant modules owned by wallet (01f7ec9)","ants: support ANT apis in SDK (b187aeb)","ao utils: add spawn ant util (d02566e)","ao: experiment with initial implementation of ao contract (6118cea)","getInfo io: add getInfo method to io class (4ef25ec)","IO: implement io/ao classes that call process apis (aab8967)"]],["[1.1.1] (2024-06-06)","1-1-1-2024-06-06",["View changes on GitHub","Bug Fixes","api: default evaluation options on getArNSReservedNames api (0a1f22e)"]],["[1.1.0] (2024-06-03)","1-1-0-2024-06-03",["View changes on GitHub","Bug Fixes","api: make evaluation options optional on the interface (9e5a1c0)","api: remove unused variable for epochBlockHeight (98c5ebc)","arweave: default to arweave.net (84c9653)","axios: add back axios-retry (9aae4de)","errors: throw AbortError on signal aborted (63bd395)","getContracts: only implement util for now (6b29c2f)","gql query: don't abstract the data protocol query (f0b8f77)","imports: import type from base route warp-contracts (bf99a85)","init: allow signer to be undefined and if so return readable (b6a05e2)","init: fix type for init to allow undefined signer (0a64ea9)","init:  remove unnecessary destructuring (81af1af)","interface: remove epochBlockHeight from interface (b646f08)","types:remove DataItem from WriteInteractionResult (eadb1a1)","types: use gql node interface for dataProtocolTransaction (79cebd9)","warp: ensure contract init on read interactions (bc3d1b8)","Features","getContracts: add get contracts on network specific providers like WarpContract (603d36e)","gql util: add smartweave gql utils (5ea3aab)","write: add tags support to write interactions on warp-contract and saveObservations (46eb4c9)"]],["[1.0.8] (2024-05-29)","1-0-8-2024-05-29",["View changes on GitHub","Bug Fixes","api: add getPriceForInteration api to ario contract (3b8083c)","bundle: minify web bundle (9266676)","api: use function map for method name (439ec1f)","reserved: add reserved arns name get methods (ad203ef)","signer: check if method is property of signer before using (c52783c)","signer: modify signer to assume the signer type based on public key being undefined (b775c96)","test: add dockerfile for running tests in certain node environments (86cf2ad)"]],["[1.0.7] (2024-05-23)","1-0-7-2024-05-23",["View changes on GitHub","Bug Fixes","contract: add extendLease and increaseUndernameSupport apis (1b13b5e)","types: fix the AtLeastOne type (ffd0869)","deps: force arweavve to 1.15.1 (2448598)","contract: make params required - properties and note (89db674)","types: update tests and use overwrite type to allow mIOtoken for certain paramaters (badcece)","api: change to increaseUndernameLimit (9b72c1e)","docs: update ario apis (4af0862)","tests: update extend test util to include a test domain (e959b7c)","token: add mIO and IO token classes to exports (f47f7d5)","types: add delegated gateway type (c877496)","types: export the token types (dfc83ae)","types: remove visible types (6ab1fc3)","types: update Gateway delegates type to use the new GatewayDelegate (ac7e924)","warp: bump warp version (db7344d)"]],["[1.0.6] (2024-05-07)","1-0-6-2024-05-07",["View changes on GitHub","Bug Fixes","warp: bump warp to fix AbortError issue on warp imports for web (c9a5613)"]],["[1.0.5] (2024-05-02)","1-0-5-2024-05-02",["View changes on GitHub","Bug Fixes","cjs: provide path alias for warp in cjs export (7f9bf9a)","logger: replace winston with bunyan (0488f75)","util: add FQDN regex that matches ArNS contract (e6d7396)","utils: manally conver from b64 to b64url to avoid web polyfill issues (766035c)","utils: use base64 for fromB64url util (42302ef)","warp-contract: correctly throw error in write interaction (c2368dd)"]],["[1.0.4] (2024-04-30)","1-0-4-2024-04-30",["View changes on GitHub","Bug Fixes","ario: update joinNetwork to accept observerWallet param (6a32dd1)"]],["[1.0.3] (2024-04-26)","1-0-3-2024-04-26",["View changes on GitHub","Bug Fixes","signer: set owner before signing data (0b558f5)"]],["[1.0.2] (2024-04-25)","1-0-2-2024-04-25",["View changes on GitHub","Bug Fixes","arweave: default to the arweave node import to avoid issues with browser environments (fc8c26e)","cacheurl: use default cache url in warpcontract (a676a3c)","init: cleanup init overload methods and tests (fa328d2)","lint: address lint issue in ArIOWriteable (4a3ee89)","tsconfig: modify some tsconfig settings to get isolated configs for web/cjs/esm (46b7acc)","typeguards: make type guards accept unknowns (7f285bb)","types: use generic types and modify the requirements for init functions (9350f78)","utils: add writeInteraction types and update base64url logic (4f5476b)"]],["[1.0.1] (2024-04-23)","1-0-1-2024-04-23",["View changes on GitHub","Bug Fixes","docs: improve README docs interface documentation for ArIO clients (b0da48c)"]],["1.0.0 (2024-04-23)","1-0-0-2024-04-23",["Bug Fixes","actions: bump node setup action (4eb49cd)","actions: freeze lockfile (dba7313)","contractadd cache config in ario constructor (1f3c0ba)","ant: add ant contract to exports (a2ff57b)","ant: add signer to ant test (4581b8d)","ant: default evaluation options for ant apis that do not take an… (#25) (0c8b55d)","ant: default evaluation options for ant apis that do not take another parameter (7c59033)","ant: default evaluation options for apis that do not require them (72b57d5)","ant: fix API for getRecords (c714aa3)","apis: remove epoch from distributions and observations (7b2d279)","arbundle version: pin version (35ffab6)","arbundles: update arbundles import (f02d83f)","ario: add cache config in ario constructor (#11) (ecb279d)","ario: formatting (c61570a)","ario: make state provider nullable and default to remote arns-service provider (fa1cb72)","ario: re-add contract default config (2296cc3)","ario: remove unused cache property (7f2d02e)","build: add setImmediate polyfill for web only (ad36776)","build: remove redundant exported type (134319b)","cache: remove cache folder (2ac9427)","cacheURL: update ario cache url setting pattern to use custom url appropriately (c76e67d)","cache: validate arweave id before setting it (5ba1175)","casing: revert to lower case casing (b5da0ab)","comments: make class logger private, remove comments (7483246)","connect: add init static function on ario class to create interaction classes (765f39c)","contract configuration: return cache url as well (b4a7bc3)","contract functions: correct contract function names (ad9bc56)","contracts: add configuration view method and update types (4fae4a2)","contracts: remove write method and type from remote contract (740d8b8)","contracttxid: make contractTxID require in remote state cache instance (dc82d21)","contracttxid: make contractTxID required in remote state cache instance (#10) (bf651bb)","ctrl flow: remove else from control flow (4b3c4c2)","deps: pin arweave (d39391c)","deps: remove axios-retry, will implement later (0218e95)","deps: remove extra crypto-browserify (9b42898)","deps: remove warp-contracts-deploy from deps (9d4f9fa)","docs: remove docs folder (47e8403)","drywrite: throw on bad drywrite and continue if successful (5052c0a)","eslintignore: remove old file names (415c163)","eslint: remove eslint comments and use this signer (32530eb)","esm: add polyfills for crypto (dd8fbfe)","esm: add polyfills for crypto (#27) (553822c)","example web: update ario instatiation (77c6842)","example: escape quotes in packagejson for example package json (fb47de0)","example: simplify example and remove unused method on remote cache (81637f8)","examples: update comments and fix package.json (db7140b)","examples: update examples to use devnet (cc037ac)","examples: update examples with records methods, and balance methods (a2d2a02)","exports: add arweavesigner and arconnectsigner to exports, clean up docs (c7860ed)","exports: update exports in indices (f794437)","exports: update package exports to have index in src folder (2cce9e3)","files: clean git cache of duplicate casing (e9eaa2d)","filters: punt filters (1c23cb3)","fixture: add type to arns state fixture (5bcac32)","formating: format (3f30f77)","gar write: fix types and flow on gar write (f5e7774)","gateway: update gateway settings to support autostake (82c6840)","generics: use named generic (4b647f0)","gitignore: remove cache from gitignore (2867abc)","git: test fix with file casing issue (c3611ee)","headers: use source-version for header (2b26d88)","http: add headers sdk headers to http config (94810ed)","husky: add commit hooks (885ce68)","imports: update to use indexed imports from warp (1242568)","indentation: fix indentation in examples (a266731)","interface: removed filters and added base records types (849834d)","interface: rename interface to ContractCache (2a0a765)","jest: remove extra config (014fbde)","lint: disable no-any warning certain types (de5f108)","lint: formatting (21224e2)","logger, errors, http: Updated to axios and axios-retry, added winston logger, more extensive custom error objects (b944f4d)","logger: remove unused logger property (9501d1d)","logs: removing debug logs (f025171)","mixin: filter private methods in mixin util (beb8610)","naming: change epoch to epochStartHeight (908971c)","naming: rename getRecord[s] to getArNSRecord[s] (bd3d4bc)","overloads: only accept warp contract as a contract config for ariowritable (e3c97e9)","polyfills: rollback polyfill on logger (0cdb2f0)","postinstall: remove husky postinstall script (c74a135)","readme: add grammar and example recs (ecc07f7)","readme: condense quick start (b35e5bd)","readme: refactor api list to header tags (817d99b)","readme: update ant header (77235ce)","readme: update ANT usage description (70c8520)","readme: update joinNetwork docs (9fcf440)","readme: update quick start (a60d96a)","readme: update readme with default provider example (68a5a16)","readme: update readme with examples (d9ee23e)","record records: update key to use result instead of record (90314db)","records: remove contractTxId filter remove lodash shrink readme (50669e1)","records: use state endpoint to fetch records (2f02c53)","recs: modify the interfaces for contracts and implement with warp and remote service (#13) (56ebb08)","release: remove release assets entirely (9d5a1b3)","release: update github release config to publish packages to github (5534d9d)","remote: getState not properly setting evalTo in http requests (55745c1)","safety: update type safety checks (32eebbc)","setimmediate: make set immediate a build dependency as it is required by the node winston (9292eaa)","signer: check that contract is connected before trying to write (d352e9c)","signer: check that contract is connected before trying to write (#29) (536a116)","signer: fix signer in WarpContracts - update tests (ea9448f)","signer: fix signer in WarpContracts - update tests (#32) (16d69d8)","signer: remove jwk use, ignore web example for now (bc7e577)","signer: remove signer, will do in other pr (d02276d)","signer: remove use of JWK, simplify constructor (#22) (d2ef573)","signer: update ANT to have signer (c7f8eee)","structure: update cache provider folder to be named caches (844c1aa)","structure: use snake case for file and folder names (37f27d3)","test warp-contract: use beforeAll to read env vars (95cc019)","tests: add test cases as a const (8458185)","tests: add test for custom arIO client config (0e6142b)","tests: change control flow pattern to .catch instead of trycatch (883de51)","tests: dont make blockHeight or sortKey undefined but rather evalTo (f76a201)","tests: instantiate new ant to connect in tests (9869415)","tests: remove dryWrite from writeInteraction, update tests (bc1becc)","tests: remove fixture and use live service for tests (30d3e8c)","tests: test 404 response (590dea6)","tests: update ario test (4208bd0)","tests: update client instantiation test to check read vs write clients (059653c)","tests: update docker compose params (a71befd)","tests: update gateways test (1fcb3e6)","tests: update stubs in tests (e4bbc6e)","tests: update test to match jest syntax (553bdbb)","tests: update tests for named prop expectation (4ea04a7)","tests: update tests to use younger contract, add evalParams config (ae890c8)","tests: update tests with constants and update types (1bdcfeb)","tests: update tests with new name (2cd1b5c)","tests: update with new names on methods (619c193)","tests: use angela for testing (10f30fe)","tests: use http not https in tests (fddba1e)","tests: use process vars as priority url (faab4f3)","test: update test to use ArweaveTransactionID class (f6c4f8b)","tsconfig, names: reverted tsconfig to nodenext resolution, changed naming convention on provider, removed extraeneous error classes, rolled back axios-retry to match our tsconfig settings (d412d44)","tyeps: set types to objects rather than top level params for easier readability (edfd77b)","type: rename all type implementations (5959045)","types and tests: update evalTo to allow undefined sortKey and block and test that (a59f05c)","types: add @ to records (53601c1)","types: make props nullable on certain read apis (f8ff552)","types: remove any type (5c80242)","types: remove any types (d8d910b)","types: remove ArweaveTransactionID type for now (3adf53b)","types: remove unnecesssary empty defaults (7d14edb)","types: rename signer to ContractSigner (87d6c90)","types: require atleast one param to update gateway settings (857ebdc)","types: update interaction type to only use read for now (2c02e90)","types: update tests, readme, and types (e9985dd)","types: use partial write type (fa6a638)","types: use string instead of any (014a262)","validate id: make validator a private method (dce4a94)","validity util: isBlockheight check more strict (2b28675)","warp contract: added test for getting state after connecting with warp (060ee2c)","warp-contract: provide logger - update isTransaction flow ctrl - use typed props (5f6e0a1)","warp-contracts: bump warp to 1.4.38 - fixed warp exports (af4a20b)","winston: move the winston polyfill - this will prevent any esm based web projects from getting polyfill issues (c8b7998)","write: add dry run - sync state - abortSignal - update interface (970bdef)","write: update utils - change error flow - update arweave constructor props (0a81c92)","write: update write methods on warp (9c0540b)","yarn: update lockfile (fd5e0ee)","Features","ant: add ANT read interface (c941c96)","ant: create ant contract class for interacting with ant contracts (6eb7ef5)","ants: add readable-writable framework to the ant client and implement write methods (3019f53)","ario contract: add distributions and observation apis (21e38d1)","arioContract: update ArIO interface and ArIOContract interface (5d87e2e)","auctions: add auctions apis (faf08c5)","contract: add distribution, observations apis, update readme and examples (0208317)","contract: create new contract classes that impelement both warp and remote cache for ant contract and ar-io contracts (855da2d)","first issue: setup examples, readme, and initial gateways provider (5a9e232)","gar methods: add gar write methods to the ario client (e01b08b)","inital providers: scaffold initial providers (4949514)","io transfer: add transfer api to ario writable client (0d37623)","observerations: add saveObservations write interaction (8dd977c)","observers: add API for fetching prescribed observers (a18e130)","observers: add API for fetching prescribed observers (#17) (17ce6de)","PE-5742: add records api to arns remote cache (#8) (c46cd39)","PE-5751: add blockheight and sortkey eval filters (#12) (832a1ad)","PE-5758: add signer to ario class (#20) (1b82077)","PE-5759: observations and distributions apis (#16) (dded361)","PE-5773: add auctions read apis (#18) (e0c6fca)","PE-5800: add epoch apis (48ee4ba)","PE-5800: epoch apis (#15) (70563b1)","PE-5825: ANT read interface (#19) (6a0c477)","records: add records api to arns remote cache (1b7f54f)","signer: add arweave signer to ario class (7e08097)","write: add write interface and base implementation on warp-contract (6dfc969)"]]]},{url:"/build/gateways/admin",sections:[["AR.IO HTTP API Admin Endpoints",null,[]],["Overview","overview",['The AR.IO HTTP API offers several endpoints that allow access to internal information and the ability to make adjustments without restarting your Gateway. Each of these endpoints behind /ar-io/admin/ have access restricted, so you will need to have set up your ADMIN_API_KEY variable and include "Authorization: "Bearer ${ADMIN_API_KEY}" in the header of your request.','When testing endpoints at <your-Gateway>/api-docs, you can enter your ADMIN_API_KEY using the green "Authorize" button near the top of the page, or by clicking any of the open lock icons next to a password protected end point.']],["Debug","debug",["The ar-io/admin/debug endpoint provides a comprehensive view of the current state of your Gateway. This endpoint has been designed to offer developers and administrators insights into the operational status of the gateway, including any errors or warnings that have occurred since the last startup.","Example response"]],["Queue Transaction","queue-transaction",["The ar-io/admin/queue-tx endpoint allows you to prioritize processing of a specific transaction, based on that transaction's ID. The id key must be set in the body of your request, and a POST request should be used.","This endpoint will also enable you to prioritize opening and indexing bundles by providing the L1 TX ID for the bundle, but only if your Gateway is operating with the ANS104_UNBUNDLE_FILTER and ANS104_INDEX_FILTER keys set.","Your Gateway will either respond with an error, or { message: 'TX queued' }"]],["Block Data","block-data",["The ar-io/admin/block-data endpoint allows you to tell your Gateway to refuse to serve certain data. In order to add to this block list, make a PUT request to this endpoint with the following in the body:","id: This should be the transaction id of the content you want to block.","notes: Notes regarding the reason this content was blocked. For documentation purposes only.","source: Identifier for the source of TX IDs you are blocking. For example, the name of a public block list. For documentation purposes only.","Your Gateway will either respond with an error, or { message: 'Content blocked' }"]]]},{url:"/build/gateways/advanced",sections:[["Advanced Configuration",null,[]],["Overview","overview",["The Getting Started guides for windows and linux contain all the information needed to start your ar.io Gateway node successfully with basic configurations. There are also ever expanding advanced configuration options that allow you to run your node in a way that is customized to your specific use case.","Most of the below options can be added to your .env file in order to customize its operation. Any changes made to your .env  require you to stop the docker containers running your node, and restarting them with the --build flag in order for the changes to take effect. See ENV for a complete list of environmental variables you can set."]],["Data Storage Location","data-storage-location",['You can set a custom location for your AR.IO Gateway to save the data it pulls from the Arweave network. There are three primary types of data stored, and you can set a unique storage location for each of these independently. These are "chunks data", "contiguous data", and "headers data". The custom location for each of these can be set in your .env file like this:','Be sure to replace "<file path>" with the path to the location where you would like the data stored. If these values are omitted, the data will be stored in the "data" directory inside your Gateway code repository.']],["Admin API Key","admin-api-key",['HTTP endpoints under "/ar-io/admin" are protected by an admin API key. These endpoints allow you to get certain analytics data or make adjustments to your node as it\'s running. When your node starts, it reads your environmental variables to see if a key is set. If not, a random key is generated. The key name is ADMIN_API_KEY and it should be set in your .env file like this:',"View examples of the admin endpoints here"]],["Wallet Association","wallet-association",["In order to participate in the greater ar.io network, Gateway nodes need to associate themselves with an Arweave wallet. This can be configured by setting the AR_IO_WALLET key value in your .env file."]],["Unbundling","unbundling",["AR.IO Gateway nodes support unbundling and indexing ANS-104 bundle data. This is disabled by default, but can be turned on with several different configuration options. You can set these configurations with the ANS104_UNBUNDLE_FILTER and ANS104_INDEX_FILTER keys in your .env:","The following types of filters are supported:"]],["Content Moderation","content-moderation",["You are able to set your Gateway to block specific transactions or data-items you don't want to serve. Unlike previous configuration options in this list, blocking content can be achieved without the need to add to your .env file and rebuild your Gateway. Instead, make a PUT request to your Gateway at /ar-io/admin/block-data. As this is an admin endpoint, you will need to have configured your ADMIN_API_KEY. Using curl as an example, the request should be formatted as follows:","id (string):  This will be the transaction ID of the content you want to add to your block list.","notes (string): Internal notes regarding why a particular ID is blocked.","source (string): Identifier of a particular source of IDs to block. (e.g. the name of a block list)","notes and source are used for documentation only, and have no effect on your block list itself."]],["Contiguous Data Cleanup","contiguous-data-cleanup",["Transaction data on Arweave is stored in a chunked manner. It is commonly retrieved, however, in the the transaction data's original, contiguous form with all of its component chunks assembled end-to-end. Gateways cache contiguous representations of the transaction data to assist in various workloads, including serving transaction data to clients, allowing for efficient utilization of valuable system resources. Gateway operators will need to determine for themselves the best balance between disk space and other resource usage based on the size of their gateway and their particular use case.","Contiguous data cache cleanup can be enabled using the CONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD environmental variable. This variable sets the number of seconds from the creation of a file in the contiguous data cache after which that file will be deleted. For example:","will clear items from the contiguous data cache after ten thousand (10,000) seconds."]],["ArNS Resolver","ar-ns-resolver",["Gateways, by default, forward requests to resolve ArNS names to arweave.dev. Starting with Release 9 gateways can instead build and maintain their own local cache. Doing so removes external dependencies and allows faster resolution.","View the code for the ArNS resolver service here: https://github.com/ar-io/arns-resolver","NOTE: The ArNS resolver is still an experimental feature. It is possible it may behave in unexpected ways when presented with rare edge case scenarios.","In order to enable the local ArNS resolver, three environmental variables will need to be set:","RUN_RESOLVER is a boolean representing an on/off switch for the local resolver.","TRUSTED_ARNS_RESOLVER_TYPE sets the method the gateway uses for resolving ArNS names. Use resolver for the local resolver, or gateway for default functionality.","TRUSTED_ARNS_RESOLVER_URL is the url a gateway will use to request ArNS name resolution."]]]},{url:"/build/gateways/bundler",sections:[["Bundler",null,[]],["Overview","overview",["A Turbo ANS-104 data item bundler can be run alongside an ar.io gateway. This allows gateways the ability to accept data items to be submit to the Arweave blockweave.","The bundler service can be easily run inside Docker in the same way that the gateway is. It utilizes a separate docker compose file for configuration and deployment, which also allows for the use of a separate file for environmental variables specific to the bundler service. Additionally, the separation allows operators to spin their bundler service up or down at any time without affecting their core gateway service. Despite the use of separate docker compose files, the bundler service shares a docker network with the ar.io gateway, and so is able to directly interact with the gateway service and data."]],["Getting Started","getting-started",["NOTE: The bundler service relies on GraphQL indexing of recently bundled and uploaded data to manage its pipeline operations. The ar.io gateway should have its indexes synced up to Arweave's current block height before starting the bundler's service stack.","Environmental Variables","Environmental variables must be provided for the bundler to function and integrate properly with an existing ar.io gateway. The gateway repository provides a .env.bundler.example file that can be renamed to .env.bundler and used as a starting point. It contains the following:","BUNDLER_ARWEAVE_WALLET must be the entire jwk of an Arweave wallet's keyfile, stringified. All uploads of bundled data items to Arweave will be signed and paid for by this wallet, so it must maintain a balance of AR tokens sufficient to handle the uploads.","BUNDLER_ARWEAVE_ADDRESS must be the normalized public address for the provided Arweave wallet.","APP_NAME is a GraphQL tag that will be added to uploaded bundles.","The remaining lines in the .env.bundler.example file control settings that allow the bundler service to share data with the ar.io gateway. Data sharing of contiguous data between a bundler and a gateway allows the gateway to serve optimistically cached data without waiting for it to fully settle on chain.","Managing Bundler Access","By default, the bundler will only accept data items uploaded by data item signers whose normalized wallet addresses are in the ALLOW_LISTED_ADDRESSES list. This is an additional environmental variable that can be added to your .env.bundler file, and must be a comma separated list of normalized public wallet addresses for wallets that should be allowed to bundle and upload data through your gateway.","The following permissioning configurations schemes are also possible:","Scheme\nALLOW_LISTED_ADDRESSES\nSKIP_BALANCE_CHECKS\nALLOW_LISTED_SIGNATURE_TYPES\nPAYMENT_SERVICE_BASE_URL","Allow Specific Wallets\nComma-separated normalized wallet addresses\nfalse\nEMPTY or supplied\nEMPTY","Allow Specific chains\nEMPTY or supplied\nfalse\narbundles sigtype int\nEMPTY","Allow All\nn/a\ntrue\nn/a\nn/a","Allow None\nEMPTY\nfalse\nEMPTY\nEMPTY","Allow Payers\nEMPTY or supplied\nfalse\nEMPTY or supplied\nYour payment service url","Indexing","Bundlers submit data to the Arweave network as an ANS-104 data item bundle. This means it is several transactions wrapped into one. A gateway will need to unbundle these transactions in order to index them. A gateway should include the following ANS-104 filters in order to unbundle and index transactions from a particular bundler:","$BUNDLER_ARWEAVE_ADDRESS should be replaced with the normalized public wallet address associated with the bundler.","NOTE: The above filters must be placed in the .env file for the core gateway service, not the bundler.","Gateways handle data item indexing asynchronously. This means they establish a queue of items to index, and work on processing the queue in the background while the gateway continues with its normal operations. If a gateway has broad indexing filters, there can be some latency in indexing data items from the bundler while the gateway works through its queue.","Optimistic Indexing","Gateway operators control access to their optimistic data item indexing API via an admin key that must be supplied by all bundling clients in order for their requests to be accepted. This key should be made available in the environment configuration files for BOTH the core gateway, and the bundler, and should be provided as AR_IO_ADMIN_KEY:","NOTE: If a gateway is started without providing the admin key, a random string will be generated to protect the gateway's admin endpoints. This can be reset by restarting the gateway with the admin key provided in the .env file."]],["Starting and Stopping the Bundler","starting-and-stopping-the-bundler",["Starting","The bundler service is designed to run in conjunction with an ar.io gateway, and so relies on the ar-io-network network created in Docker when the core gateway services are spun up. It is possible to spin up the bundler while the core services are down, but the network must exist in Docker.","To start the bundler, specify the env and docker-compose files being used in a docker compose up command:",'The -d flag runs the command in "detached" mode, so it will run in the background without requiring the terminal to remain active.',"Stopping","To spin the bundler service down, specify the docker-compose file in a docker compose down command:","logs","While the bundler service is running in detached mode, logs can be checked by specifying the docker-compose file in a docker compose logs command:",'-f runs the command in "follow" mode, so the terminal will continue to watch and display new logs.',"--tail= defines the number of logs to display that existed prior to running the command. 0 displays only new logs."]]]},{url:"/build/gateways/delegated-staking",sections:[["Delegated Staking",null,[]],["Overview","overview",["Delegated staking is a process by which a person can stake their own IO tokens on someone elses ar.io gateway. The additional staked tokens increase that gateway's chance to be selected as an observer, and so they have the potential to earn more rewards.\nIn exchange, the person who delegates the tokens will receive a share of the gateway's rewards. Gateway operators can set the percentage of rewards are available for delegating wallets.","You can find more specific information about delegated staking and how rewards are distributed in the ar.io whitepaper.","You can easily delegate stake to a gateway by using the Gateway Portal at ar://gateways"]]]},{url:"/build/gateways/env",sections:[["Environmental Variables",null,[]],["Overview","overview",["The AR.IO Gateway allows configuration customization through environmental variables. These variables dictate the gateway's behavior, from block synchronization settings to log formatting. Detailed below is a table enumerating all available environmental variables, their respective types, default values, and a brief description. Note that certain variables, such as SANDBOX_PROTOCOL, rely on others (e.g., ARNS_ROOT_HOST) to function effectively. Ensure proper understanding of these dependencies when configuring."]],["Variables","variables",[]]]},{url:"/build/gateways/gateway-network",sections:[["Gateway network",null,[]],["Overview","overview",["The AR.IO Network consists of AR.IO Gateway nodes, which are identified by their registered Arweave wallet addresses and either their IP addresses or hostnames, as stored in the network's smart contract Gateway Address Registry (GAR).","These nodes adhere to the AR.IO Network Protocols, creating a collaborative environment of Gateway nodes that vary in scale and specialization. The network ensures a fundamental level of service quality and trust minimization among its participants.","Being part of the network grants AR.IO Gateways an array of advantages, such as:","Simplified advertising of services and end user discovery via the Gateway Address Registry.","More rapid bootstrapping of key Gateway operational data due to prioritized data request fulfillment among Gateways joined to the network.","Sharing of data processing results.","Access to support channels tailored for operators.","Enhanced trust and transparency through the use of AGPL-3 licenses, which mandate public disclosure of any software changes, thereby reinforcing the network's integrity and reliability.","Improved network reliability and performance through an incentive protocol, which uses a system of rewards and evaluations to encourage high-quality service from Gateways."]],["Gateway Address Registry (GAR)","gateway-address-registry-gar",['Any Gateway operator that whishes to join the AR.IO Network must register their node in the AR.IO smart contract\'s "Gateway Address Registry", known as the GAR. Registration involves staking a minimum amount of IO tokens and providing additional metadata describing the Gateway service offered.',"After joining the network, the operator's Gateway can be easily discovered by permaweb apps, its health can be observed, and it can participate in the AR.IO data sharing protocol.","The Gateway operator can modify their Gateway's GAR configuration as needed, which includes adding more tokens to their stake or removing them. Operators can completely remove their stake and leave the AR.IO Network following a minimum network exit wait time. This exit time ensures that Gateways cannot quickly escape from an anticipated penalty.","The GAR advertises the specific attributes of each Gateway including its stake and settings. This enables permaweb apps and users to discover which Gateways are currently available and meet their needs. Apps that read the GAR can sort and filter it using the Gateway metadata, for example, ranking Gateways with the highest stake at the top of the list. This would allow users to prefer the lower-trust, higher staked Gateways before settling on a higher-trust, lower staked Gateway."]],["Staking","staking",["Staking tokens serves a dual purpose in the AR.IO Network:","It acts as a method of public commitment, and","It qualifies participants for reward distribution.",'In the AR.IO Network, "staking" designates the act of locking a specified amount of IO tokens into a protocol-controlled vault. These tokens act as a form of collateral and public commitment, encouraging network participants to act in the network\'s best interests. Once tokens are deposited in the vault, they remain locked until either the participant triggers the "unstake" function or the vault\'s predetermined lock period expires.',"It is important to note that unlike other protocols, the IO token is non-inflationary. Therefore, the staking mechanism in the AR.IO Network is not designed to function as a yield-generation tool. By staking their tokens, participants become eligible for potential rewards, fostering an atmosphere of mutual trust within the network. Specifically, Gateway operators stake tokens to facilitate their Gateway integration and establish public trust. Once connected, they become eligible for rewards driven by the protocol and gain access to the network's shared resources."]],["Schema","schema",["Gateway Schema","Gateway","Name\nType\nDescription","operatorStake\nnumber\nThe total stake of the Gateway's operator.","start\nnumber\nBlock number in which the Gateway joined the network.","end\nnumber\nBlock number in which the Gateway can leave the network, setting to 0 means no end date.",'status\nstring\nParticipation status of the Gateway, "joined" - participating in the network, "hidden" - not leaving, but not participating, "leaving" - in the process of withdrawing from the network.',"vaults\narray of objects\nThe locked tokens staked by the Gateway operator, view schema.","settings\nobject\nAdditional configuration settings for the Gateway, view schema.","delegates\nobject\nWallets that have delegated a stake of IO tokens to the Gateway.","totalDelegatedStake\nnumber\nThe total number of IO tokens delegated to the Gateway","observerWallet\nstring\nThe public address for the wallet being used to sign and upload Observer reports","stats\nobject\nInformation about the Gateways Network performance","Token Vault","Token Vault","Name\nType\nDescription","balance\nnumber\nPositive integer, the number of IO tokens locked.","start\nnumber\nBlock number in which locking starts.","end\nnumber\nBlock number in which locking ends. Setting to 0 means no end date.","Gateway Settings","Gateway Settings","Name\nType\nRequired\nDescription","label\nstring\nyes\nThe friendly name used to label the Gateway.","fqdn\nstring\nyes\nThe fully qualified domain name at which the Gateway can be reached. e.g. arweave.net","port\nnumber\nyes\nThe port used by the Gateway. e.g. 443",'protocol\nstring\nyes\nWeb protocol used by this Gateway "https", or "http"',"properties\nstring\nno\nAn Arweave transaction ID containing additional properties of the Gateway.","note\nstring\nno\nAn Arweave transaction ID containing additional notes the Gateway operator can set to include things like announcements, maintenance, or other operational updates.","allowDelegatedStaking\nboolean\nno\nThe Gateway Operator can allow or disallow other wallets to stake IO tokens on the Gateway.","delegatedRewardShareRatio\nnumber\nno\nThe percentage of Gateway rewards given to delegated stakers","autoStake\nboolean\nno\nIf true, Gateway rewards will automatically be added to the Gateway's Operator stake"]]]},{url:"/build/gateways/linux-setup",sections:[["Linux Installation Instructions",null,[]],["Overview","overview",["The following instructions will guide you through the process of installing the AR.IO node on a Linux machine, specifically Ubuntu 22.04.3 desktop on a home computer. Actual steps may differ slightly on different versions or distributions. This guide will cover how to set up your node, point a domain name to your home network, and create an nginx server for routing traffic to your node. No prior coding experience is required."]],["System Requirements","system-requirements",["Please note, The AR.IO Node software is still in development and testing, all system requirements are subject to change.","External storage devices should be formatted as ext4.","Minimum requirements","The hardware specifications listed below represent the minimum system requirements at which the AR.IO Node has been tested. While your Node may still operate on systems with lesser specifications, please note that AR.IO cannot guarantee performance or functionality under those conditions. Use below-minimum hardware at your own risk.","4 core CPU","4 GB Ram","500 GB storage (SSD recommended)","Stable 50 Mbps internet connection","Recommended","12 core CPU","32 GB Ram","2 TB SSD storage","Stable 1 Gbps internet connection"]],["Install Packages","install-packages",["If you would like to quickly install all required and suggested packages, you can run the following 4 commands in your terminal, and skip to installing the Node.","Required packages","Update your software:","Enable your firewall and open necessary ports:","Install nginx:","Install git:","Install Docker:","Test Docker installation:","Install Certbot:","Suggested packages","These packages are not required to run a node in its basic form. However, they will become necessary for more advanced usage or customization.","Install ssh (optional, for remote access to your Linux machine):","Install Yarn:","Install NVM (Node Version Manager):","Install Node.js:","Install build tools","Install SQLite:"]],["Install the Node","install-the-node",["Navigate to the desired installation location:","NOTE: Your database of Arweave Transaction Headers will be created in the project directory, not Docker. So, if you are using an external hard drive to turn an old machine into a node, install the node directly to that external drive.","Clone the ar-io-node repository and navigate into it:","Create an environmental variables file:","Paste the following content into the new file, replacing <your-domain> with the domain address you are using to access the node, and <your-public-wallet-address> with the public address of your Arweave wallet, save, and exit:","The GRAPHQL values set the proxy for GQL queries to arweave.net, You may use any available gateway that supports GQL queries. If omitted, your node can support GQL queries on locally indexed transactions, but only L1 transactions are indexed by default.","START_HEIGHT is an optional line. It sets the block number where your node will start downloading and indexing transactions headers. Omitting this line will begin indexing at block 0.","RUN_OBSERVER turns on the Observer to generate Network Compliance Reports. This is required for full participation in the AR.IO Network. Set to false to run your gateway without Observer.","ARNS_ROOT_HOST sets the starting point for resolving ARNS names, which are accessed as a subdomain of a gateway. It should be set to the url you are pointing to your node, excluding any protocol prefix. For example, use node-ar.io and not https://node-ar.io. If you are using a subdomain to access your node and do not set this value, the node will not understand incoming requests.","AR_IO_WALLET is optional, and sets the wallet you want associated with your Gateway. An associated wallet is required to join the AR.IO network.","OBSERVER_WALLET is the public address of the wallet used to sign Observer transactions. This is required for Observer to run, but may be omitted if you are running a gateway outside of the AR.IO network and do not plan to run Observer. You will need to supply the keyfile to this wallet in the next step.","Advanced configuration options can be found at docs.ar.io","Supply Your Observer Wallet Keyfile:",'If you are running Observer, you need to provide a wallet keyfile in order to sign report upload transactions. The keyfile must be saved in the wallets directory in the root of the repository. Name the file <Observer-Wallet-Address>.json, replacing "<Observer-Wallet-Address>" with the public address of the wallet. This should match your OBSERVER_WALLET environmental variable.',"Learn more about creating Arweave wallets and obtaining keyfiles here","Start the Docker container:","Explanation of flags:","up: Start the Docker containers.","-d: Run the containers as background processes (detached mode).","NOTE: Effective with Release #3, it is no longer required to include the --build flag when starting your gateway. Docker will automatically build using the image specified in the docker-commpose.yaml file.","To shut down your gateway, run the command:","To ensure your node is running correctly, check the logs for errors:","Explanation of flags:","-f: Follow the logs in real time.","--tail=0: Ignore all logs from before running the command.","NOTE: Previous versions of these instructions advised checking a gateway's ability to fetch content using localhost. Subsequent security updates prevent this without first disabling ARNS_ROOT_HOST in your .env."]],["Set up Networking","set-up-networking",["The following guide assumes you are running your node on a local home computer.","Register a Domain Name:\nChoose a domain registrar (e.g., Namecheap) to register a domain name.","Point the Domain at Your Home Internet:","Obtain your public IP address by visiting https://www.whatsmyip.org/ or running:",'Create an A record with your registrar for your domain and wildcard subdomains, using your public IP address. For example, if your domain is "ar.io," create a record for "ar.io" and "*.ar.io."',"Set up Port Forwarding:","Obtain the local IP address of the machine where the node is installed by running:","If there are multiple lines of output, choose the one starting with 192 (usually).","Enter your router's IP address in the address bar of a browser (e.g., 192.168.0.1).","If you're unsure of your router's IP address, consult your router's documentation or contact your Internet Service Provider (ISP).","Navigate to the port forwarding settings in your router configuration.","The exact steps may vary depending on your router model. Consult your router's documentation or support for detailed steps.","Set up port forwarding rules to forward incoming traffic on ports 80 (HTTP) and 443 (HTTPS) to the same ports on the machine running your node. You may also forward port 22 if you want to enable SSH access to your node from outside your home network.","Create SSL (HTTPS) Certificates for Your Domain:","Follow the instructions to create the required TXT records for your domain in your chosen registrar. Use a DNS checker to verify the propagation of each record. This can take some time.","IMPORTANT: Wild card subdomain (*.<your-domain>.com) cannot auto renew without obtaining an API key from your domain registrar. Not all registrars offer this. Certbot certificates expire every 90 days. Be sure to consult with your chosen registrar to see if they offer an API for this purpose, or run the above command again to renew your certificates. You will receive an email warning at the address you provided to remind you when it is time to renew.","Configure nginx:\nnginx is a free and open-source web server and reverse proxy server. It will handle incoming traffic, provide SSL certificates, and redirect the traffic to your node.","Open the default configuration file:",'Replace the file\'s contents with the following configuration (replace "<your-domain>" when necessary):',"Save and exit nano.","Test the configuration:","If there are no errors, restart nginx:","Your node should now be running and connected to the internet. Test it by entering https://<your-domain>/3lyxgbgEvqNSvJrTX2J7CfRychUD5KClFhhVLyTPNCQ in your browser.","Note: If you encounter any issues during the installation process, please seek assistance from the AR.IO community."]]]},{url:"/build/gateways/observer",sections:[["Observation and Incentives",null,[]],["Overview","overview",['The Observation and Incentive Protocol is designed to maintain and enhance the operational integrity of gateways on the AR.IO Network. It achieves this through a combination of incentivizing gateways for good performance and tasking those gateways to fulfill the role of "observers". The protocol is intentionally simple and adaptable, employing a smart contract-based method for onchain “voting” to assess peer performance while being flexible on how that performance is measured. This setup permits gateway and observer nodes to experiment and evolve best practices for performance evaluation, all while operating within the bounds of the network\'s immutable smart contract, thus eliminating the need for frequent contract updates (forks).',"In this protocol, observers evaluate their gateway peers' performance to resolve ArNS names. Their aim is to ensure each gateway in the network accurately resolves a subset of names and assigning a pass / fail score based on their findings.",'A key component of the protocol is its reward mechanism. This system is predicated on gateway performance and compliance with observation duties. Gateways that excel are tagged as "Functional Gateways" and earn rewards, while those that do not meet the criteria, “Deficient Gateways” risk facing penalties – namely, the lack of rewards.',"Funds for incentive rewards are derived from the protocol balance, which consists of IO tokens collected from ArNS asset purchases. Every epoch, this balance is utilized to distribute rewards to qualifying gateways and observers based on certain performance metrics."]],["Observation Protocol","observation-protocol",["The Observation protocol is organized around epochs, periods of time that are broken into an observation reporting and tallying phase. The protocol is followed across each epoch, promoting consistent healthy network activity that can form pro-social behaviors and react to malicious circumstances.","Observation and Incentive Protocol","To participate in the epoch, a gateway must have already staked IO tokens and joined the network before it starts.","Each epoch (approximately 7 block-days), a random pool of active gateways will be selected (prescribed) to perform observation duties.","Within the epoch, observers are tasked with evaluating a subset of ArNS names for each gateway in the network.","By the end of the epoch’s observation reporting period, the observer must upload its standardized health observation report to Arweave.","The observer must also submit an interaction to the AR.IO contract to save its report transaction ID and a summary of all failed gateways for tallying by the incentive protocol.","After the observation reporting period and tallying periods have closed, the payout is performed on the next contract state tick.","This payout rewards gateways and observers who have performed their duties.","Gateways that did not meet the performance threshold will not receive rewards.","Observers that did not perform their duties are not rewarded and in addition, are penalized on any gateway rewards received.","Community builders and application users can verify and leverage the report and distribution information to make more informed decisions on which gateway to use."]],["Onchain Reports","onchain-reports",["The to-be-evaluated ArNS names include a set of names randomly determined by the protocol, known as “prescribed names”, which are common across all observers within the epoch, as well as a set of “chosen names” picked at the discretion of each individual observer. “Prescribed names” are assigned to act as a common denominator / baseline while “chosen names” allow each observer to evaluate names that may be important to their operation.","Each observer shall assess the performance of the selected ArNS names (across all gateways) and summarize those findings in a report which details the following:","General Information: Observer's Arweave address, starting and concluding block heights for the epoch.","Gateway Operator Assessment: The expected and actual Arweave addresses of observed gateways, along with a summary verdict (pass or fail), and accompanying reasons for failure.",'Detailed ArNS Evaluations: For each gateway, it includes the domain name, evaluated ArNS names, the associated block height, transaction IDs, data hashes, a "pass or fail" score, reasons for failure (if any), and performance metrics like time to the first byte.',"A comprehensive list of report criteria can be found in the Appendix.","Observers shall upload their completed reports (in JSON format) to the Arweave network as an onchain audit trail. In addition, observers shall submit an interaction to the AR.IO smart contact detailing each gateway that they observed to have “failed” their assessments. This is tallied and used to determine the reward distribution."]],["Selection of Observers","selection-of-observers",["The observer selection process employs a random-weighted selection method. By combining random selection with weighted criteria like stake, tenure, and past rewards, the process aims to ensure both fairness and acknowledgment of consistent performance. This method allows for a systematic yet randomized approach to selecting gateways for observation tasks.","Criteria for Selection","Up to 50 gateways can be chosen as observers per epoch. If the GAR contains 50 or fewer gateways, then every gateway is designated as an observer for that epoch. If there are greater than 50, then randomized selection shall be utilized.","The weighted selection criteria will consider the following for each gateway:","Stake Weight (SW): This factor considers how financially committed a gateway is to the network. It is the ratio of the amount of IO tokens staked by the gateway relative to the network minimum and is expressed as SW = Gateway Stake / Minimum Stake.","Tenure Weight (TW): This factor considers how long a gateway has been part of the network, with a maximum value capped at 4. It is calculated as TW = Gateway Network Tenure / 6 block-months. This means that the maximum value is achieved after 2 block-years of participation in the network.","Gateway Reward Ratio Weight (GRRW): This factor is a proxy for a gateway’s performance at resolving ArNS names. The weight represents the ratio of epochs in which a gateway received rewards for correctly resolving names relative to their total time on the network.","Observer Reward Ratio Weight (ORRW): This factor is a proxy for a gateway’s performance at fulfilling observation duties. The weight reflects the ratio of epochs in which a gateway, as an observer, successfully submitted observation reports relative to their total periods of service as an observer.","Weight Calculation and Normalization","For each gateway, a composite weight (CW) is computed, combining the Stake Weight, Tenure Weight, Gateway Reward Ratio Weight, and Observer Reward Ratio Weight.","The formula used is: CW = SW x TW x GRRW x ORRW.","These weights are then normalized across the network to create a continuous range, allowing for proportional random selection based on the weighted scores. The normalized composite weight (N_CW) for each gateway indicates its likelihood of being chosen as an observer and is calculated by dividing the gateway's CW by the sum of all CWs.","Random Selection Process","The selection of observers is randomized within the framework of these weights. A set of unique random numbers is generated within the total range of normalized weights. For each random number, the gateway whose normalized weight range encompasses this number is selected. This system ensures that while gateways with higher weights are more likely to be chosen, all gateways maintain a non-zero chance of selection, preserving both fairness and meritocracy in the observer assignment process."]],["Performance Evaluation","performance-evaluation",["Consider the following classifications:","Functional or Passed Gateways: are gateways that meet or surpass the network’s performance and quality standards.","Deficient or Failed Gateways: are gateways that fall short of the network's performance expectations.","Functional or Submitted Observers: are selected observers who diligently perform their duties and submit observation reports and contract interactions.","Deficient or Failed Observers: are selected observers who do not fulfill their duty of submitting observation reports and contract interactions.","At the end of an epoch, the smart contract will assess the results from the observers during a “tallying period” and determine a pass / fail score for each gateway:","If greater than or equal to 50% of submitted observer contract interactions indicate a PASS score, then that gateway is considered Functional and eligible for gateway rewards.","Else, if greater than 50% of submitted observer contract interactions indicate a FAIL score, then that gateway is considered Deficient and ineligible for gateway rewards.","These results will determine how reward distributions are made for that epoch. Rewards shall be distributed after the epoch’s tallying period is complete."]],["Reward Distribution","reward-distribution",["Each epoch, a defined portion of the protocol balance (e.g., 0.05%) is earmarked for distribution as rewards. From this allocation, two distinct reward categories are derived:","Base Gateway Reward: This is the portion of the reward allocated to each Functional Gateway within the network and is calculated as:","[Epoch Reward Allocation x 90% / Total Gateways in the Network]","Base Observer Reward: Observers, due to their additional responsibilities, have a separate reward calculated as:","[Epoch Reward Allocation x 10% / Total Selected Observers for the Epoch]","Distribution Based on Performance","The reward distribution is contingent on the performance classifications derived from the Performance Evaluation:","Functional Gateways: Gateways that meet the performance criteria receive the Base Gateway Reward.","Deficient Gateways: Gateways falling short in performance do not receive any gateway rewards.","Functional Observers: Observers that fulfilled their duty receive the Base Observer Reward.","Deficient Observers: Observers failing to meet their responsibilities do not receive observer rewards. Furthermore, if they are also Functional Gateways, their gateway reward is reduced by 25% for that epoch as a consequence for not performing their observation duty.","Undistributed Rewards","In cases where rewards are not distributed, either due to the inactivity or deficiency of gateways or observers, the allocated tokens shall remain in the protocol balance and carry forward to the next epoch. This mechanism is in place to discourage observers from frivolously marking their peers as offline in hopes of attaining a higher portion of the reward pool."]],["Handling Inactive Gateways","handling-inactive-gateways",["To maintain network efficiency and reduce contract state bloat, gateways that are consistently offline, specifically for thirty (30) consecutive epochs, and thus fail to receive rewards, will be automatically removed from the Gateway Active Registry (GAR) as well as have their staked IO tokens unlocked and returned to the gateway operator."]],["Observer Report Details","observer-report-details",["Each observer shall assess the performance of the selected ArNS names (across all AR.IO gateways) and summarize those findings in a report which details the following:"]],["General Information","general-information",["The observer's Arweave address.","The starting block height of the epoch.","The block height at which the report was generated."]],["Overall Gateway Operator Assessment","overall-gateway-operator-assessment",["Gateway FQDN.","The Arweave address that the observer expects to be the owner / operator of the gateway.","The Arweave address that the observed gateway actually reports.","A final “pass or fail” rollup determination for each observed gateway.","Failure reason (if applicable)."]],["ArNS Assessments","ar-ns-assessments",["Observed ArNS name (for all prescribed and chosen names).","The block height at which the name was assessed.","The expected status code.","The resolved status code.","The transaction ID that the observer expects the associated name to resolve to.","The transaction ID that the gateway actually resolves to.","The data hash that the observer expects the associated name to resolve to.","The data hash that the gateway actually resolves to.","The “pass or fail” score associated with the observed name, at the observer’s discretion.","Failure reason (if applicable).","Timing / performance information associated with the name resolution such as time to first byte and total duration.","The above is repeated for the entire name pool and across each gateway in the GAR."]],["Example Observation Report","example-observation-report",["https://arweave.net/GG1YCFc7wQxKvQ1qD1lTEp2OAMBs4VzrpfdmeeLyjDI "]],["Viewing Observation Reports","viewing-observation-reports",["You can easily view an observation report in a human readable format through your terminal with the following command:","Be sure to replace <txId> with the txId of the report you want to view.","example"]]]},{url:"/build/gateways/release-notes",sections:[["ar.io Release Notes",null,[]],["Overview","overview",["Welcome to the documentation page for the ar.io gateway release notes. Here, you will find detailed information about each version of the ar.io gateway, including the enhancements, bug fixes, and any other changes introduced in every release. This page serves as a comprehensive resource to keep you informed about the latest developments and updates in the ar.io gateway. For those interested in exploring the source code, each release's code is readily accessible at our GitHub repository: ar.io gateway change logs. Stay updated with the continuous improvements and advancements in the ar.io gateway by referring to this page for all release-related information."]],["[Release 20] - 2024-11-15","release-20-2024-11-15",["Added","Exposed the core service chunk POST endpoint via Envoy. It accepts a Arweave data chunk and broadcasts it to either the comma separated list of URLs specified by the CHUNK_POST_URLs environment variable or, if none are specified, the /chunk path on URL specified by the TRUST_GATEWAY_URL environment variable.","Added a X-AR-IO-Root-Transaction-Id HTTP header to data responses containing the root base layer transaction ID for the ID in question if it's been indexed.","Added a X-AR-IO-Data-Item-Data-Offset HTTP header containing the offset of the data item relative to the root bundle base layer transaction for it. In conjunction with X-AR-IO-Root-Transaction-Id, it enables retrieving data for data item IDs from base layer data using first a HEAD request to retrieve the root ID and data offset followed by a range request into the root bundle. This greatly increases the likelihood of retriving data item data by ID since only an index into the base layer and Arweave chunk availability is needed for this access method to succeed.","Added an experimental ClickHouse service to docker-compose.yaml (available via the clickhouse profile). This will be used as a supplemental GraphQL DB in upcoming releases.","Added a data item indexing healthcheck that can be enabled by setting the RUN_AUTOHEAL environment variable to true. When enabled, it will restart the core service if no data items have been indexed since the value specified by the MAX_EXPECTED_DATA_ITEM_INDEXING_INTERVAL_SECONDS environment variable."]],["[Release 19] - 2024-10-21","release-19-2024-10-21",["Fixed","Adjusted data item flushing to use the bundle DB worker instead of the core DB worker to prevent write contention and failed flushes under heavy unbundling load.","Added","Added X-AR-IO-Digest, X-AR-IO-Stable, X-AR-IO-Verified, and ETag headers. X-AR-IO-Digest contains a base64 URL encoded representation of the SHA-256 hash of the data item data. It may be empty if the gateway has not previously cached the data locally. X-AR-IO-Stable contains either true or false depending on whether the associated Arweave transaction is more than 18 blocks old or not. X-AR-IO-Verified contains either true if the gateway has verified the data root of the L1 transaction or the L1 root parent of the data item or false if it has not. ETag contains the same value a X-AR-IO-Digest and is used to improve HTTP caching efficiency.","Added support for using a different data source for on-demand and background data retrieval. Background data retrieval is used when unbundling. The background retrieval data source order is configurable using the BACKGROUND_RETRIEVAL_ORDER environment variable and defaults to chunks,s3,trusted-gateway,tx-data. Priority is given to chunk retrieval since chunks are verifiable.","Added an /ar-io/admin/export-parquet/status to support monitoring of in-progress Parquet export status.","Added sqlite_in_flight_ops Prometheus metric with worker (core, bundles, data, or moderation) and role (read or write) labels to support monitoring the number of in-flight DB operations.",'Added experimental Grafana and Prometheus based observability stack. See the "Monitoring and Observability" section of the README for more details.',"Changed","Bundle data is now retrieved as chunks from Arweave nodes by default so that data roots can be compared against the chain (see entry about background retrieval above).","Changed observer configuration to use 8 instead of 5 chosen names. These are combined with 2 names prescribed from the contract for a total of 10 names observed each epoch to provide increased ArNS observation coverage.","Verification status is set on data items when unbundling a parent that has already been verified."]],["[Release 18] - 2024-10-01","release-18-2024-10-01",["Fixed","Improved performance of data attributes query that was preventing data.db WAL flushing.","Added","Added WAL sqlite_wal_checkpoint_pages Prometheus metric to help monitor WAL flushing.","Added a POST /ar-io/admin/export-parquet endpoint that can be used to export the contents of the SQLite3 core and bundle DBs as Parquet. To trigger an export, POST JSON containing outputDir, startHeight, endHeight, and maxFileRows keys. The resulting Parquet files can then be queried directly using DuckDB or loaded into another system (e.g. ClickHouse). Scripts will be provided to help automate the latter in a future release.","Added ARNS_RESOLVER_OVERRIDE_TTL_SECONDS that can be used to force ArNS names to refresh before their TTLs expire.","Added a GET /ar-io/resolver/:name endpoint that returns an ArNS resolution for the given name.","Changed","Removed ArNS resolver service in favor of integrated resolver. If a standalone resolver is still desired, the core service can be run with the START_WRITERS environment variable set to false. This will disable indexing while preserving resolver functionality.","Deduplicated writes to data.db to improve performance and reduce WAL growth rate."]],["[Release 17] - 2024-09-09","release-17-2024-09-09",["Notes","This release includes a LONG RUNNING MIGRATION. Your node may appear unresponsive while it is running. It is best to wait for it to complete. If it fails or is interrupted, removing your SQLite DBs (in data/sqlite by default) should resolve the issue, provided you are willing to lose your GraphQL index and let your node rebuild it.","Fixed","Use the correct environment variable to populate WEBHOOK_BLOCK_FILTER in docker-compose.yaml.","Don't cache data regions retrieved to satisfy range requests to avoid unnecessary storage overhead and prevent inserting invalid ID to hash mappings into the data DB.","Added","Added a new ClickHouse based DB backend. It can be used in combination with the SQLite DB backend to enable batch loading of historical data from Parquet. It also opens up the possibility of higher DB performance and scalability. In its current state it should be considered a technology preview. It won't be useful to most users until we either provide Parquet files to load into it or automate flushing of the SQLite DB to it (both are planned in future release). It is not intended to be standalone solution. It supports bulk loading and efficient GraphQL querying of transactions and data items, but it relies on SQLite (or potentially another OLTP in the future) to index recent data. These limitations allow greatly simplified schema and query construction. Querying the new ClickHouse DB for transaction and data items via GraphQL is enabled by setting the CLICKHOUSE_URL environment variable.","Added the ability to skip storing transaction signatures in the DB by setting WRITE_TRANSACTION_DB_SIGNATURES to false. Missing signatures are fetched from the trusted Arweave node when needed for GraphQL results.","Added a Redis backed signature cache to support retrieving optimistically indexed data item signatures in GraphQL queries when writing data items signatures to the DB has been disabled.","Added on-demand and composite ArNS resolvers. The on-demand resolver fetches results directly from an AO CU. The composite resolver attempts resolution in the order specified by the ARNS_RESOLVER_PRIORITY_ORDER environment variable (defaults to on-demand,gateway).","Added a queue_length Prometheus metric to fasciliate monitoring queues and inform future optimizations","Added SQLite WAL cleanup worker to help manage the size of the data.db-wal file. Future improvements to data.db usage are also planned to further improve WAL management.","Changed","Handle data requests by ID on ArNS sites. This enables ArNS sites to use relative links to data by ID.","Replaced ARNS_RESOLVER_TYPE with ARNS_RESOLVER_PRIORITY_ORDER (defaults to on-demand,gateway).","Introduced unbundling back pressure. When either data item data or GraphQL indexing queue depths are more than the value specified by the MAX_DATA_ITEM_QUEUE_SIZE environment variable (defaults to 100000), unbundling is paused until the queues length falls bellow that threshold. This prevents the gateway from running out of memory when the unbundling rate exceeds the indexing rate while avoiding wasteful bundle reprocessing.","Prioritized optimistic data item indexing by inserting optimistic data items at the front of the indexing queues.","Prioritized nested bundle indexing by inserting nested bundles at the front of the unbundling queue."]],["[Release 16] - 2024-08-09","release-16-2024-08-09",["Fixed","Fixed promise leak caused by missing await when saving data items to the DB.","Modified ArNS middleware to not attempt resolution when receiving requests for a different hostname than the one specified by ARNS_ROOT_HOST.","Added","Added support for returning Content-Encoding HTTP headers based on user specified Content-Encoding tags.","Added isNestedBundle filter enables that matches any nested bundle when indexing. This enables composite unbundling filters that match a set of L1 tags and bundles nested under them.","Added ability to skip writing ANS-104 signatures to the DB and load them based on offsets from the data instead. This significantly reduces the size of the bundles DB. It can be enabled by setting the WRITE_ANS104_DATA_ITEM_DB_SIGNATURES environment variable to false.","Added data_item_data_indexed_total Prometheus counter to count data items with data attributes indexed.","Changed","Queue data attributes writes when serving data rather than writing them syncronously.","Reduced the default data indexer count to 1 to lessen the load on the data DB.","Switched a number of overly verbose info logs to debug level.","Removed docker-compose on-failure restart limits to ensure that services restart no matter how many times they fail.","Modified the data_items_indexed_total Prometheus counter to count data items indexed for GraphQL querying instead of data attributes.","Increased aggressiveness of contiguous data cleanup. It now pauses 5 seconds instead of 10 seconds per batch and runs every 4 hours instead of every 24 hours."]],["[Release 15] - 2024-07-19","release-15-2024-07-19",["Fixed","Fixed query error that was preventing bundles from being marked as fully imported in the database.","Added","Adjusted data item indexing to record data item signature types in the DB. This helps distinguish between signatures using different key formats, and will enable querying by signature type in the future.","Adjusted data item indexing to record offsets for data items within bundles and signatures and owners within data items. In the future this will allow us to avoid saving owners and signatures in the DB and thus considerably reduce the size of the bundles DB.","Added ARNS_CACHE_TTL_MS environment variable to control the TTL of ARNS cache entries (defaults to 1 hour).","Added support for multiple ranges in a single HTTP range request.","Added experimental chunk POST endpoint that broadcasts chunks to the comma-separate list of URLS in the CHUNK_BROADCAST_URLS environment variable. It is available at /chunk on the internal gateway service port (4000 by default) but is not yet exposed through Envoy.","Added support for running an AO CU adjacent to the gateway (see README.md for details).","Added X-ArNS-Process-Id to ArNS resolved name headers.","Added a set of AO_... environment variables for specifying which AO URLs should be used (see docker-compose.yaml for the complete list). The AO_CU_URL is of particular use since the core and resolver services only perform AO reads and only the CU is needed for reads.","Changed","Split the monolithic docker-compose.yaml into docker-compose.yaml, docker-compose.bundler.yaml, and docker-compose.ao.yaml (see README for details).","Replaced references to 'docker-compose' with 'docker compose' in the docs since the former is mostly deprecated.","Reduce max fork depth from 50 to 18 inline to reflect Arweave 2.7.2 protocol changes.","Increased the aggressiveness of bundle reprocessing by reducing reprocessing interval from 10 minutes to 5 minutes and raising reprocessing batch size from 100 to 1000.","Use a patched version of Litestream to work around insufficient S3 multipart upload size in the upstream version."]],["[Release 14] - 2024-06-26","release-14-2024-06-26",["Fixed","Correctly handle manifest index after paths."]],["[Release 13] - 2024-06-24","release-13-2024-06-24",["Added","Added support for optimistically reading data items uploaded using the integrated Turbo bundler via the LocalStack S3 interface.","Added X-AR-IO-Origin-Node-Release header to outbound data requests.","Added hops, origin, and originNodeRelease query params to outbound data requests.","Added support for fallback in v0.2 manifests that is used if no path in the manifest is matched.","Changed","Updated Observer to read prescribed names from and write observations to the ar.io AO network process.","Updated Resolver to read from the ar.io AO network process.","Fixed","Modified optimistic indexing of data items to use a null parent_id when inserting into the DB instead of a placeholder value. This prevents unexpected non-null bundledIn values in GraphQL results for optimistically indexed data items.","Modified GraphQl query logic to require an ID for single block GraphQL queries. Previously queries missing an ID were returning an internal SQLite error. This represents a small departure from arweave.net's query logic which returns the latest block for these queries. We recommend querying blocks instead of block in cases where the latest block is desired.","Adjusted Observer health check to reflect port change to 5050.","Security","Modified docker-compose.yaml to only expose Redis, PostgreSQL, and LocalStack ports internally. This protects gateways that neglect to deploy behind a firewall, reverse proxy, or load balancer."]],["[Release 12] - 2024-06-05","release-12-2024-06-05",["Added","Added /ar-io/admin/queue-data-item endpoint for queuing data item headers for indexing before the bundles containing them are processed. This allows trusted bundlers to make their data items quickly available to be queried via GraphQL without having to wait for bundle data submission or unbundling.","Added experimental support for retrieving contiguous data from S3. See AWS_* environment variables documentation for configuration details. In conjuction with a local Turbo bundler this allows optimistic bundle (but not yet data item) retrieval.","Add experimental support for fetching data from gateway peers. It can be enabled by adding ario-peer to ON_DEMAND_RETRIEVAL_ORDER. Note: do not expect this work reliably yet! This functionality is in active development and will be improved in future releases.","Add import_attempt_count to bundle records to enable future bundle import retry optimizations.","Changed","Removed version from docker-compose.yaml to avoid warnings with recent versions of docker-compose.","Switched default observer port from 5000 to 5050 to avoid conflict on OS X. Since Envoy is used to provide external access to the observer API this should have no user visible effect."]],["[Release 11] - 2024-05-21","release-11-2024-05-21",["Added","Added arweave_tx_fetch_total Prometheus metric to track counts of transaction headers fetched from the trusted node and Arweave network peers.","Changed","Revert to using unnamed bind mounts due to cross platform issues with named volumes."]],["[Release 10] - 2024-05-20","release-10-2024-05-20",["Added",'Added experimental support for streaming SQLite backups to S3 (and compatible services) using Litestream. Start the service using the docker-compose "litestream" profile to use it, and see the AR_IO_SQLITE_BACKUP_* environment variables documentation for further details.',"Added /ar-io/admin/queue-bundle endpoint for queueing bundles for import for import before they're in the mempool. In the future this will enable optimistic indexing when combined with a local trusted bundler.","Added support for triggering webhooks when blocks are imported matching the filter specified by the WEBHOOK_BLOCK_FILTER environment variable.","Added experimental support for indexing transactions and related data items from the mempool. Enable it by setting ENABLE_MEMPOOL_WATCHER to 'true'.","Made on-demand data caching circuit breakers configurable via the GET_DATA_CIRCUIT_BREAKER_TIMEOUT_MS environment variable. This allows gateway operators to decide how much latency they will tolerate when serving data in exchange for more complete data indexing and caching.","Rename cache header from X-Cached to X-Cache to mimic typical CDN practices.","Add X-AR-IO-Hops and X-AR-IO-Origin headers in preparation for future peer-to-peer functionality.","Upgrade to Node.js v20 and switch to native test runner."]],["[Release 9] - 2024-04-10","release-9-2024-04-10",["Added","Added experimental Farcaster Frames support, enabling simple Arweave based Frames with button navigation. Transaction and data item data is now served under /local/farcaster/frame/<ID>. /local is used as a prefix to indicate this functionality is both experimental and local to a particular gateway rather than part of the global gateway API. Both GET and POST requests are supported.","Added an experimental local ArNS resolver. When enabled it removes dependence on arweave.net for ArNS resolution! Enable it by setting RUN_RESOLVER=TRUE, TRUSTED_ARNS_RESOLVER_TYPE=resolver, and TRUSTED_ARNS_RESOLVER_URL=http://resolver:6000 in your .env file.","Added an X-Cached header to data responses to indicate when data is served from the local cache rather than being retrieved from an external source. This is helpful for interfacing with external systems, debugging, and end-to-end testing.","Save hashes for unbundled data items during indexing. This enables reduction in data storage via hash based deduplication as well as more efficient peer-to-peer data retrieval in the future."]],["[Release 8] - 2024-03-14","release-8-2024-03-14",["Added","Added GraphQL SQL query debug logging to support trouble-shooting and performance optimization.","Added support for indexing data items (not GraphQL querying) based solely on tag name. (example use case: indexing all IPFS CID tagged data items).","Changes","Observer data sampling now uses randomized ranges to generate content hashes.","Reference gateway ArNS resolutions are now cached to improve report generation performance.","Contract interactions are now tested before posting using dryWrite to avoid submitting interactions that would fail.","/ar-io/observer/info now reports INVALID for wallets that fail to load.","Fixed","Fix data caching failure caused by incorrect method name in getData circuit breakers.","Fix healthcheck when ARNS_ROOT_HOST includes a subdomain."]],["[Release 7] - 2024 - 02 - 14","release-7-2024-02-14",["Added","Add support for notifying other services of transactions and data items using webhooks (see README for details).","Add support for filter negation (particularly useful for excluding large bundles from indexint).","Improve unbundling throughput by decoupling data fetching from unbundling.","Add Envoy and core service ARM builds.","Changed","Improve resouce cleanup and shutdown behavior.","Don't save Redis data to disk by default to help prevent memory issues on startup for small gateways.","Reduce the amount of data sampled from large files by the observer.","Ensure block poa2 field is not chached to reduce memory consumption."]],["[Release 6] - 2024-01-29","release-6-2024-01-29",["Fixed","Update observer to improve reliability of contract state synchronization and evaluation."]],["[Release 5] - 2024-01-25","release-5-2024-01-25",["Added","Added transaction offset indexing to support future data retrieval capabilities.","Enabled IPv6 support in Envoy config.","Added ability to configure observer report generation interval via the REPORT_GENERATION_INTERVAL_MS environmental variable. (Intended primarily for development and testing)","Changed","Updated observer to properly handle FQDN conflicts.","Renamed most created_at columns to index to indexed_at for consistency and clarity.","Fixed","Updated LMDB version to remove Buffer workaround and fix occasional block cache errors."]],["[Release 4] - 2024-01-11","release-4-2024-01-11",["Added","Added circuit breakers around data index access to reduce impact of DB access contention under heavy requests loads.","Added support for configuring data source priority via the ON_DEMAND_RETRIEVAL_ORDER environment variable.","Updated observer to a version that retrieves epoch start and duration from contract state.","Changed","Set the Redis max memory eviction policy to allkeys-lru.","Reduced default Redis max memory from 2GB to 256MB.","Improved predictability and performance of GraphQL queries.","Eliminated unbundling worker threads when filters are configured to skip indexing ANS-104 bundles.","Reduced the default number of ANS-104 worker threads from 2 to 1 when unbundling is enabled to conserve memory.","Increased nodejs max old space size to 8GB when ANS-104 workers > 1.","Fixed","Adjusted paths for chunks indexed by data root to include the full data root."]],["[Release 3] - 2023-12-05","release-3-2023-12-05",["Added","Support range requests (PR 61, PR 64)","Note: serving multiple ranges in a single request is not yet supported.","Release number in /ar-io/info response.","Redis header cache implementation (PR 62).","New default header cache (replaces old FS cache).","LMDB header cache implementation (PR 60).","Intended for use in development only.","Enable by setting CHAIN_CACHE_TYPE=lmdb.","Filesystem header cache cleanup worker (PR 68).","Enabled by default to cleanup old filesystem cache now that Redis is the new default.","Support for parallel ANS-104 unbundling (PR 65).","Changed","Used pinned container images tags for releases.","Default to Redis header cache when running via docker-compose.","Default to LMDB header cache when running via yarn start.","Fixed","Correct GraphQL pagination for transactions with duplicate tags."]]]},{url:"/build/gateways/troubleshooting",sections:[["Troubleshooting",null,[]],["My Gateway Seems to be Running but...","my-gateway-seems-to-be-running-but",["",'My release number doesn\'t match the latest version, or includes "-pre"',"If your release number when you go to <your-gateway>/ar-io/info is lower than the current release, you simply need to upgrade your gateway in order to reach the latest release.",'If your release number includes the suffix "-pre" it means you are running your gateway from the development branch of the github repository, instead of the main branch. The development branch is used for staging work that the engineering team is in the middle of. Because of this, it can be much less stable than the main branch used for production and can cause significant issues.',"Ensure that you are running the latest release, from the main branch, by running the below commands in your terminal:","If this doesn't resolve the issue, you can also try a more extreme method of clearing out the incorrect docker images:","","It appears offline on Viewblock or ar://gateways",'Viewblock and ar://gateways use a very simple ping method for determining if a gateway is "up". There are plenty of reasons why this ping may fail while the gateway is running perfectly, so showing as down is not cause for concern. Just verify that your gateway is still running, and wait. Your gateway will show as up again soon.',"",'< gateway >/ar-io/observer/reports/current just says "report pending"',"This is normal. Your Observer is working to generate a report and that report will be displayed once it is complete.","",'My Observer is showing me the error "error: Error reading interaction: Cannot read properties of undefined"',"This is not an issue with your observer. The short explanation is that your Observer is looking for tasks assigned to it by the ar.io network contract, but there isnt anything there. You can safely ignore this error message.","","Observing my gateway shows failures",'When observing a gateway, there are two main pass/fail tests. "Ownership" and "ArNS Assessment"',"Ownership: This tests to see if the value set in your gateway AR_IO_WALLET value (in .env) matches the wallet used to join the AR.IO Network. If they don't match, update the value in your .env file and restart your gateway.","ArNS Assessment: This tests to see if a gateway is able to resolve ArNS names correctly. The first thing you should check is if you have the ARNS_ROOT_HOST value set in your .env file. If not, set the value and restart your gateway. If this value is set, check to make sure you have current DNS records and SSL certificates for wildcard subdomains on your gateway.","","I updated my .env settings, but nothing changed on my gateway",'Once you edit your .env file, you need to "rebuild" your gateway for the changes to take effect. As of release 3, every time you start your gateway with docker-compose it is automatically rebuilt. So all you need to do is shut your gateway down and restart it.',"","I am getting an out of disk space error, but I still have open storage space on my computer","The most likely cause of this is inode exhaustion. Test this by running the command:","If one of the lines in the output says 100%, you have run out of inodes and so your filesystem is not capable of creating new files, even if you have available space. The solution is to delete files from your data folder in order to free up inodes.","This was a common issue prior to release #3, when Redis caching was introduced to reduce the number of small files created. If you are using an older version of the gateway, consider upgrading to mitigate the risk of inode exhaustion.","","I can't load ArNS names","The first thing you should check if your gateway is not resolving ArNS names is that you have ARNS_ROOT_HOST set in your .env file. If not, set it to your domain name used for the gateway. For example, ARNS_ROOT_HOST=arweave.dev.","Once this value is set, restart your gateway for the changes to take effect.","If that doesn't resolve the issue, check your dns records. You need to have a wildcard subdomain ( *.< your-domain > ) set with your domain registrar so that ArNS names will actually point at your gateway. You can set this record, and generate an SSL certificate for it, in the same way you set the records for your primary domain."]],["My Gateway was Running, but now it isn't","my-gateway-was-running-but-now-it-isnt",["",'When I try to access my gateway in a browser I get a "Your connection is not private" error',"This error message means that your SSL certificates have expired. You need to renew your certificates by running the same certbot command you used when you initially started your gateway:","Certbot SSL certificates expire after 90 days, and you will need to rerun this command to renew every time. If you provide an email address, you will receive an email letting you know when it is time to renew."]],["I am having Trouble Getting my Gateway Set up","i-am-having-trouble-getting-my-gateway-set-up",["","I set my gateway up, but when I go to my domain I get a 404/Nginx error","If you navigate to your domain and see a 404 error from Nginx (the reverse proxy server used in the setup guide) it means that your domain is correctly pointed at the machine running your gateway, but you have not properly configured your Nginx settings (or your gateway is not running).","The Set up Networking section of the setup guide has detailed instructions on configuring your Nginx server. If all else fails, try restarting Nginx, that usually clears any issues with the server clinging to old configurations.","","When I visit my domain I see a 502 error from Nginx","A 502 error from Nginx means that Nginx is working correctly, but it is receiving an error from your gateway when it tries to forward traffic.","","I am having trouble generating my SSL certificates","When using the manual certbot command provided in the setup guide:","You need to be sure that you are waiting after creating your TXT records for them to completely propagate. You can check propagation using a tool like dnschecker.org.","If you continue to have issues, you can check the official certbot instructions guide.","If you do not see your issue listed here, or if you were not able to solve your problem with the above information, feel free to reach out in the ar.io discord."]],["Quick Lookup","quick-lookup",["Below is a quick summary of what you should check when troubleshooting your gateway. Find more detailed information in the sections above.","Issue\nWhat to Check","My release number is wrong\nPull the latest github updates and make sure you are on the main branch","Gateway appears offline on Viewblock or ar://gateways\nProbably fine, but verify that your gateway is still running.","'/ar-io/observer/reports/current' just says \"report pending\"\nNormal behavior, wait for the report to complete.",'Observer error "Cannot read properties of undefined"\nNormal behavior, Observer is checking for data not implemented yet.',"Observing my gateway shows failures\nCheck AR_IO_WALLET and ARNS_ROOT_HOST settings.","Updated .env settings not reflected on gateway\nRebuild your gateway after editing .env file.","Out of disk space error\nCheck for inode exhaustion and delete files if necessary.","Can't load ArNS names\nCheck ARNS_ROOT_HOST setting in .env file, and DNS records.",'"Your connection is not private" error\nGenerate or renew SSL certificates.',"404/Nginx error when accessing domain\nCheck Nginx settings and restart Nginx if necessary.","502 error from Nginx\nCheck for errors in your gateway.","Trouble generating SSL certificates\nEnsure TXT records have propagated and follow certbot instructions."]]]},{url:"/build/gateways/upgrading",sections:[["Upgrading your Gateway",null,["To ensure the optimal performance and security of your AR.IO Gateway, it's essential to regularly upgrade to the latest version. Notably, indexed data resides separate from Docker. As a result, neither upgrading the Gateway nor pruning Docker will erase your data or progress. Here's how you can perform the upgrade:"]],["Prerequisites","prerequisites",["Your Gateway should have been cloned using git. If you haven't, follow the installation instructions for windows or linux."]],["Checking your Release Number","checking-your-release-number",["Effective with release 3, you can view the currently implemented release on any gateway by visiting https://<gateway>/ar-io/info in a browser. Be sure to replace <gateway> with the domain of the gateway you are checking.","If the release number displayed includes -pre it means that your gateway is using the develop branch of the github repo for the gateway code. Follow steps in our troubleshooting guide to switch over to the more stable main branch.","Announcements will be made in our discord server showing each new release."]],["Upgrade Steps","upgrade-steps",["Pull the latest changes from the repository","Navigate to your cloned repository directory and execute the following command:","Shut down Docker","Depending on your operating system, use the respective commands:","Linux","Windows","Prune Docker (Optional)","It's a good practice to clean up unused Docker resources. Again, use the command based on your OS:","NOTE: This will erase all inactive docker containers on your machine. If you use docker for anything beyond running a gateway be extremely careful using this command.","Linux","Windows","Check for New Environmental Variables","Read the update release change logs and community announcements to see if the new version includes any new environmental variables that you should set before restarting your gateway.","Restart the Docker container","Finally, start the Docker container again to implement the changes:","Linux","Windows","NOTE: Effective with Release #3, it is no longer required to include the --build flag when starting your gateway. Docker will automatically build using the image specified in the docker-commpose.yaml file.","That's it! Your AR.IO Gateway is now upgraded to the latest version. Ensure to test and verify that everything is functioning as expected. If you encounter any issues, reach out to the AR.IO community for assistance."]]]},{url:"/build/gateways/windows-setup",sections:[["Windows Installation Instructions",null,[]],["Overview","overview",["This guide provides step-by-step instructions for setting up the AR.IO node on a Windows computer. It covers installing necessary software, cloning the repository, creating an environment file, starting the Docker container, setting up networking, and installing and configuring NGINX Docker. No prior coding experience is required."]],["Prerequisites","prerequisites",["Before starting the installation process, ensure you have the following:","A Windows computer","Administrative privileges on the computer"]],["Install Required Packages","install-required-packages",["Install Docker:","Download Docker Desktop for Windows from here.","Run the installer and follow the prompts.","During installation, make sure to select the option to use WSL (Windows Subsystem for Linux) rather than Hyper-V.","Restart your PC.","Update Windows Subsystem for Linux (WSL):","Open the command prompt as an administrator:","Press Windows Key + R.","Type cmd and press Enter.",'Right-click on the "Command Prompt" application in the search results.','Select "Run as administrator" from the context menu.',"Run the following commands:","Restart Docker Desktop.","Install Git:","Download Git for Windows from here.","Run the installer and use the default settings."]],["Clone the Repository","clone-the-repository",["Clone the main repository:","Open the command prompt:","Press Windows Key + R.","Type cmd and press Enter.","Navigate to the directory where you want to clone the repository:","Use the cd command to change directories. For example, to navigate to the Documents directory:","More detailed instructions on navigating with the cd command can be found here","NOTE: Your database of Arweave Transaction Headers will be created in the project directory, not Docker. So, if you are using an external hard drive to turn an old machine into a node, install the node directly to that external drive.","Run the following command:"]],["Create the Environment File","create-the-environment-file",["Create an environmental variables file:","Open a text editor (e.g., Notepad):",'Press Windows Key and search for "Notepad".','Click on "Notepad" to open the text editor.',"Paste the following content into the new file, replacing <your-domain> with the domain address you are using to access the node, and <your-public-wallet-address> with the public address of your Arweave wallet:","The GRAPHQL values set the proxy for GQL queries to arweave.net, You may use any available gateway that supports GQL queries. If omitted, your node can support GQL queries on locally indexed transactions, but only L1 transactions are indexed by default.","START_HEIGHT is an optional line. It sets the block number where your node will start downloading and indexing transactions headers. Omitting this line will begin indexing at block 0.","RUN_OBSERVER turns on the Observer to generate Network Compliance Reports. This is required for full participation in the AR.IO Network. Set to false to run your gateway without Observer.","ARNS_ROOT_HOST sets the starting point for resolving ARNS names, which are accessed as a subdomain of a gateway. It should be set to the url you are pointing to your node, excluding any protocol prefix. For example, use node-ar.io and not https://node-ar.io. If you are using a subdomain to access your node and do not set this value, the node will not understand incoming requests.","AR_IO_WALLET is optional, and sets the wallet you want associated with your Gateway. An associated wallet is required to join the AR.IO network.","OBSERVER_WALLET is the public address of the wallet used to sign Observer transactions. This is required for Observer to run, but may be omitted if you are running a gateway outside of the AR.IO network and do not plan to run Observer. You will need to supply the keyfile to this wallet in the next step.","Advanced configuration options can be found at docs.ar.io",'Save the file with the name ".env" and make sure to select "All Files" as the file type. This helps to ensure the file saves as ".env" and not ".env.txt"',"Note: The .env file should be saved inside the same directory where you cloned the repository (e.g., ar-io-node)."]],["Supply Your Observer Wallet Keyfile:","supply-your-observer-wallet-keyfile",['If you are running Observer, you need to provide a wallet keyfile in order to sign report upload transactions. The keyfile must be saved in the wallets directory in the root of the repository. Name the file <Observer-Wallet-Address>.json, replacing "<Observer-Wallet-Address>" with the public address of the wallet. This should match your OBSERVER_WALLET environmental variable.',"Learn more about creating Arweave wallets and obtaining keyfiles here"]],["Start the Docker Containers","start-the-docker-containers",["Start the Docker container:","Open the command prompt:","Press Windows Key + R.","Type cmd and press Enter.","Navigate to the directory where you cloned the repository (e.g., ar-io-node):","Use the cd command to change directories. For example, if the repository is located in the Documents directory, you would enter:","If the directory path contains spaces, enclose it in double quotation marks. For example:","Use the dir command to list the contents of the current directory and verify that you're in the correct location:","Once you are in the correct directory, run the following command to start the Docker container:","Explanation of flags:","up: Start the Docker containers.","-d: Run the containers as background processes (detached mode).","NOTE: Effective with Release #3, it is no longer required to include the --build flag when starting your gateway. Docker will automatically build using the image specified in the docker-commpose.yaml file.","The gateway can be shut down using the command:","If prompted by the firewall, allow access for Docker when requested."]],["Set Up Router Port Forwarding","set-up-router-port-forwarding",["To expose your node to the internet and use a custom domain, follow these steps:","Obtain a Domain Name:","Choose a domain registrar (e.g., Namecheap) and purchase a domain name.","Point the Domain at Your Home Network:","In your browser, go to https://www.whatsmyip.org/ to display your public ip address. It can be found at the top of the screen. Note this number down.","Access your domain registrar's settings (e.g., Namecheap's cPanel).",'Navigate to the DNS settings for your domain. In cPanel this is under the "Zone Editor" tab.','Create an A record with your registrar for your domain and wildcard subdomains, using your public IP address. For example, if your domain is "ar.io," create a record for "ar.io" and "*.ar.io."',"Instructions may vary depending on the domain registrar and cPanel. Consult your registrar's documentation or support for detailed steps.","Obtain the Local IP Address of Your Machine:","Open the command prompt:","Press Windows Key + R.","Type cmd and press Enter.","Run the following command:","Look for the network adapter that is currently connected to your network (e.g., Ethernet or Wi-Fi).","Note down the IPv4 Address associated with the network adapter. It should be in the format of 192.168.X.X or 10.X.X.X.","This IP address will be used for port forwarding.","Set Up Router Port Forwarding:","Access your home router settings:","Open a web browser.","Enter your router's IP address in the address bar (e.g., 192.168.0.1).","If you're unsure of your router's IP address, consult your router's documentation or contact your Internet Service Provider (ISP).","Navigate to the port forwarding settings in your router configuration.","The exact steps may vary depending on your router model. Consult your router's documentation or support for detailed steps.","Set up port forwarding rules to forward incoming traffic on ports 80 and 443 to the local IP address of your machine where the node is installed.","Configure the ports to point to the local IP address noted in the previous step.","Save the settings."]],["Install and Configure NGINX Docker","install-and-configure-nginx-docker",["Clone the NGINX Docker repository:","Open the command prompt:","Press Windows Key + R.","Type cmd and press Enter.","Navigate to the directory where you want to clone the repository (This should not be done inside the directory for the node):","Use the cd command to change directories. For example, to navigate to the Documents directory:","Run the following command:","Note: This NGINX container was designed to easily automate many of the more technical aspects of setting up NGNIX and obtaining an ssl certificate so your node can be accessed with https. However, wildcard domain certifications cannot be universally automated due to significant security concerns. Be sure to follow the instructions in this project for obtaining wildcard domain certificates in order for your node to function properly.","Follow the instructions provided in the repository for setting up NGINX Docker.","Congratulations! Your AR.IO node is now running and connected to the internet. Test it by entering https://<your-domain>/3lyxgbgEvqNSvJrTX2J7CfRychUD5KClFhhVLyTPNCQ in your browser.","Note: If you encounter any issues during the installation process, please seek assistance from the AR.IO community."]]]},{url:"/build/guides/arns-viewer",sections:[["ArNS Viewer",null,[]],["Overview","overview",["This guide will walk you through creating a project that uses the ar.io SDK to interact with ArNS names in a web environment. It provides all the steps and context needed to help you get up and running smoothly, allowing you to effectively use these technologies.","We will be using ARNext, a new framework based on Next.js, to simplify deployment to the Arweave permaweb. ARNext provides flexibility for deploying seamlessly to Arweave using an ArNS name, an Arweave transaction ID, or traditional services like Vercel—all without requiring major code modifications. This means you can deploy the same project across different environments with minimal effort.","The guide will focus on the following core functionalities of the ar.io SDK:","Retrieving a List of All Active ArNS Names: Learn how to use the SDK to get and display a list of active ArNS names.","Querying Detailed Records for a Specific ArNS Name: Learn how to access detailed records for a specific ArNS name using its ANT (Arweave Name Token).","Updating and Creating Records on an ArNS Name: Learn how to modify and add records to an ArNS name, showcasing the capabilities of ANT for dynamic web content.","By the end of this guide, you will have a complete, functional project that not only demonstrates how to use the ar.io SDK but also shows the ease and flexibility of deploying applications to the Arweave permaweb. Whether you are an experienced developer or just starting out, this guide will help you understand the key aspects of building and deploying on Arweave."]],["Getting Started","getting-started",["Prerequisites","Node v20.17 or greater","git","Install ARNext","ARNext is a brand new framework that is still in development. It supports installation using npx, and you will need the proper Node version for the installation to be successful.","You can then move your terminal into that newly created folder with:","or open the folder in an IDE like VSCode, and open a new terminal inside that IDE in order to complete the next steps.","Sanity Check","It is good practice when starting a new project to view it in localhost without any changes, to make sure everything is installed and working correctly. To do this, run:","or, if you prefer yarn:","By default, the project will be served on port 3000, so you can access it by navigating to localhost:3000 in any browser. You should see something that looks like this:","With this complete, you are ready to move on to customizing for your own project."]],["Install ar.io SDK","install-ar-io-sdk",["Next, install the ar.io SDK.","or","Polyfills","Polyfills are used to provide missing functionality in certain environments. For example, browsers do not have direct access to a computer's file system, but many JavaScript libraries are designed to work in both browser and Node.js environments. These libraries might include references to fs, the module used by Node.js to interact with the file system. Since fs is not available in browsers, we need a polyfill to handle these references and ensure the application runs properly in a browser environment.","Polyfills are actually evil voodoo curse magic. No one understands what they are or how they work, but front end devs sell their souls to Bill Gates in exchange for their stuff working properly in browsers. The below polyfill instructions were stolen, at great personal cost, from one of these front end devs in order to save your soul. This is one of many convenient services offered by ar.io","Installation","The below command will install several packages as development dependencies, which should be sufficient to handle most polyfill needs for projects that interact with Arweave.","or","Next Config","With the polyfill packages installed, we need to tell our app how to use them. In NextJS, which ARNext is built on, this is done in the next.config.js file in the root of the project. The default config file will look like this:","This configuration allows the app to determine if it is being served via an Arweave transaction Id, or through a more traditional method. From here, we need to add in the additional configurations for resolving our polyfills. The updated next.config.js will look like this:","With that, you are ready to start customizing your app."]],["Strip Default Content","strip-default-content",["The first step in building your custom app is to remove the default content and create a clean slate. Follow these steps:","Update the Home Page","Navigate to pages > index.js, which serves as the main home page.","Delete everything in this file and replace it with the following placeholder:","Remove Unused Pages","The folder pages > posts > [id].js will not be used in this project. Delete the entire posts folder to keep the project organized and free of unnecessary files.","Create Header","Create a new components folder","Inside that, create a Header.js file, leave it blank for now.","Create Routes","Create a new file at components > ArweaveRoutes.js to handle routing between pages. Leave it simple for now.","Your project is now a blank slate, ready for your own custom design and functionality. This clean setup will make it easier to build and maintain your application as you move forward."]],["Add Utilities","add-utilities",["There are a few functions that we might end up wanting to use in multiple different pages in our finished product. So we can put these in a separate file and export them, so that other pages can import them to use. Start by creating a utils folder in the root of the project, then create 2 files inside of it:","auth.js: This will contain the functions required for connecting an Arweave wallet using ArConnect","arweave.js: This is where we will put most of our ar.io SDK functions for interacting with Arweave"]],["Build Home Page","build-home-page",["Header","We want the Header component to contain a button for users to connect their wallet to the site, and display their wallet address when Connected. To do this, we will use the functions we exported from the utils > auth.js file, and pass in a state and set state function from each page rendering the header:"]],["Grid Component","grid-component",["Our home page is going to fetch a list of all ArNS names and display them. To make this display cleaner and more organized, we are going to create a component to display the names as a grid.","Create a new file in components named RecordsGrid.js","This will take an individual ArNS record and display it as a button that logs the record name when clicked. We will update this later to make the button act as a link to the more detailed record page after we build that, which is why we are importing Link from arnext"]],["Home Page","home-page",["Go back to pages > index.js and lets build out our home page. We want to fetch the list of ArNS names when the page loads, and then feed the list into the grid component we just created. Because there are so many names, we also want to include a simple search bar to filter out displayed names. We will also need several states in order to manage all of this info:"]],["Names Page","names-page",["NextJS, and ARNext by extension, supports dynamic routing, allowing us to create dedicated pages for any ArNS name without needing to use query strings, which makes the sharable urls much cleaner and more intuitive. We can do this by creating a page file with the naming convention [variable].js. Since we want to make a page for specific ArNS names we will create a new folder inside the pages folder named names, and then a new file pages > names > [name].js.","This will be our largest file so far, including different logic for the displayed content depending on if the connected wallet is authorized to make changes the the name. We also need to make the page see what the name being looked at is, based on the url. We can do this using the custom useParams function from ARNext.","The finished page will look like this:","When this page loads, it gets the name being queried by using useParams and our custom getStaticPaths and getStaticProps functions. It then uses the ar.io sdk to get the process Id of the ANT that controls the name, and queries the ANT for its info and detailed records list.","Once the page has that info, it renders the ArNS name, its owner address, any addresses authorized to make changes, and every record that name contains. If the user has connected a wallet authorized to make changes, the page also renders input fields for each record for making those updates. It also provides the option to create an entirely new undername record."]],["Finish the Grid Component","finish-the-grid-component",["Now that we have a path for our main page displays to link to, we can update the components > RecordsGrid.js file to include that link when clicked."]],["View Project","view-project",["The ArNS viewer should be fully functional now. You can view it locally in your browser using the same steps as the initial Sanity Check","Run yarn dev in your terminal","Navigate to localhost:3000 in a browser"]],["CSS","css",["You will likely notice that everything functions correctly, but it doesnt look very nice. This is because we havent updated our css at all.","The primary css file for this project is css > App.css. You can make whatever css rules here that you like to make the page look the way you want."]],["Deploy With Turbo","deploy-with-turbo",["Once your app is looking the way you want it, you can deploy it to the permaweb using Turbo. For this, you will need an Arweave wallet with some Turbo Credits. Make sure you don't place your keyfile for the wallet inside the project directory, or you risk it getting uploaded to Arweave by mistake.","In your terminal, run the command:","Make sure to replace <path-to-your-wallet> with the actual path to your Arweave wallet. This will create a static build of your entire project, upload it to Arweave, and print out in the terminal all of the details of the upload.","Find the section in the print out manifestResponse which will have a key named id. That will be the Arweave transaction id for your project.","You can view a permanently deployed version of your project at https://arweave.net/<transaction-id>"]],["References","references",["Completed Project example: github","Deployed Project: transaction id"]]]},{url:"/build/guides/gql",sections:[["GraphQL",null,[]],["Overview","overview",["GraphQL is a powerful query language designed for modern web applications to efficiently fetch data. It enables precise queries, allowing users to specify exactly which data they need and in what format, significantly reducing the amount of unnecessary data transferred. This approach is ideal for dealing with complex systems and large datasets, as it minimizes bandwidth and improves performance. GraphQL operates through a single endpoint, streamlining the way applications communicate with databases.","The integration of GraphQL with Arweave introduces a refined method for interacting with decentralized data storage. Arweave allows for the tagging of uploaded data, facilitating enhanced searchability and retrievability within its blockchain network. Utilizing GraphQL, users can perform targeted queries that leverage these tags, ensuring the retrieval of specific data swiftly and efficiently. This capability is particularly beneficial for the development of decentralized applications (dApps), the archival of content in a permanent and unalterable form, and the establishment of data marketplaces where precision and efficiency in data access are paramount.","Together, GraphQL and Arweave form a compelling combination, offering developers and users a robust framework for managing and querying data in a decentralized environment. This integration not only promotes the efficient and scalable retrieval of data but also supports the creation of more sophisticated and data-intensive applications on the decentralized web, maintaining a balance between technical depth and accessibility."]],["Constructing a Query","constructing-a-query",["Basic Syntax","In GraphQL, you start with a root field and use braces to outline the fields you want to retrieve, allowing for precise, hierarchical data requests. For instance:","This query demonstrates fetching transactions and their tags, illustrating the hierarchical nature of GraphQL queries.","Customizing Searches with Tags","Arweave utilizes a tagging system for transactions, enabling intricate search capabilities. You can filter queries using these tags:","This example filters transactions by a specific application name, and returns the id, size, and type of the transaction, showcasing how to customize queries for targeted data retrieval.","NOTE: Tags are not the only option for filtering results, but are extremely useful due to the ability to add custom tags during the upload process.","Understanding Edges and Nodes","In the realm of GraphQL queries, especially when interfacing with Arweave, grasping the concept of edges and nodes is pivotal for constructing efficient and effective queries. This structure is not unique to Arweave but is particularly relevant due to the decentralized and interconnected nature of the data stored on its blockchain.","Nodes: At the heart of GraphQL's query structure, nodes represent individual data points or entities. In the context of Arweave, a node could be a transaction, a block, or any piece of data stored within the network. Nodes are the primary targets of your query, containing the data you wish to retrieve, such as transaction IDs, tags, or the content of data transactions.","Edges: Serving as the glue between nodes, edges are constructs that outline the relationship between different nodes. They can contain metadata about the connection, such as the nature of the relationship or additional attributes that describe how nodes are linked. In many GraphQL implementations, including those that interact with Arweave, edges are used to navigate through collections of related data, making them crucial for understanding the data's structure and lineage.","This hierarchical model is especially useful for querying complex and relational data sets, allowing for detailed navigation and efficient data retrieval within Arweave's decentralized storage system. By effectively utilizing the edges and nodes structure, you can precisely target the data you need, whether it's filtering transactions by tags, fetching related transactions, or exploring the blockchain's structure.","Pagination","To add pagination to your GraphQL queries, you can use the first, last, before, and after parameters. These parameters control the slice of data you're querying, making data retrieval more efficient and manageable.","first: Specify the number of items to retrieve from the start of the list or dataset.","last: Specify the number of items to retrieve from the end of the list or dataset.","This query fetches the first 10 transactions.","To navigate through your dataset, you can use after and before in conjunction with first or last. These parameters accept cursors, which are typically provided in the response of your initial query.","after: Fetch items after the specified cursor, used with first.","before: Fetch items before the specified cursor, used with last.",'This query fetches the next 10 transactions following the transaction with the cursor "cursorOfLastItem".',"If no pagination terms are set, GraphQL servers may apply default limits to prevent excessively large datasets from being returned in a single query, potentially impacting performance. The default behavior can vary based on the server's configuration but often involves returning a predefined maximum number of items.","For instance, without specifying first or last, a query to the transactions field might return the first 5-10 transactions by default, depending on the server settings.","This behavior ensures that server resources are not overwhelmed by large requests and that client applications receive data in manageable chunks.","General Tips for Optimizing Queries","To optimize your GraphQL queries in Arweave, follow these general guidelines:","Specificity: Query with the most precise tags possible to narrow the search scope and enhance performance.","Minimalism: Limit your query to the essential set of tags to reduce processing time and data transfer.","Schema Design: Design your app's schema to reflect query patterns, possibly introducing tags that encapsulate frequent combinations of criteria.","Include Non-tag Fields: Adding fields like owner can refine your search, making your queries more efficient.","Order Your Tags: Arrange tags from most specific to most general to leverage Arweave's indexing more effectively.","By incorporating these strategies, developers can achieve faster and more precise data access from Arweave, enhancing the performance and responsiveness of decentralized applications. This balanced approach to query construction and optimization is key to navigating the expansive and decentralized storage landscape Arweave provides."]],["Making a Query","making-a-query",["Executing GraphQL queries within the Arweave ecosystem offers flexibility and multiple avenues for developers and users alike. Whether you prefer a hands-on, manual approach to constructing and testing queries, or you aim for automation and integration within your applications, Arweave provides the tools necessary to interact with its decentralized data storage seamlessly.","GraphQL Playground","For those new to GraphQL or seeking to fine-tune their queries before implementation, the GraphQL playground offers an invaluable resource. This interactive interface allows users to manually construct queries, explore the schema, and immediately see the results of their queries. Accessible via web browsers, the playground can be found at the /graphql endpoint of most Arweave indexing services, such as https://arweave.dev/graphql. Here, you can experiment with different queries, understand the structure of the data, and refine your approach without writing a single line of code in your application.","Steps for Accessing the GraphQL Playground:","Navigate to https://arweave.dev/graphql, or the graphql endpoint of any ar.io gateway, in your web browser.","Enter your GraphQL query in the provided interface.",'Press the "play" button to execute the query to see real-time results and debug as needed.',"Using an API","For application development and automation, making GraphQL queries programmatically is essential. You can send POST requests directly to the GraphQL endpoint of any indexing service that supports it, such as arweave.net or any ar.io gateway. These requests should contain your query in the body, allowing for dynamic and automated data retrieval within your application.","When selecting an indexing service, consider the data coverage and reliability of the gateway to ensure it meets your application's needs. Different gateways might have varying degrees of indexed data available, so choosing one that is consistently up-to-date and comprehensive is key.","Example of making a programmatic query:","Using an SDK","For an even more integrated experience, some Software Development Kits (SDKs) offer direct methods for executing GraphQL queries. The Arweave SDK, for example, provides built-in functionalities to interact with the blockchain, simplifying the process of making queries. By leveraging these SDKs, developers can bypass the intricacies of manual HTTP request construction, focusing instead on the logic and design of their applications.","Example of using the Arweave SDK for GraphQL queries:"]]]},{url:"/build/guides/permaweb-deploy",sections:[["Deploy a Website or Application",null,[]],["Overview","overview",["With the growing popularity of permanently deployed apps, hosted on Arweave, along with the growing list of tools offered by ar.io, several methods have been developed to automate the process of deploying a website and updating the ArNS name pointed at it. A particularly useful tool for this is permaweb-deploy from Forward Research.","permaweb-deploy is a cli tool that handles uploading a build folder to Arweave using Turbo, creating a manifest, and then updating an ArNS name to point at the new manifest. It being a cli tool makes it very easy to incorporate into a github actions flow. Setting up an automated deployment with permaweb-deploy is simple, but does require a few steps."]],["Getting Started","getting-started",["Installing package","permaweb-deploy is an npm package, and must be installed in any project before it can be used. If you are using npm, you can install the package with the below command:","If you prefer yarn for your package installations, the process is slightly more involved. permaweb-deploy is not designed for installation with yarn, so you must provide the additional argument ignore-engines in order to skip over the yarn version error you would normally get with installation. There are two methods for doing so:","Directly in the install command","In a .yarnc file","You can provide a file, named .yarnc in the same directory as your package.json in order to assign specific instructions to all of your yarn commands. Creating a .yarnc file with the line","will have the same effect as providing the flag directly in your yarn command","Adding a Deploy Script","The simplest way to utilize the permaweb-deploy tool is to build it into a script in your package.json. Here you will provide all of the variables that permaweb-deploy needs in order to function properly, as well as ensure that your app is statically built before being uploaded.","The above example shows a build script for a vuepress app, which will build the app into a static folder for deployment, and a deploy script which runs build and then permaweb-deploy. Your build script will look different depending on the framework you are using, but most will provide that for you when you create your app.","The permaweb-deploy command has two required arguments:","--deploy-folder\nThis is the relative path (from your package.json) to the build folder you want to upload. In a vuepress app, that will be ./src/.vuepress/dist unless you manually specify otherwise in your vuepress configuration. It will be different depending on your chosen framework and if you have modified the default location.","--ant-process\nThis is the process id of the Arweave Name Token for the ArNS name you want to deploy to. You can find this id by viewing the name on arns.app. Providing the process id is crucial for making sure the update is sent to the ao process that controls the ArNS name.","There is also the additional, optional flag --undername. If you want to deploy your app to an undername on an ArNS name, provide that name with this flag.","Providing Arweave Wallet Keys","While using permaweb-deploy, you will be uploading data to Arweave using Turbo, as well as performing protected actions on an Arweave Name Token. Because of this, you will need to provide the keys to an Arweave wallet in order for the actions to be successful. The wallet must contain Turbo Credits to pay for the upload, and it must either be a controller or the owner of the ArNS name you are trying to update.","permaweb-deploy requires your wallet keyfile be encoded in base64 format. You can convert a local keyfile to base64, and copy the new value to your clipboard by using one of the below commands, depending on your operating system:","Linux","Mac","Windows (CMD)","Be sure to replace wallet.json with the path to your chosen wallet keyfile. Once you have this value saved to your clipboard, you can move on to the next step.","Create Github Secrets","Anyone who has your wallet keyfile (including the base64 formatted keyfile) has full control over your wallet and any of its assets. Because of this, you do not want to include it directly in your package.json script. Instead, keep the value safe by storing it in a github secret. You will create the secrets in the settings tab on your github repo, and the secrets will act as environmental variables in the github actions workflow.",'You will need to create 2 secrets"',"DEPLOY_KEY: This is the base64 encoded version of your Arweave wallet keyfile.","ANT_PROCESS: This is the process id of the Arweave Name Token for your ArNS name. This value is not as sensitive, and may be provided in your package.json without issue, but it is a very long hashed string, and it is much easier to work with the variable name than the string itself.","Create Action Workflow","Github Actions allow you to perform specific actions whenever you push code to github. They are handled by using .yaml files provided in <root-of-project>/.github/workflows.","To get started, create a new file named deploy.yaml in the workflows directory, then paste the below inside of it:","The above tells github to perform these actions when you push new code to the branch main","It then sets up a vps with nodejs v 20. When that is complete, it installs dependencies for your project using npm (You will need to add a step to install yarn if that is your preferred package manager), and runs your deploy script, which builds your static folder and then runs permaweb-deploy. It also loads your github secrets into environmental variables that can be used by your deploy script."]],["Deploying App","deploying-app",["With the above setup complete, the only thing you need to do to deploy a new version of a permasite app to Arweave is push the updated code to branch main on github. Everything else is fully automated."]]]},{url:"/learn/concepts/arns",sections:[["Arweave Name System (ArNS)",null,[]],["Overview","overview",["Arweave URLs and Transaction IDs are long, difficult to remember, and occasionally miscategorized as spam. The Arweave Name System (ArNS) aims to resolve these problems in a decentralized manner. ArNS is a censorship-resistant naming system stored on Arweave, purchased with IO tokens, enabled through AR.IO gateway domains, and used to connect friendly domain names to permaweb dApps, web pages, data, and identities.","It's like an open, permissionless address book for anything on the permaweb, powered by the aoComputer.","This system works similarly to traditional DNS services, where users can purchase a name in a registry and DNS Name servers resolve these names to IP addresses. The system shall be flexible and allow users to purchase names permanently or lease them for a defined period based on their use case. With ArNS, the registry is decentralized, permanent, and stored on Arweave (through the aoComputer). This means that apps and infrastructure cannot just read the latest state of the registry but can also check any point in time in the past, creating a “Wayback Machine” of permanent data.","Users can register a name, like ardrive, within the ArNS Registry. Before owning a name, they must create an Arweave Name Token (ANT), an aoCOmputer process and open-source protocol used by ArNS to track the ownership and control over the name. ANTs allow the owner to set a pointer to any type of permaweb data, like a page, dApp or file, via its Arweave Transaction ID.","Each AR.IO gateway acts as both a smart contract cache and an ArNS Name resolver. They will generate the latest state of both the ArNS Registry and its related ANTs and serve this information rapidly for apps and users. AR.IO gateways will also resolve that name as one of their own subdomains, e.g., https://ardrive.arweave.net and proxy all requests to the associated Arweave Transaction ID. This means that ANTs work across all AR.IO gateways that support them: https://ardrive.ar-io.dev, https://ardrive.g8way.io/, etc.","Users can easily reference these friendly names in their browsers, and other applications and infrastructure can build rich solutions on top of these ArNS primitives.","Arweave Name System Interactions"]],["Name Registry","name-registry",["The ArNS Registry is a list of all the registered names and their associated ANT AO process Ids. Registering a name requires spending IO tokens based upon the name length and purchase type. The system shall allow users to either lease a name on a yearly basis (maximum up to 5 years) or purchase that name permanently.","The registry uses the following key rules, embedded within the AR.IO AO process:","The genesis prices of names are set within the contract itself; these are the starting conditions.","Name prices vary based on name length, purchase type (lease vs buy), lease duration, and the current Demand Factor. See the Dynamic Pricing section for more details.","Name records in the registry each include a pointer to its Arweave Name Token Smart Contract process address, its lease end time, and undername allocation.","Anyone with available IO Tokens can extend any name’s active lease.","Anyone with available IO Tokens can purchase undername space for any name.","When a lease expires, there is a grace period where it can still be extended before anyone else can repurchase the name with a new ANT.","Once added, name records cannot be removed from the registry. A leased name’s associated ANT smart contract address cannot be changed until the lease has expired and a new one is purchased. Care must be taken by the owners of permanent name purchases to ensure that their ANT supports an evolve ability should it be desired to add or modify functionality in the future as these name purchases are permanently tied to the associated ANT. Owners of permanently purchased names must understand the consequences of private key loss, which results in not being able to update any data pointers for this name.","Name Validation Rules","All names registered shall meet the following criteria:","Valid names include only numbers 0-9, characters a-z and dashes.","Dashes cannot be leading or trailing characters.","Dashes cannot be used in single character domains.","1 character minimum, 51 characters maximum.","Shall not be an invalid name predesignated to prevent unintentional use/abuse such as www."]],["Arweave Name Token (ANT)","arweave-name-token-ant",["To establish ownership of a record in the ArNS Registry, each record contains both a friendly name and a reference to an Arweave Name Token, ANT. Name Tokens are unique aoComputer process tokens that give their owners the ability to update the Arweave Transaction IDs that their associated friendly names point to.","The ANT process is a standardized contract that contains the specific ArNS Record specification required by AR.IO gateways who resolve ArNS names and their Arweave Transaction IDs. It also contains other basic functionality to establish ownership and the ability to transfer ownership and update the Arweave Transaction ID.","Name Tokens have an owner, who can transfer the token and control all of its modifiable settings. These settings include modifying the time to live (ttl) for each name contained in the ANT, and other settings like the ANT Name, Ticker, and an ANT Controller. The controller can only manage the ANT and set and update records, name, and the ticker, but cannot transfer the ANT. Note that ANTs are initially created by an end user, in accordance with network standards, who then has to ability to transfer its ownership or assign a controller as they see fit.","Secondary markets could be created by ecosystem partners that facilitate the trade of Name Tokens. Additionally, tertiary markets could be created that support the leasing of these friendly names to other users. Such markets, if any, would be created by third parties unrelated to and outside of the scope of this paper or control of the Foundation.","The table below indicates some of the possible interactions with an ANT and who can perform them:","ANT Interactions","Type\nANT Owner\nANT Controller\nAny IO Token Holder","Transfer ANT\n✔","Add / remove controllers\n✔","Set records (pointers)\n✔\n✔","Update records, name, ticker\n✔\n✔","Extend / renew lease\n✔\n✔\n✔","Increase undernames\n✔\n✔\n✔","ANT Interactions","Under_Names","ANT owners and controllers can configure multiple subdomains for their registered ArNS name known as “under_names” or more easily written “undernames”. These undernames are assigned individually at the time of registration or can be added on to any registered name at any time.","Undernames use an underscore “_” in place of a more typically used dot “.“ to separate the subdomain from the main ArNS domain.","This means users can trust dapp_ardrive just like you would trust ardrive since the owner of ardrive is the only one who can configure dapp_ardrive.","Some other features that undernames allow include:","Undernames are configured in the ANT that is referenced for a given name. ANT owners can add more undernames as subDomains in the ANT’s records object, each of which can point to a different Arweave Transaction ID.","Each registered name is provided with an allocation of 10 undernames by default. Additional undername space can be purchased individually and as needed.","Other users could never register a name that resembles an undername on ardrive since “_” is not allowed to be registered in the ArNS registry.","Another user can register dapp-ardrive but this is a separate ArNS domain altogether. In traditional DNS, it’s like the difference in trusting dapp-ardrive.io(suspicious!) over the legitimate dapp.ardrive.io","Undernames can go multiple levels deep, like version_dapp_ardrive but must not be longer than the total MAX_NAME_LENGTH of an ArNS name. The total amount of characters for a name string consisting of undernames and underscore separators is 63 characters.","Undernames give more versatility and utility to owning an ArNS name."]],["Addressing Variable Market Conditions","addressing-variable-market-conditions",["The future market landscape is unpredictable, and the AR.IO Network smart contract is designed to be immutable, operating without governance or mechanisms for manual intervention. In addition, the traditional method of employing a pricing oracle to fix prices relative to a stable currency is not viable due to the infancy of the network as well as the inherent reliance on outside dependencies. Considering this, ArNS is designed to be self-contained and adaptive, ensuring that name prices always mirror network activity and market conditions.","To achieve this, ArNS incorporates a dynamic pricing model that utilizes a “Demand Factor” to adjust fees in line with ArNS purchase activity.","ArNS is designed to ensure that name valuations are always in sync with their true market worth, despite the unchangeable nature of the smart contract it operates on."]],["Dynamic Pricing Model","dynamic-pricing-model",["The Arweave Name System (ArNS) introduces an adaptive pricing model for registering names within the AR.IO Network. The core objective is to strike a balance between market demand and pricing fairness, leveraging both static and dynamic pricing elements. The system differentiates prices based on character lengths of names and offers varied purchasing options such as leasing, permanent acquisition, and undernames.","A unique feature of the ArNS pricing mechanism is the integration of a Demand Factor (DF), a dynamic multiplier that adjusts name prices in response to market demand. The DF is determined by comparing the total revenue in IO tokens from the current period to a moving average of revenues from the preceding period window. Depending on whether revenue is above, below, or equal to this average, the DF can increase or decrease. These adjustments are contained within boundaries to prevent extreme pricing variations.","This comprehensive approach ensures that ArNS names are accessible and reasonably priced, adapting to market trends while maintaining an equitable and maintenance-free registration environment.","Pricing Scenarios","There are several pricing models for leasing and purchasing names:","Leased Name: Allows a user to lease a name for a certain duration and have it available for use immediately by the lessee.","Permanent Name: Allows a user to purchase a name permanently and have it available for use immediately by the owner.","Dynamic Pricing Mechanics","Names are initially priced according to the Genesis Registration Fee (GRF), as set in the AR.IO smart contract, with prices varying based on the length of the name. As the network's activity progresses, these fees give way to Base Registration Fees (BRF), which are modified by periodic step adjustments. The Demand Factor (DF) is a crucial component that dynamically scales prices, fluctuating with the network’s revenue trends.","Revenue in the network accumulates within the Protocol Balance through various streams, such as instant name leases or purchases, lease extensions, and under_name transactions. This cumulative revenue impacts the Demand Factor, which in turn influences the current name prices.","The DF is adjusted by comparing the recent period’s revenue against a Revenue Moving Average (RMA) from the preceding seven periods. Based on this comparison, the DF can either increase, to reflect greater demand, or decrease, in response to diminished revenue, all within predetermined limits to prevent drastic fluctuations in pricing","The pricing system articulates various fees:","The Adjusted Registration Fee (ARF) is the BRF modified by the DF.","The Annual Fee is set as a proportion of the ARF.","Instant Lease Registration and Permabuy prices are derived from the ARF, adding the calculated annual fees over the desired years.","The DF’s modifications are controlled by the network's recent performance against the RMA. An increase in revenue leads to a DF rise, signifying a thriving market demand, while a decrease indicates the opposite. This responsive adjustment mechanism ensures that the pricing model remains aligned with actual market activity.","Under_names are bundled with name registrations with additional ones available for purchase. The cost for extra under_names is a percentage of the current BRF, altered by the DF.","Step Pricing Mechanics","The dynamic model shall utilize a “Step Pricing” concept that acts as a stabilizing mechanism to counteract swift and dramatic market shifts, ensuring registration costs remain aligned and predictable. Step pricing adjusts the Base Registration Fees when the Demand Factor reaches its minimum value for an extended period, updating the BRF to align with the current ARF, and resetting the DF to a neutral value. This allows for base prices to lower in extended droughts of low demand or high token value resulting in lower revenue generated to the protocol balance.","The below chart represents Step Pricing in action:","Step Pricing Action - Declining Demand"]]]},{url:"/learn/concepts/arweave",sections:[["Arweave",null,[]],["The Permanence Pie","the-permanence-pie",["The permanent data storage ecosystem can be thought of as a three-tiered arrangement of protocols, services, and applications – dubbed here as “The Permanence Pie”.","Diagram 1: The Shell of Permanence Pie","The base layer of that pie is the Arweave protocol and network, which is the backbone of the permanent data storage ecosystem. It provides the infrastructure for data to be stored on the network in a decentralized manner and incentivizes nodes to keep the data stored for long periods of time.","The second layer is made up of services that sit on top of the Arweave protocol and network. These services include gateways, data retrieval services, and computation that help to provide a seamless and functional experience for users, creators, and developers.","Finally, the top layer of the pie consists of applications that utilize the data stored on the Arweave network. This includes everything from simple applications that allow users to access and view their data to complex, decentralized applications that use the Arweave network as their backbone.","Each layer of the Permanence Pie is crucial to the overall success and growth of the permanent data storage ecosystem. The Arweave protocol and network provide the foundation for data storage, the services layer helps to facilitate data retrieval and usage, and the application layer brings the benefits of the ecosystem to users and developers alike."]],["What Is Arweave","what-is-arweave",["Arweave is a decentralized Layer 1 data storage protocol optimized for long-term permanent storage through its unique proof of access mechanism and tokenomic endowment model. It can be thought of as a global, permissionless hard drive.","The information stored on Arweave is immutable and globally replicated by miner nodes. Instead of a traditional blockchain ledger which links blocks of transactions together in linear sequence, Arweave arranges blocks in a web known as the blockweave. These miner nodes secure the blockweave by operating the Succinct Proof of Random Access (SPoRA) algorithm. SPoRA requires miners to prove that they have access to recall randomly selected bits of weave data in order to produce and share a block. If successful, miners are rewarded in Arweave’s native AR token. These token rewards are derived from transaction fees as well as the network’s storage endowment. The endowment is a protocol-controlled pool of tokens designed to fund the projected cost of storage for 200+ years.","Diagram 2: Arweave - The Base Storage Layer","Arweave is file type agnostic – any type of file ranging from simple text files to family photos to complex web applications and archival databases can be stored on the network. To upload data, users must pay an amount of AR proportional to the size of the files being uploaded. Arweave is unique when compared with other decentralized storage solutions in that users only pay once to upload their files, then that is it – the files will be stored in perpetuity without any additional upkeep or subscription fees paid by the user.","The Arweave protocol is designed to handle 1,000 base layer transactions per block with new blocks being mined roughly every two minutes. Each transaction may also store an unbounded number of signed, non-AR-transacting data items assembled into a bundle (i.e., a bundled data item). Since its launch in 2018, this scalable architecture has allowed the network's weave size (total data stored on the network) to grow to 140.8 TB with approximately 1.5 billion base layer transactions and bundled data items submitted from over 181k unique wallets. The Arweave protocol endowment has received 60.7k AR to cover the projected storage costs with a cost of storage 0.858 AR/GiB. *","* data as of November 20, 2023"]],["Gateways","gateways",['Gateways act as the front door to the permaweb. They are infrastructure utilities that sit above the base storage layer and allow users to write, access, and query the information stored on Arweave. Gateways are specialized nodes responsible for data ingest (data "in") and data egress (data "out").',"For access / egress, gateways allow for data retrieval, caching, and serving as well as indexing transactions into a database that can be easily queried at scale. With bundling functionality, gateways can act as services allowing users to write and seed new data the Arweave network.",'These "in and out" functions are not performed by the Arweave mining nodes which are optimized for securing the Layer 1 blockweave and replicating information throughout the network through a mechanism known as Wildfire.',"Diagram 3: Gateways - The Ingest and Access Component","By taking on these responsibilities, gateways allow low cost and maintenance free hosting of static and dynamic content for users, creators, and developers. But there are costs associated with operating a gateway and Arweave does not offer any tokenomic incentives to offset these expenses. As the permaweb grows, these costs can become very significant.","Arweave.net, the primary community gateway, has scaled to meet the needs of the entire Arweave ecosystem and stored the entire weave. Over the last 6 months, this gateway indexed and cached approximately 3.4 million base layer transactions and bundled data items per day, served 233 million requests for data and node information per day, and responded to 3.2 million GQL queries per day. *","Gateway use cases, and the types of administrators who operate them, can range from at-home projects hosted by hobbyists to larger decentralized platforms and dApps run by small teams, all the way up to scaled out environments capable of supporting enterprise offerings.","* data as of November 20, 2023"]],["aoComputer","ao-computer",["AO is a global supercomputer built on Arweave. This actor-oriented machine is a single, unified computing environment, hosted on a heterogenous set of nodes in a distributed network. AO is designed to offer an environment in which an arbitrary number of parallel processes can be resident, coordinating through an open message passing layer. This message passing standard connects the machine's independently operating processes together into a 'web' -- in the same way that websites operate on independent servers but are conjoined into a cohesive, unified experience via hyperlinks.","Diagram 4: AO - The Supercomputer and Smart Contract Protocol","With AO, developers can create processes that act as smart contracts with token-like properties which can then be  used to incorporate incentive structures into applications and infrastructure. The AR.IO Network leverages this technology for development of its network protocol and IO token."]],["The Permaweb","the-permaweb",["The permaweb is the third and final layer of the permanence pie. The permaweb stands for the permanent web, a collection of all the webpages, apps, and files stored on top of the Arweave network and enlivened with the functionality of the AR.IO Network. For users and builders, the permaweb offers low-cost, zero maintenance, permanent hosting of their web apps, files, and web pages.","Diagram 5: The Permanence Pie","AR.IO is a global network, protocol, and currency built on top of Arweave that enables the permaweb."]],["References and Further Reading","references-and-further-reading",["The following resources were used as reference material for this section and can provide the interested reader with additional information:","The ArWiki","Arweave GitHub repository","aoComputer"]]]},{url:"/learn/concepts/manifests",sections:[["Manifests",null,[]],["Overview","overview",["ar.io Gateways support friendly-path-name routing for data on Arweave via Manifests. This greatly improves the programmability of data relationships. Consider an illustrative example where data stored on Arweave and accessed like this:","can instead be accessed like this:","NFT collections also benefit from manifest-based routing:","ar.io gateways are capable of resolving manifest paths in a relative manner. An HTML page loading assets from Arweave would be very difficult to develop, maintain, and harden against hosting domains leaving existence if assets had to be linked to by a fully qualified domain name and an Arweave data item ID as the path. For example:","Manifests allow HTML pages to use relative paths to assets with friendly names so that the document is easy to read, maintain, and host across any ar.io domain. For example:","Relative routing eliminates the need for every link to contain the full Arweave transaction ID and fully qualified domain name. This makes the HTML more readable and ensures that links remain valid even if the hosting domain changes. If index.html needed to access js/style.css, the relative link ./js/style.css could be used instead of <txId>/js/style.css. This relative routing is incredibly useful for linking together files in a way that allows functional websites to be hosted entirely on Arweave.","Learn more about relative path routing and structuring files into a permanently hosted website in ArDrive's decentralized app guide"]],["What is a Manifest","what-is-a-manifest",['Manifests, also known as "Path Manifests" or "Arweave Manifests," are JSON objects that connect various Arweave data items and define relational paths for easy navigation. A common use case for manifests is permanently hosting websites on Arweave by linking all necessary files together. An ar.io gateway can then resolve the manifest into a fully functional website.',"Sample Manifest","How it Works","A resolver, typically an ar.io gateway, resolves URLs requesting content based on a manifest transaction ID to the corresponding path key in the paths object. The URL schema for this type of request is https://<gateway url>/<manifest TxId>/<path>.","Example Usage","Assume the manifest above is uploaded to Arweave with the transaction ID UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk. The below table shows https requests to the ar.io gateway arweave.dev requesting various endpoints on the manifest transaction Id, the manifest path where the gateway will find the data to return, and the resulting Arweave txId.","Request Path\nManifest Path\nData served from txID","https://arweave.dev/UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk\nindex\ncG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI","https://arweave.dev/UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk/index.html\nindex.html\ncG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI","https://arweave.dev/UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk/js/style.css\njs/style.css\n3zFsd7bkCAUtXUKBQ4XiPiQvpLVKfZ6kiLNt2XVSfoV","https://arweave.dev/UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk/foobar\nfallback\niXo3LSfVKVtXUKBzfZ4d7bkCAp6kiLNt2XVUFsPiQvQ"]],["Specifications","specifications",["Transaction Tags","Manifest are uploaded to Arweave in the same manner as any other data item. A specific content type tag must be added while uploading so that resolvers like the ar.io gateways can recognize a manifest and properly resolve the paths. Tags must be attached to the manifest at the time of upload. They cannot be added later without uploading a new manifest, and they must be attached to the upload transaction, NOT placed inside the json object.","Failure to provide this tag will result in resolvers not recognizing the manifest, so they will only return the raw json instead of the linked data items.","Content-Type","Transaction Data","Being a json object, there are several attributes that make up the structure of a manifest. The json object must be fully defined and uploaded to Arweave as a data item.","manifest","The manifest attribute serves as an additional validation layer. It must have the value arweave/paths in order for a gateway to resolve the manifest.","version","The version attribute defines the version of manifest schema a manifest is using.","index","or","The index attribute is an object that defines the base, or 'starting' data item. It is similar to the / endpoint on a website. When resolving the manifest with no additional path definition, this is the data item that will be returned.","index accepts either path or id as sub attributes. path represents the key of a defined path in the manifest, while id represents a specific Arweave data item transaction Id.","If both path and id are defined in index, id will override path.","fallback","The fallback attribute is an object that defines an Arweave data item transaction Id for the resolver to fall back to if it fails to correctly resolve a requested path. For example, it can act as a 404 page if a user requests manifest/non-existent-page","fallback accepts id as a sub attribute, representing an Arweave data item transaction Id.","paths","The paths attribute is an object that defines the url paths that a manifest can resolve to. If a user navigates to manifest/index.html the resolver will look for index.html as a key in the paths object and return the corresponding id. (cG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI)"]]]},{url:"/learn/concepts/normalized-addresses",sections:[["Normalized Addresses",null,[]],["Overview","overview",["Different blockchains use different formats for the public keys of wallets, and the native addresses for those wallets. In most cases, when a system in the Arweave ecosystem needs to display the wallet address of a wallet from a different blockchain, for instance in the Owner.address value of an AO process spawned by an ETH wallet, that address will be normalized into the format recognized by Arweave. Specifically, a 43 character base64url representation of the sha256 hash of the public key. This is done to prevent potential errors by systems in the Arweave ecosystem that expect these values to be a certain size and conform to a specific format.","Essentially, normalized addresses are a way to represent public keys and wallet addresses from other blockchains in a way that is familiar to systems in the Arweave ecosystem.","A tool for easily obtaining a normalized addresses from public keys can be found at ar://normalize-my-key"]],["At A Glance","at-a-glance",["Arweave\nETH/POL\nSolana","Native Address\n9ODOd-_ZT9oWoRMVmmD4G5f9Z6MjvYxO3Nen-T5OXvU\n0x084af408C8E492aC52dc0Ec76514A7deF8D5F03f\nCd5yb4mvbuQyyJgAkriFZbWQivh2zM68KGZX8Ksn1L85","base64url Encoded Public Key\n0jkGWDFYI3DHEWaXhZitjTg67T-enQwXs50lTDrMhy2qb619_91drv_50J5PwrOYJiMmYhiEA5ojMvrrAFY-Dm1bJbJfVBU1kIsPho2tFcXnbSOa2_1bovAys0ckJU07wkbmIUpzp3trdxYReB4jayMMOXWw9B8xS0v81zFmK3IbCtL9N6WNTMONOSMATHFQrGqtDhDUqKyIsQZCBPFvfGykRWaLWzbtAUrApprqG9hfExQzppNsw0gsftNSHZ1emC5tC2fuib6FhQw9TE2ge9tUjEZNALcVZvopTtTX0H2gEfnRJ48UNeV3SKggjXcoPVeivmqXuPBGncXWWq1pHR-Xs4zSLA5Mgcw_tQJc4FIER0i7hUlZXoc991ZHyOvAC-GlHWzQwvrlY11oD38pB47NkHN2WVPtUCAtyYQe5TE6Xznd9kPgqqvVUkV0s0suh5vINGoiPEnMjyhYEN7eOmJRIJ_A87IJesbdPRV4ZzBsqPbd02RG3ZuVpc3gI1xKvwH1WS05XI8eWK-BbvB3oxB7WjaQTWcfBWhMEULiwx-SucuyAzPAw3i6Wjtq61TcL9SdWhmOf9_yo-Np052tj7MQ66nmgdOH_MEKYjAdFypxTsRQoSLbv28HEcSjwx8u3pY0q0gKMK_5X2XKJrp2i2GB_fVgbcpH9YsgrYxh1Q8\n2W5VMzNKYwr51QsiYBHUS5h5wxZf_uBgG7C6xiHgBHwwLUty5LHKFFBDlAxTCTAhglcmys2_HQoOj_LnCkA3\nrK8XXxd8JqsZFPXVOwkSWS5Gh1SJzftfCOLpLk4i1FY","Normalized Address\n9ODOd-_ZT9oWoRMVmmD4G5f9Z6MjvYxO3Nen-T5OXvU\n5JtuS4yOFtUX2Rg3UU7AgBaUqh4s8wyyNTZk9UrzI-Q\nK8kpPM1RID8ZM2sjF5mYy0rP4gXSRDbrwPUd9Qths64"]],["Public Keys and Addresses","public-keys-and-addresses",["Crypto wallets consist of two separate components. The public keys, which are public knowledge and can be seen by anyone, and the private keys, which only the owner of a wallet should have access to. Crypto wallet addresses are derived from the public key.","::: tip Encoded Public Keys\nIt is important to note that all crypto wallet public and private keys are binary data. The values provided below for Arweave and Ethereum/Polygon public keys are base64url and hex encoded representations of that binary data respectively.\n:::","Arweave","The public key for an Arweave wallet is the n field of the JWK json file.","0jkGWDFYI3DHEWaXhZitjTg67T-enQwXs50lTDrMhy2qb619_91drv_50J5PwrOYJiMmYhiEA5ojMvrrAFY-Dm1bJbJfVBU1kIsPho2tFcXnbSOa2_1bovAys0ckJU07wkbmIUpzp3trdxYReB4jayMMOXWw9B8xS0v81zFmK3IbCtL9N6WNTMONOSMATHFQrGqtDhDUqKyIsQZCBPFvfGykRWaLWzbtAUrApprqG9hfExQzppNsw0gsftNSHZ1emC5tC2fuib6FhQw9TE2ge9tUjEZNALcVZvopTtTX0H2gEfnRJ48UNeV3SKggjXcoPVeivmqXuPBGncXWWq1pHR-Xs4zSLA5Mgcw_tQJc4FIER0i7hUlZXoc991ZHyOvAC-GlHWzQwvrlY11oD38pB47NkHN2WVPtUCAtyYQe5TE6Xznd9kPgqqvVUkV0s0suh5vINGoiPEnMjyhYEN7eOmJRIJ_A87IJesbdPRV4ZzBsqPbd02RG3ZuVpc3gI1xKvwH1WS05XI8eWK-BbvB3oxB7WjaQTWcfBWhMEULiwx-SucuyAzPAw3i6Wjtq61TcL9SdWhmOf9_yo-Np052tj7MQ66nmgdOH_MEKYjAdFypxTsRQoSLbv28HEcSjwx8u3pY0q0gKMK_5X2XKJrp2i2GB_fVgbcpH9YsgrYxh1Q8","The public wallet address for that wallet is 9ODOd-_ZT9oWoRMVmmD4G5f9Z6MjvYxO3Nen-T5OXvU, this is obtained by decoding the public key from base64url to normalize padding, sha256 hashing the result, and then base64url encoding that.","Ethereum/Polygon","The public key for an EVM wallet (Ethereum, Polygon/Matic) is derived from its private key, using the Elliptic Curve Digital Signature Algorithm, or ECDSA.","0xb5d96e5533334a630af9d50b226011d44b9879c3165ffee0601bb0bac621e0047c302d4b72e4b1ca145043940c53093021825726cacdbf1d0a0e8ff2e70a4037","The public wallet address is 0x084af408C8E492aC52dc0Ec76514A7deF8D5F03f, this is obtained by removing the first byte from the public key, Keccak-256 hashing the remainder, taking the the last 20 bytes (40 hexadecimal characters) and prepending 0x to it.","Solana","A Solana wallet is an array of 64 bytes. The first 32 bytes are the private key, and the last 32 bytes are the public key. Below is the public key portion of a Solana wallet:","[172, 175, 23, 95, 23, 124, 38, 171, 25, 20, 245, 213, 59, 9, 18, 89, 46, 70, 135, 84, 137, 205, 251, 95, 8, 226, 233, 46, 78, 34, 212, 86]","The public wallet address for this wallet is Cd5yb4mvbuQyyJgAkriFZbWQivh2zM68KGZX8Ksn1L85, this is derived by base58 encoding the public key bytes."]],["Normalizing Addresses","normalizing-addresses",["As shown in the above examples, the format of public keys, and the resulting derived wallet addresses, vary widely between blockchains. Arweave manages this by applying the same derivation methods that Arweave uses for its own wallets to the public keys from other chains.","Ethereum/Polygon","The leading 0x and uncompressed flag 04 (if present) is removed from the public key of an EVM wallet, and then the remainder is base64url encoded to obtain the Arweave normalized public key. Continuing with the same public key in the above example, the normalized public key would be:","2W5VMzNKYwr51QsiYBHUS5h5wxZf_uBgG7C6xiHgBHwwLUty5LHKFFBDlAxTCTAhglcmys2_HQoOj_LnCkA3","This value is what is used as the GraphQL tag owner value for data items being uploaded to Arweave using an EVM wallet. The normalized address is then derived from this value by sha256 hashing it, and then base64url encoding the result:","5JtuS4yOFtUX2Rg3UU7AgBaUqh4s8wyyNTZk9UrzI-Q","Solana","The normalized public key for Solana wallets are derived similarly. The 32 byte public key is base64url encoded:","rK8XXxd8JqsZFPXVOwkSWS5Gh1SJzftfCOLpLk4i1FY","Again, this value is used for the GraphQl tag owner when uploading data. It can then be sha256 hashed, and base64url encoded again to derive the normalized address:","K8kpPM1RID8ZM2sjF5mYy0rP4gXSRDbrwPUd9Qths64"]]]},{url:"/learn/concepts/sandboxing",sections:[["Browser Sandboxing",null,[]],["Overview","overview",["Browser sandboxing allows data requests to a gateway node to benefit from the security advantages of using a browser's same-origin policy by redirecting the requests to a pseudo-unique subdomain of the gateway's apex domain. For example, an attempt to access https://arweave.net/gnWKBqFXMJrrksEWrXLQRUQQQeFhv4uVxesHBcT8i6o would redirect to https://qj2yubvbk4yjv24syelk24wqivcbaqpbmg7yxfof5mdqlrh4rova.arweave.net/gnWKBqFXMJrrksEWrXLQRUQQQeFhv4uVxesHBcT8i6o","Two DNS records are required to link a domain to an Arweave transaction on a gateway node. For example, www.mycustomsite.com would need the following records to link it to www.arweave-gateway.net:","A DNS CNAME record pointing to an Arweave gateway: www CNAME arweave-gateway.net,","A DNS TXT record linking the domain with a specific transaction ID: arweavetx TXT kTv4OkVtmc0NAsqIcnHfudKjykJeQ83qXXrxf8hrh0S","When a browser requests www.mycustomsite.com the user's machine will (through the usual DNS processes) resolve this to the IP address for the gateway node arweave-gateway.net. When the gateway receives an HTTP request with a non-default hostname, e.g. www.mycustomsite.com instead of www.arweave-gateway.net, the gateway will query the DNS records for www.mycustomsite.com and the 'arweavetx' TXT record will tell the node which transaction to serve."]],["TLS and its Role in Browser Sandboxing","tls-and-its-role-in-browser-sandboxing",["Transport Layer Security (TLS) is a cryptographic protocol designed to provide communications security over a computer network. In the context of Arweave applications and browser sandboxing, TLS plays a critical role in ensuring secure data transmission and enabling the effective use of browser security features.","When Arweave applications are accessed without TLS, most browsers restrict the use of native cryptographic functions. These functions, which include hashing, signing, and verification, are essential for the secure operation of Arweave permaweb apps. Without TLS, not only are these functions unavailable, but the applications also become susceptible to various security threats, notably man-in-the-middle (MITM) attacks. Although Arweave transactions are signed, making direct MITM attacks challenging, the absence of encryption can expose other vulnerabilities. For instance, attackers could intercept and alter the /price endpoint, potentially causing transaction failures or leading to overcharging.","To address these concerns, gateway operators are responsible for generating and maintaining TLS certificates for their gateways. This can be achieved through various systems, such as ACME for Let's Encrypt. An important step in setting up a gateway is obtaining a wildcard TLS certificate for the gateway's domain. This certificate secures traffic on both the apex domain and its single-level subdomains (e.g., gateway.com and subdomain.gateway.com).","The integration of TLS is crucial for the implementation of browser sandboxing. When a browser requests a transaction from a gateway, the gateway issues a 301 redirect to a subdomain of the gateway, using a Base32 pseudo-unique address derived from the transaction ID. This redirection, secured by TLS, invokes the browser's same-origin policy. As a result, the requested web page is confined within a secure sandbox environment, isolated from other domains. This isolation is vital for maintaining the integrity and security of transactions and interactions within Arweave's permaweb applications."]],["Deriving Sandbox Value","deriving-sandbox-value",["ar.io nodes generate browser sandbox values deterministically. Because of this, it is possible to calculate ahead of time what that value will be for a particular transaction id.","Sandbox values are a Base32 encoding of the transaction ID. ar.io gateways use the following code snippet to accomplish the encoding:","Example:","Example Output:","View the full code for generating browser sandbox values here."]]]},{url:"/learn/concepts/wayfinder",sections:[["Wayfinder Protocol",null,[]],["Overview","overview",["The Wayfinder protocol is a URI scheme designed to translate requests for Arweave content into https:// requests. Essentially, Wayfinder allows for transforming traditional Arweave URLs like https://arweave.net/long-txid into more concise and user-friendly forms such as ar://txid or ar://arns-name. When combined with the AR.IO WayFinder browser extension, the request can be directed to any number of functional AR.IO Gateways to serve the content.",'An early technical breakdown of Wayfinder, formerly "ARCSS", created by Arweave community member DMac, can be found here.']],["Browser Integration","browser-integration",["The Wayfinder Protocol is currently facilitated via the WayFinder App or internal application integration. The intention is to lead popular web browsers like Chrome and Brave towards a direct integration of the Wayfinder Protocol, similar to recent integrations of the ipfs:// protocol. Such integration would remove the need for a client-side extension and boost developers' confidence in embedding Wayfinder Protocol URLs in their websites."]],["Internal Application Integration","internal-application-integration",["Certain websites or apps may want to resolve Arweave Transaction ID's (TxId) internally. In these scenarios, they can process the Wayfinder Protocol internally without depending on browser support or the WayFinder App. A prime example is opensea.io. Opensea, an NFT marketplace, frequently imports NFT metadata from external sources. If metadata employs the Wayfinder Protocol, Opensea internally resolves these, presenting content without redirecting users through an https:// link.","There are two main approaches to resolving Wayfinder Protocol URLs:","Convert Wayfinder into a request directed at a predefined Arweave gateway.","Retrieve a list of active AR.IO Gateways from the GAR by reading the contract state, or other available resources, and then fetch content from a gateway on the list.","Each strategy has its benefits and challenges, necessitating careful evaluation based on specific use cases."]],["Benefits of Wayfinder Over Hardcoded Gateway Links","benefits-of-wayfinder-over-hardcoded-gateway-links",["Using the Wayfinder Protocol offers several advantages over hardcoded links to a specific gateway:","Flexibility: Wayfinder links can be routed through any available AR.IO Gateway, ensuring content remains accessible even if a specific gateway is down or congested.","Decentralization: By not being tied to a single gateway, the Wayfinder Protocol embodies the decentralized spirit of the web, reducing potential censorship points.","Ease of Maintenance: Developers and content creators don't need to modify links if a gateway changes its URL or becomes unavailable. The WayFinder extension handles routing to an active gateway.","Consistency: Users always receive the same content, regardless of the gateway used, ensuring a consistent user experience."]],["Use Cases","use-cases",["Decentralized Web Hosting with Flexible Access","With Wayfinder, not only can websites be hosted on the Arweave network, but their accessibility is also enhanced. By using the Wayfinder Protocol, web developers can ensure that if a specific AR.IO Gateway is down, the content can still be accessed through another gateway, offering a more reliable and resilient user experience.","Digital Archives and Preservation with Enhanced Sharing",'Digitally archiving public domain works, especially in light of events like "banned books week", becomes more efficient with Wayfinder. Historical institutions or enthusiasts can easily share specific Wayfinder links to documents or media. Unlike hardcoded links which might break if a specific gateway goes offline, Wayfinder ensures that the content remains consistently accessible.',"Media Sharing Platforms with Consistent Content Delivery","For platforms hosting user-generated content, the Wayfinder Protocol provides not just decentralized hosting but also a guarantee of content delivery. Even if a content piece becomes viral and one gateway gets congested, Wayfinder ensures that users can still access the content through another gateway, providing a seamless experience.","Decentralized Applications (DApps) with Reliable Front-End Accessibility","DApps, while benefiting from Arweave's permanent hosting, can further ensure their front-end remains consistently accessible to users by using Wayfinder. If a DApp's front-end is accessed frequently, causing strain on one gateway, Wayfinder can help ensure the load is distributed, and the DApp remains online and functional."]],["How it Works","how-it-works",["Transaction ID","To access content tied to an Arweave Transaction ID (TxId), simply append the TxId to ar://:","Inputting this into a WayFinder-equipped browser will route your request through the right AR.IO Gateway, translating it as per your Routing Method settings.","ArNS","Fetching content via an Arweave Name System (ArNS) name is straightforward. Attach the ArNS name to ar://:","The Wayfinder protocol, along with the WayFinder App, discerns between TxIds and ArNS names. Once the suitable https:// request is formulated, the chosen gateway translates the ArNS name based on the ArNS aoComputer contract."]],["Wayfinder App","wayfinder-app",["The AR.IO WayFinder App is a browser extension designed to facilitate the resolving of ar:// urls.","v0.0.10","As of v0.0.10, Wayfinder supports the resolution of TXT records to Arweave content on top level domains. This innovative feature leverages DNS TXT records to associate Arweave transaction IDs with human-readable domain names, facilitating intuitive and memorable access to permaweb content. By simply entering an ar:// URL with a domain name, the Wayfinder App resolves the corresponding Arweave transaction ID through DNS TXT records, redirecting users directly to the content hosted on the Arweave network.","Setup: Owners of a domain can set a TXT record for that domain following the format ARTX <Arweave TXID>.","Wayfinder Redirection: With a TXT record set properly, whenever a user (who has Wayfinder installed) enters an ar:// URL containing a domain name (e.g., ar://example.com), the Wayfinder App performs a DNS lookup for that TXT record in order to redirect to the Arweave content. The lookup is completed through a secure DNS-over-HTTPS query to ensure privacy and integrity.","Dynamic Content Resolution: After retrieving the TXT record, the Wayfinder App extracts that Arweave transaction ID and dynamically redirects the user to the content on the permaweb. This process is transparent to the user, providing a seamless experience as if accessing a traditional website.","Key Features","Gasless: TXT records can be set without any onchain transactions that would require gas fees.","Easy Integration: Domain owners can easily link their permaweb content to their domains, making it accessible through a simple ar:// URL.","Dyncamic Content Access: Content links can be updated in real-time through DNS TXT records, without requiring any changes to the ar:// URL itself.","Enhanced User Experience: Offers users a familiar and easy-to-remember way to access permaweb content, leveraging standard web domain names.","Security and Privacy: Secure DNS-over-HTTPS queries for DNS lookups protect user privacy and enhances security.","Use Cases","Branded Content Access: Companies and individuals can brand their permaweb content, making it accessible through their domain, enhancing brand visibility and user trust.","Dynamic Content Updates: Domain owners can easily update what Permaweb content their AR:// URL resolves to, which is ideal for frequently updated resources like documents, blogs, and application interfaces.","Educational and Informational Resources: Educational institutions and information providers can make their resources permanently available on the permaweb, accessible through simple, memorable URLs.","This feature marks a significant advancement in making decentralized content more accessible and user-friendly, bridging the gap between traditional internet usability and the permaweb’s permanence and censorship-resistant nature."]]]},{url:"/learn/guides/ants",sections:[["Arweave Name System (ArNS)",null,[]],["Overview","overview",["The Arweave Name System (ArNS) is a decentralized, censorship-resistant naming system on Arweave. It allows data on Arweave to be assigned to friendly domain names. Learn more about ArNS here.","This guide will walk you through the process of purchasing and managing an ArNS name using arns.app, the official ArNS portal from AR.IO."]]]},{url:"/learn/guides/ants-on-bazar",sections:[["Trading ANTs on Bazar",null,[]],["Overview","overview",["Arweave Name Tokens are Atomic Asset Spec compliant AO tokens that manage records and permission for ArNS names. Because the ANT spec is compliant with the Atomic Asset Spec, they are tradable on Bazar, which is a decentralized market place for Atomic Assets on AO. There are a few simple steps that are required in order to make an ANT available on Bazar to be traded."]],["Bazar Profile","bazar-profile",["Bazar relies on profiles for displaying user information and tradable assets. Profiles are AO processes that contain user specified information like a name, a nickname, and images associated with the profile. Profiles also track assets held by the profile in order to provide their information to bazar.","Create a Profile",'If you do not already have a profile associated with your wallet, you can easily create one on using the "Create your profile" button on bazar after connecting your wallet:',"You will be prompted to add, at a minimum, a name and handle (nickname) to associate with the profile. These values can be changed later.",'Click "Save" at the bottom to finish creation of your profile.','Once your profile is created, you can get its ao process Id at any time by clicking on the user icon in Bazar, and then the "Copy profile address" button from the menu.']],["Transfer ANT to the Profile","transfer-ant-to-the-profile",["Bazar profiles only track assets that are held in the profile process, not in a user wallet. In order for an ANT to be displayed and transferred on Bazar, it must first be transferred into the Bazar profile. This can be done easily using arns.app in your manage page for a given name.","Once an ANT is transferred into the profile process, it will automatically be detected and displayed by Bazar. It can be transferred or sold just like any other atomic asset on the marketplace, with no additional steps required."]],["Restore Controllers","restore-controllers",["::: tip Optional\nThis is an optional step that will enable updating an ANT's Target Id without transferring it back into your wallet. This step may be safely skipped without affecting the ANT's functionality or tradability on Bazar.\n:::","Transferring an ANT to a new wallet or AO process resets all authorized controllers, or non-owner entities that are allowed to update some settings on the ArNS name. It does not reset the Target Id that the ArNS name is pointing to. If you want to be able to update the Target ID and undernames from your wallet using arns.app, you will need to set your wallet address as a controller for the ANT while it is in your profile. The easiest way to do this is using aos.","If you have not used aos before, you can find installation instructions here","Using aos, you can log directly into your profile process with the command:","Be sure to replace <profile-address> with the process Id for your profile process, and /path/to/your/keyfile with the path to the keyfile for the wallet you created the profile with.","Once you are logged in with aos, you can send a message to the ANT in your profile to set your wallet as a controller:","Replace <Ant-Process-ID> with the process Id of the ANT you transferred into your profile, and <Wallet-Address> with your wallet address."]]]},{url:"/build/ar-io-sdk/io/get-gateway",sections:[["getGateway",null,["getGateway is a method on the IO class that retrieves a gateway's information by its staking wallet address.","getGateway does not require authentication."]],["Parameters","parameters",[]],["Examples","examples",[]],["Output","output",[]],["Types","types",["AoGateway","AoGatewaySettings","AoGatewayStats","AoGatewayDelegate","AoVaultData","AoGatewayWeights"]]]},{url:"/build/ar-io-sdk/io/get-gateways",sections:[["getGateways",null,["getGateways is a method on the IO class that retrieves registered gateways from the ar.io Network. Results are paginated, and can be sorted by any attribute of the gateway object.","getGateways does not require authentication."]],["Parameters","parameters",[]],["Example","example",[]],["Output","output",[]],["Pagination","pagination",["Do we need a section for pagination? or should the above be sufficient?"]],["Types","types",["//TODO: add all relevant types here. e.g. AoGateway, AoGatewayStats, etc."]]]},{url:"/build/gateways/observer/troubleshooting",sections:[["Troubleshooting Observer",null,[]],["Overview","overview",["ar.io observer epoch distribution reports include a list of failed observers for the epoch, along with an accounting of the errors which caused the observer to fail. When possible, the error messages will give you a starting point to being the troubleshooting process. Below is a list of possible error messages, along with more detailed information on how to address the issues."]],["Observer not running and/or unable to connect","observer-not-running-and-or-unable-to-connect",["","Your observer was not able to connect with the contract at all. The most likely causes for this are internet connection problems, or your observer not running.","Verify your observer is running","sudo docker ps","Your output should look something like this:",'If the line for observer does not say "up", then your observer is not running. You should restart your gateway, and then watch your observer logs to get a better idea of why your observer stopped:',"sudo docker-compose down","sudo docker-compose up -d","sudo docker-compose logs -f observer"]],["Observer wallet has no AR","observer-wallet-has-no-ar",["","Your Observer Wallet does not have any AR tokens.","Your observer wallet needs to be able to submit reports to the Arweave blockchain. To do this, it needs to have a small amount of AR tokens in order to pay for the submission. ar.io recommends depositing 1 AR token into your observer wallet to ensure that you remain funded throughout the entire testnet."]],["Observer wallet ... does not match the 'observerWallet' set on the gateway ...","observer-wallet-does-not-match-the-observer-wallet-set-on-the-gateway",["","The observer wallet set locally on your gateway does not match the observer wallet for your gateway in the ar.io network.","Check to make sure that you have OBSERVER_WALLET set in your .env file, and that the keyfile for your observer wallet is properly provided in the wallets directory in your gateway.","You will need to restart your gateway if you make any changes to the .env file or your observer wallet keyfile.","Then check to make sure that the value for observerWallet on your gateway in the testnet contract matches that.","This video shows exactly what should be done to correct it if it does not."]],["Uncertain - confirm your OBSERVER_WALLET is set in the .env file and corresponding wallet is located in wallets/< address >.json...","uncertain-confirm-your-observer-wallet-is-set-in-the-env-file-and-corresponding-wallet-is-located-in-wallets-address-json",["","The cause for the error could not be reliably determined.",'"Uncertain" is the default value returned when evaluating a failed observer. It means that none of the above error messages perfectly matched the problems with your gateway.',"You should first ensure that your observer wallet is set correctly locally, and then check your observer logs for any additional error messages.","sudo docker-compose logs -f --tail=50 observer"]]]},{url:"/learn/guides/ants/managing",sections:[["Managing ArNS Assets",null,[]],["Overview","overview",["From the Manage Assets page of arns.app, you can view details about your registered names, assign new Target IDs for your names to resolve to, or register new undernames for your ArNS names.",'Access the Manage Assets page by connecting your Arweave wallet, and clicking on the account button displaying your wallet address (the connect button if you are not connected), then selecting "Manage Assets" from the menu.',"Your browser does not support the video tag.","The Manage Assets page features two important tabs. Names and ANTS."]],["Names","names",['The Names tab displays all of the ArNS names registered to the currently connected wallet. Each name has its own "details" button which allows you to view details about the name, extend the lease period, or increase the available undernames for that name.']],["ANTs","ants",['The ANTs tab displays each ANT owned by the connected wallet (except for advanced use cases, each ArNS name will have its own ANT). You can view and create new undernames using the "Undernames" button, or access advanced management options by clicking on the "manage" icon (shaped like a gear).',"The Advanced manage page allows you to transfer ownership, add or remove controllers (other wallets who are able to manage an ANT) or set/modify a Target ID for a name to resolve to."]]]},{url:"/learn/guides/ants/registering",sections:[["Registering an ArNS name",null,[]],["Overview","overview",["There are two options when registering an ArNS name. You can purchase the name outright, or lease it for a period of 1 to 5 years. Registrations are further broken down into instant buys, and dutch auctions. Auctions are required for purchases of certain names in a specified character length range. Find more information about when an auction is required, as well as the rules an ArNS name must follow to be valid here."]],["Connect Your Wallet","connect-your-wallet",['In order to purchase ArNS names, you will need to have a connected Arweave wallet in order to sign and pay for the transaction. Connect your wallet by clicking the "Connect" button in the top right, and following the prompts.',"Your browser does not support the video tag."]],["Checking Availability","checking-availability",["The home page of arns.app features a search box for checking if a specific ArNS name is available for registration. Indicators below the box can help to make sure you are complying with the technical requirements for name validity as you type.","Simply type out the name you would like to register and click on the search icon next to the text box. A check will be performed to let you know if your chosen name is available or already in use.","NOTE: 1 to 4 character names are not available during the testnet.","or",'If a name is unavailable, information about the name\'s registration period and current owner will be displayed. If it is available, a "Register" button will appear, allowing you to move to the next step in registration.']],["Configure Your Purchase","configure-your-purchase",['After clicking "Register" on a valid and available name, you will be prompted to connect a wallet using ArConnect if you have not already done so. Support for other wallets will be added in the future.',"Once you are connected, you will be shown a page to configure your purchase. You will be able to select if you want to lease or buy the name, and the length of the lease.","You can also use this page to assign the name to an existing Arweave Name Token (ANT), or set an Arweave Transaction ID (Target ID) for the name to resolve to. You will be able to set or change the Target ID after your purchase from the asset management page.","Towards the bottom of the page, you can also see the cost of your currently configured purchase in IO tokens, and the AR required to pay for gas for the transaction."]],["Confirm Your Purchase","confirm-your-purchase",['The final page before submitting your purchase shows a summary of your purchase. If everything looks correct, click on the "confirm" button to finalize the transaction. Remain on the page while the transaction processes.']]]},{url:"/build/ar-io-sdk/io/general/get-balance",sections:[["getBalance",null,["getBalance is a method on the IO class that retrieves the balance of the specified wallet address.","getBalance does not require authentication."]],["Parameters","parameters",[]],["Examples","examples",[]],["Output","output",[]]]},{url:"/build/ar-io-sdk/io/general/get-balances",sections:[]},{url:"/build/ar-io-sdk/io/general/get-info",sections:[["getInfo",null,["getInfo is a method on the IO class that retrieves information about the IO process.","getInfo does not require authentication."]],["Parameters","parameters",["getInfo does not accept Parameters"]],["Example","example",[]],["Output","output",[]]]},{url:"/build/ar-io-sdk/io/general/get-token-supply",sections:[["getTokenSupply",null,["getTokenSupply is a method on the IO class that retrieves the total supply of tokens, returned in mIO. The total supply includes the following:","total - the total supply of all tokens","circulating - the total supply minus locked, withdrawn, delegated, and staked","locked - tokens that are locked in the protocol (a.k.a. vaulted)","withdrawn - tokens that have been withdrawn from the protocol by operators and delegators","delegated - tokens that have been delegated to gateways","protocolBalance - tokens that are held in the protocol's treasury. This is included in the circulating supply.","getTokenSupply does not require authentication."]],["Parameters","parameters",["getTokenSupply does not accept Parameters"]],["Examples","examples",[]],["Output","output",[]],["Types","types",["AOTokenSupplyData"]]]},{url:"/build/ar-io-sdk/io/general/init",sections:[["init",null,["init is a factory function that creates a read-only or writeable client. By providing a signer additional write APIs that require signing, like joinNetwork and delegateStake are available. By default, a read-only client is returned and no write APIs are available."]],["Parameters","parameters",[]],["Examples","examples",[]]]},{url:"/build/ar-io-sdk/io/general/transfer",sections:[]},{url:"/build/gateways/networking/certbot/cloudflare",sections:[["Setup Certbot with Auto Renewal for Cloudflare",null,["Navigate to Cloudflare -> My Profile -> API Tokens -> Create Token\nYou only need to select the following permissions","On your server, install certbot and DNS plugin for Cloudflare","Install DNS plugin for Cloudflare","Create ini file with api key and secret","Add api key and secret created in step 1","Save the file and update permissions","Generate certificate using certbot with DNS plugin for Cloudflare","Results:","Validate certificate and dns update with dry run (this will not create a new certificate or update dns)","Results:","Reload nginx to apply new certificate (optional)","Validate certbot timer","Results:"]]]},{url:"/build/gateways/networking/certbot/namecheap",sections:[["Setup Certbot with Auto Renewal for NameCheap",null,["Note: Namecheap has specific requirements to create an API key. As of ~October 2024 they are:","At least 20 domains under your account.","A minimum of $50 in your account balance.","At least $50 spent within the last 2 years.","If you do not meet these requirements, you can request a waiver by contacting Namecheap support.","Steps:","Navigate to Namecheap -> Profile > Tools > Manage API Access Keys","On your server, install certbot and DNS plugin for Namecheap","Install pip","Install DNS plugin for Namecheap","Create ini file with api key and secret","Add api key and secret created in step 1","Save the file and update permissions","Generate certificate using certbot with DNS plugin for Namecheap","Results:","Validate certificate and dns update with dry run (this will not create a new certificate or update dns)","Results:","Reload nginx to apply new certificate (optional)","Validate certbot timer","Results:"]]]}])for(let[a,n,o]of t)Z.add({url:e+(n?"#"+n:""),title:a,content:[a,...o].join("\n"),pageTitle:n?t[0][0]:void 0});function $(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=Z.search(e,{...t,enrich:!0});return 0===a.length?[]:a[0].result.map(e=>({url:e.id,title:e.doc.title,pageTitle:e.doc.pageTitle}))}}}]);