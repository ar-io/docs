(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var a,r,s=n[0],l=n[1],m=n[2],c=0,u=[];c<s.length;c++)r=s[c],Object.prototype.hasOwnProperty.call(i,r)&&i[r]&&u.push(i[r][0]),i[r]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(d&&d(n);u.length;)u.shift()();return o.push.apply(o,m||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],a=!0,s=1;s<t.length;s++){var l=t[s];0!==i[l]&&(a=!1)}a&&(o.splice(n--,1),e=r(r.s=t[0]))}return e}var a={},i={9:0},o=[];function r(n){if(a[n])return a[n].exports;var t=a[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.e=function(e){var n=[],t=i[e];if(0!==t)if(t)n.push(t[2]);else{var a=new Promise((function(n,a){t=i[e]=[n,a]}));n.push(t[2]=a);var o,s=document.createElement("script");s.charset="utf-8",s.timeout=120,r.nc&&s.setAttribute("nonce",r.nc),s.src=function(e){return r.p+"assets/js/"+({10:"vendors~docsearch"}[e]||e)+"."+{1:"6fa66b44",2:"0ed32b4f",3:"e83adef7",4:"21b04763",5:"a9c6fdf6",6:"86786809",7:"08e88e95",8:"256b5d42",10:"e4af814e",11:"969286a2",12:"2f057b22",13:"bff0c801",14:"923997eb",15:"dc7622b5",16:"8f1525a3",17:"67c94c39",18:"ffe10bf3",19:"9f081cd7",20:"43690b7e",21:"fbab449c",22:"dd9289ba",23:"3a91e623",24:"682fbefe",25:"ef5e4a7b",26:"2b8d6e98",27:"1076cfac",28:"5034219a",29:"c9ff30b0",30:"09af88a5",31:"988e4933",32:"b8d3b5ec",33:"739a1ec4",34:"2a17dc91",35:"defa6974",36:"2461882c",37:"622815ce",38:"9f6548f7",39:"32f30f46",40:"7b598302",41:"7a201199",42:"2b83ec34",43:"c63e39d8",44:"c9d98e9b",45:"5b4e1449",46:"84c14191",47:"fed1aa0f",48:"262ad0d3",49:"0981852e",50:"2ae76273",51:"0cf96298",52:"35727b41",53:"8eecb972",54:"d1e8b506",55:"6b451481",56:"5f27e447",57:"dbb9b60a",58:"84b27e30",59:"94dd0dda",60:"f7bb1f22",61:"3220b4d1",62:"d8b72c09",63:"7ea1d011",64:"0213e6ac",65:"eb281e09",66:"03aa5eca",67:"08bbdbdd"}[e]+".js"}(e);var l=new Error;o=function(n){s.onerror=s.onload=null,clearTimeout(m);var t=i[e];if(0!==t){if(t){var a=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;l.message="Loading chunk "+e+" failed.\n("+a+": "+o+")",l.name="ChunkLoadError",l.type=a,l.request=o,t[1](l)}i[e]=void 0}};var m=setTimeout((function(){o({type:"timeout",target:s})}),12e4);s.onerror=s.onload=o,document.head.appendChild(s)}return Promise.all(n)},r.m=e,r.c=a,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)r.d(t,a,function(n){return e[n]}.bind(null,a));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="/docs/",r.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=n,s=s.slice();for(var m=0;m<s.length;m++)n(s[m]);var d=l;o.push([103,0]),t()}([function(e,n,t){"use strict";var a=function(e){return e&&e.Math===Math&&e};e.exports=a("object"==typeof globalThis&&globalThis)||a("object"==typeof window&&window)||a("object"==typeof self&&self)||a("object"==typeof global&&global)||a("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(e,n,t){"use strict";var a="object"==typeof document&&document.all;e.exports=void 0===a&&void 0!==a?function(e){return"function"==typeof e||e===a}:function(e){return"function"==typeof e}},function(e,n,t){"use strict";var a=t(25),i=Function.prototype,o=i.call,r=a&&i.bind.bind(o,o);e.exports=a?r:function(e){return function(){return o.apply(e,arguments)}}},function(e,n,t){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n){var t=Array.isArray;e.exports=t},function(e,n,t){"use strict";var a=t(3);e.exports=!a((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,n,t){var a=t(65),i="object"==typeof self&&self&&self.Object===Object&&self,o=a||i||Function("return this")();e.exports=o},function(e,n,t){"use strict";var a=t(1);e.exports=function(e){return"object"==typeof e?null!==e:a(e)}},function(e,n,t){"use strict";var a=t(2),i=t(30),o=a({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,n){return o(i(e),n)}},function(e,n,t){var a=t(162),i=t(165);e.exports=function(e,n){var t=i(e,n);return a(t)?t:void 0}},function(e,n,t){"use strict";function a(e,n,t,a,i,o,r,s){var l,m="function"==typeof e?e.options:e;if(n&&(m.render=n,m.staticRenderFns=t,m._compiled=!0),a&&(m.functional=!0),o&&(m._scopeId="data-v-"+o),r?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},m._ssrRegister=l):i&&(l=s?function(){i.call(this,(m.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(m.functional){m._injectStyles=l;var d=m.render;m.render=function(e,n){return l.call(n),d(e,n)}}else{var c=m.beforeCreate;m.beforeCreate=c?[].concat(c,l):[l]}return{exports:e,options:m}}t.d(n,"a",(function(){return a}))},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,t){var a=t(14),i=t(147),o=t(148),r=a?a.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":r&&r in Object(e)?i(e):o(e)}},function(e,n,t){"use strict";var a=t(5),i=t(15),o=t(33);e.exports=a?function(e,n,t){return i.f(e,n,o(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n,t){var a=t(6).Symbol;e.exports=a},function(e,n,t){"use strict";var a=t(5),i=t(60),o=t(97),r=t(23),s=t(51),l=TypeError,m=Object.defineProperty,d=Object.getOwnPropertyDescriptor;n.f=a?o?function(e,n,t){if(r(e),n=s(n),r(t),"function"==typeof e&&"prototype"===n&&"value"in t&&"writable"in t&&!t.writable){var a=d(e,n);a&&a.writable&&(e[n]=t.value,t={configurable:"configurable"in t?t.configurable:a.configurable,enumerable:"enumerable"in t?t.enumerable:a.enumerable,writable:!1})}return m(e,n,t)}:m:function(e,n,t){if(r(e),n=s(n),r(t),i)try{return m(e,n,t)}catch(e){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){"use strict";var a=t(2),i=a({}.toString),o=a("".slice);e.exports=function(e){return o(i(e),8,-1)}},function(e,n,t){var a=t(152),i=t(153),o=t(154),r=t(155),s=t(156);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var a=e[n];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=i,l.prototype.get=o,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,n,t){var a=t(67);e.exports=function(e,n){for(var t=e.length;t--;)if(a(e[t][0],n))return t;return-1}},function(e,n,t){var a=t(9)(Object,"create");e.exports=a},function(e,n,t){var a=t(174);e.exports=function(e,n){var t=e.__data__;return a(n)?t["string"==typeof n?"string":"hash"]:t.map}},function(e,n,t){var a=t(43);e.exports=function(e){if("string"==typeof e||a(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n,t){var a,i;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(i="function"==typeof(a=function(){var e,n,t={version:"0.2.0"},a=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function i(e,n,t){return e<n?n:e>t?t:e}function o(e){return 100*(-1+e)}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(a[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=i(e,a.minimum,1),t.status=1===e?null:e;var l=t.render(!n),m=l.querySelector(a.barSelector),d=a.speed,c=a.easing;return l.offsetWidth,r((function(n){""===a.positionUsing&&(a.positionUsing=t.getPositioningCSS()),s(m,function(e,n,t){var i;return(i="translate3d"===a.positionUsing?{transform:"translate3d("+o(e)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+o(e)+"%,0)"}:{"margin-left":o(e)+"%"}).transition="all "+n+"ms "+t,i}(e,d,c)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),d)}),d)):setTimeout(n,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),a.trickleSpeed)};return a.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*i(Math.random()*n,.1,.95)),n=i(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*a.trickleRate)},e=0,n=0,t.promise=function(a){return a&&"resolved"!==a.state()?(0===n&&t.start(),e++,n++,a.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");m(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=a.template;var i,r=n.querySelector(a.barSelector),l=e?"-100":o(t.status||0),d=document.querySelector(a.parent);return s(r,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),a.showSpinner||(i=n.querySelector(a.spinnerSelector))&&u(i),d!=document.body&&m(d,"nprogress-custom-parent"),d.appendChild(n),n},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(a.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&u(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var r=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),s=function(){var e=["Webkit","O","Moz","ms"],n={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[t]||(n[t]=function(n){var t=document.body.style;if(n in t)return n;for(var a,i=e.length,o=n.charAt(0).toUpperCase()+n.slice(1);i--;)if((a=e[i]+o)in t)return a;return n}(t))}function a(e,n,a){n=t(n),e.style[n]=a}return function(e,n){var t,i,o=arguments;if(2==o.length)for(t in n)void 0!==(i=n[t])&&n.hasOwnProperty(t)&&a(e,t,i);else a(e,o[1],o[2])}}();function l(e,n){return("string"==typeof e?e:c(e)).indexOf(" "+n+" ")>=0}function m(e,n){var t=c(e),a=t+n;l(t,n)||(e.className=a.substring(1))}function d(e,n){var t,a=c(e);l(e,n)&&(t=a.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function c(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function u(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t})?a.call(n,t,n,e):a)||(e.exports=i)},function(e,n,t){"use strict";var a=t(7),i=String,o=TypeError;e.exports=function(e){if(a(e))return e;throw new o(i(e)+" is not an object")}},function(e,n,t){"use strict";var a=t(0),i=t(48).f,o=t(13),r=t(92),s=t(35),l=t(61),m=t(122);e.exports=function(e,n){var t,d,c,u,h,y=e.target,w=e.global,z=e.stat;if(t=w?a:z?a[y]||s(y,{}):(a[y]||{}).prototype)for(d in n){if(u=n[d],c=e.dontCallGetSet?(h=i(t,d))&&h.value:t[d],!m(w?d:y+(z?".":"#")+d,e.forced)&&void 0!==c){if(typeof u==typeof c)continue;l(u,c)}(e.sham||c&&c.sham)&&o(u,"sham",!0),r(t,d,u,e)}}},function(e,n,t){"use strict";var a=t(3);e.exports=!a((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,n,t){"use strict";var a=t(45),i=t(49);e.exports=function(e){return a(i(e))}},function(e,n,t){"use strict";var a=t(0),i=t(1),o=function(e){return i(e)?e:void 0};e.exports=function(e,n){return arguments.length<2?o(a[e]):a[e]&&a[e][n]}},function(e,n,t){"use strict";var a=t(1),i=t(109),o=TypeError;e.exports=function(e){if(a(e))return e;throw new o(i(e)+" is not a function")}},function(e,n,t){"use strict";var a=t(0),i=t(57),o=t(8),r=t(59),s=t(55),l=t(54),m=a.Symbol,d=i("wks"),c=l?m.for||m:m&&m.withoutSetter||r;e.exports=function(e){return o(d,e)||(d[e]=s&&o(m,e)?m[e]:c("Symbol."+e)),d[e]}},function(e,n,t){"use strict";var a=t(49),i=Object;e.exports=function(e){return i(a(e))}},function(e,n,t){"use strict";var a=t(120);e.exports=function(e){return a(e.length)}},function(e,n,t){"use strict";var a=t(25),i=Function.prototype.call;e.exports=a?i.bind(i):function(){return i.apply(i,arguments)}},function(e,n,t){"use strict";e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,t){"use strict";var a=t(0),i=t(35),o=a["__core-js_shared__"]||i("__core-js_shared__",{});e.exports=o},function(e,n,t){"use strict";var a=t(0),i=Object.defineProperty;e.exports=function(e,n){try{i(a,e,{value:n,configurable:!0,writable:!0})}catch(t){a[e]=n}return n}},function(e,n,t){var a=t(146),i=t(11),o=Object.prototype,r=o.hasOwnProperty,s=o.propertyIsEnumerable,l=a(function(){return arguments}())?a:function(e){return i(e)&&r.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,n,t){var a=t(9)(t(6),"Map");e.exports=a},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,t){var a=t(166),i=t(173),o=t(175),r=t(176),s=t(177);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var a=e[n];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=i,l.prototype.get=o,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,t){var a=t(4),i=t(43),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,r=/^\w*$/;e.exports=function(e,n){if(a(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!i(e))||(r.test(e)||!o.test(e)||null!=n&&e in Object(n))}},function(e,n,t){var a=t(12),i=t(11);e.exports=function(e){return"symbol"==typeof e||i(e)&&"[object Symbol]"==a(e)}},function(e,n){e.exports=function(e){return e}},function(e,n,t){"use strict";var a=t(2),i=t(3),o=t(16),r=Object,s=a("".split);e.exports=i((function(){return!r("z").propertyIsEnumerable(0)}))?function(e){return"String"===o(e)?s(e,""):r(e)}:r},function(e,n,t){"use strict";e.exports={}},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n,t){"use strict";var a=t(5),i=t(32),o=t(105),r=t(33),s=t(26),l=t(51),m=t(8),d=t(60),c=Object.getOwnPropertyDescriptor;n.f=a?c:function(e,n){if(e=s(e),n=l(n),d)try{return c(e,n)}catch(e){}if(m(e,n))return r(!i(o.f,e,n),e[n])}},function(e,n,t){"use strict";var a=t(50),i=TypeError;e.exports=function(e){if(a(e))throw new i("Can't call method on "+e);return e}},function(e,n,t){"use strict";e.exports=function(e){return null==e}},function(e,n,t){"use strict";var a=t(106),i=t(52);e.exports=function(e){var n=a(e,"string");return i(n)?n:n+""}},function(e,n,t){"use strict";var a=t(27),i=t(1),o=t(53),r=t(54),s=Object;e.exports=r?function(e){return"symbol"==typeof e}:function(e){var n=a("Symbol");return i(n)&&o(n.prototype,s(e))}},function(e,n,t){"use strict";var a=t(2);e.exports=a({}.isPrototypeOf)},function(e,n,t){"use strict";var a=t(55);e.exports=a&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,n,t){"use strict";var a=t(56),i=t(3),o=t(0).String;e.exports=!!Object.getOwnPropertySymbols&&!i((function(){var e=Symbol("symbol detection");return!o(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&a&&a<41}))},function(e,n,t){"use strict";var a,i,o=t(0),r=t(107),s=o.process,l=o.Deno,m=s&&s.versions||l&&l.version,d=m&&m.v8;d&&(i=(a=d.split("."))[0]>0&&a[0]<4?1:+(a[0]+a[1])),!i&&r&&(!(a=r.match(/Edge\/(\d+)/))||a[1]>=74)&&(a=r.match(/Chrome\/(\d+)/))&&(i=+a[1]),e.exports=i},function(e,n,t){"use strict";var a=t(58),i=t(34);(e.exports=function(e,n){return i[e]||(i[e]=void 0!==n?n:{})})("versions",[]).push({version:"3.35.0",mode:a?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.35.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,n,t){"use strict";e.exports=!1},function(e,n,t){"use strict";var a=t(2),i=0,o=Math.random(),r=a(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+r(++i+o,36)}},function(e,n,t){"use strict";var a=t(5),i=t(3),o=t(96);e.exports=!a&&!i((function(){return 7!==Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(e,n,t){"use strict";var a=t(8),i=t(115),o=t(48),r=t(15);e.exports=function(e,n,t){for(var s=i(n),l=r.f,m=o.f,d=0;d<s.length;d++){var c=s[d];a(e,c)||t&&a(t,c)||l(e,c,m(n,c))}}},function(e,n,t){"use strict";var a=t(119);e.exports=function(e){var n=+e;return n!=n||0===n?0:a(n)}},function(e,n,t){"use strict";var a=t(132),i=t(23),o=t(133);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,t={};try{(e=a(Object.prototype,"__proto__","set"))(t,[]),n=t instanceof Array}catch(e){}return function(t,a){return i(t),o(a),n?e(t,a):t.__proto__=a,t}}():void 0)},function(e,n){e.exports=function(e,n){for(var t=-1,a=n.length,i=e.length;++t<a;)e[i+t]=n[t];return e}},function(e,n){var t="object"==typeof global&&global&&global.Object===Object&&global;e.exports=t},function(e,n,t){var a=t(17),i=t(157),o=t(158),r=t(159),s=t(160),l=t(161);function m(e){var n=this.__data__=new a(e);this.size=n.size}m.prototype.clear=i,m.prototype.delete=o,m.prototype.get=r,m.prototype.has=s,m.prototype.set=l,e.exports=m},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,t){var a=t(12),i=t(38);e.exports=function(e){if(!i(e))return!1;var n=a(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,t){var a=t(178),i=t(11);e.exports=function e(n,t,o,r,s){return n===t||(null==n||null==t||!i(n)&&!i(t)?n!=n&&t!=t:a(n,t,o,r,e,s))}},function(e,n,t){var a=t(72),i=t(181),o=t(73);e.exports=function(e,n,t,r,s,l){var m=1&t,d=e.length,c=n.length;if(d!=c&&!(m&&c>d))return!1;var u=l.get(e),h=l.get(n);if(u&&h)return u==n&&h==e;var y=-1,w=!0,z=2&t?new a:void 0;for(l.set(e,n),l.set(n,e);++y<d;){var j=e[y],p=n[y];if(r)var g=m?r(p,j,y,n,e,l):r(j,p,y,e,n,l);if(void 0!==g){if(g)continue;w=!1;break}if(z){if(!i(n,(function(e,n){if(!o(z,n)&&(j===e||s(j,e,t,r,l)))return z.push(n)}))){w=!1;break}}else if(j!==p&&!s(j,p,t,r,l)){w=!1;break}}return l.delete(e),l.delete(n),w}},function(e,n,t){var a=t(39),i=t(179),o=t(180);function r(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new a;++n<t;)this.add(e[n])}r.prototype.add=r.prototype.push=i,r.prototype.has=o,e.exports=r},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,t){var a=t(191),i=t(197),o=t(78);e.exports=function(e){return o(e)?a(e):i(e)}},function(e,n,t){(function(e){var a=t(6),i=t(193),o=n&&!n.nodeType&&n,r=o&&"object"==typeof e&&e&&!e.nodeType&&e,s=r&&r.exports===o?a.Buffer:void 0,l=(s?s.isBuffer:void 0)||i;e.exports=l}).call(this,t(47)(e))},function(e,n){var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var a=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==a||"symbol"!=a&&t.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,t){var a=t(194),i=t(195),o=t(196),r=o&&o.isTypedArray,s=r?i(r):a;e.exports=s},function(e,n,t){var a=t(68),i=t(41);e.exports=function(e){return null!=e&&i(e.length)&&!a(e)}},function(e,n,t){var a=t(9)(t(6),"Set");e.exports=a},function(e,n,t){var a=t(38);e.exports=function(e){return e==e&&!a(e)}},function(e,n){e.exports=function(e,n){return function(t){return null!=t&&(t[e]===n&&(void 0!==n||e in Object(t)))}}},function(e,n,t){var a=t(83),i=t(21);e.exports=function(e,n){for(var t=0,o=(n=a(n,e)).length;null!=e&&t<o;)e=e[i(n[t++])];return t&&t==o?e:void 0}},function(e,n,t){var a=t(4),i=t(42),o=t(207),r=t(210);e.exports=function(e,n){return a(e)?e:i(e,n)?[e]:o(r(e))}},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){var a=t(144),i=t(149),o=t(219),r=t(227),s=t(236),l=t(91),m=o((function(e){var n=l(e);return s(n)&&(n=void 0),r(a(e,1,s,!0),i(n,2))}));e.exports=m},function(e,n,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var a=/["'&<>]/;e.exports=function(e){var n,t=""+e,i=a.exec(t);if(!i)return t;var o="",r=0,s=0;for(r=i.index;r<t.length;r++){switch(t.charCodeAt(r)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}s!==r&&(o+=t.substring(s,r)),s=r+1,o+=n}return s!==r?o+t.substring(s,r):o}},function(e,n){var t=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,o=/^0o[0-7]+$/i,r=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,m=s||l||Function("return this")(),d=Object.prototype.toString,c=Math.max,u=Math.min,h=function(){return m.Date.now()};function y(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function w(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==d.call(e)}(e))return NaN;if(y(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=y(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(t,"");var s=i.test(e);return s||o.test(e)?r(e.slice(2),s?2:8):a.test(e)?NaN:+e}e.exports=function(e,n,t){var a,i,o,r,s,l,m=0,d=!1,z=!1,j=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function p(n){var t=a,o=i;return a=i=void 0,m=n,r=e.apply(o,t)}function g(e){return m=e,s=setTimeout(f,n),d?p(e):r}function b(e){var t=e-l;return void 0===l||t>=n||t<0||z&&e-m>=o}function f(){var e=h();if(b(e))return v(e);s=setTimeout(f,function(e){var t=n-(e-l);return z?u(t,o-(e-m)):t}(e))}function v(e){return s=void 0,j&&a?p(e):(a=i=void 0,r)}function k(){var e=h(),t=b(e);if(a=arguments,i=this,l=e,t){if(void 0===s)return g(l);if(z)return s=setTimeout(f,n),p(l)}return void 0===s&&(s=setTimeout(f,n)),r}return n=w(n)||0,y(t)&&(d=!!t.leading,o=(z="maxWait"in t)?c(w(t.maxWait)||0,n):o,j="trailing"in t?!!t.trailing:j),k.cancel=function(){void 0!==s&&clearTimeout(s),m=0,a=l=i=s=void 0},k.flush=function(){return void 0===s?r:v(h())},k}},function(e,n,t){"use strict";var a=t(24),i=t(30),o=t(31),r=t(126),s=t(128);a({target:"Array",proto:!0,arity:1,forced:t(3)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}()},{push:function(e){var n=i(this),t=o(n),a=arguments.length;s(t+a);for(var l=0;l<a;l++)n[t]=arguments[l],t++;return r(n,t),t}})},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,t){"use strict";var a=t(1),i=t(15),o=t(98),r=t(35);e.exports=function(e,n,t,s){s||(s={});var l=s.enumerable,m=void 0!==s.name?s.name:n;if(a(t)&&o(t,m,s),s.global)l?e[n]=t:r(n,t);else{try{s.unsafe?e[n]&&(l=!0):delete e[n]}catch(e){}l?e[n]=t:i.f(e,n,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}},function(e,n,t){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,t){"use strict";var a=t(138),i=String;e.exports=function(e){if("Symbol"===a(e))throw new TypeError("Cannot convert a Symbol value to a string");return i(e)}},function(e,n,t){var a=t(82);e.exports=function(e,n,t){var i=null==e?void 0:a(e,n);return void 0===i?t:i}},function(e,n,t){"use strict";var a=t(0),i=t(7),o=a.document,r=i(o)&&i(o.createElement);e.exports=function(e){return r?o.createElement(e):{}}},function(e,n,t){"use strict";var a=t(5),i=t(3);e.exports=a&&i((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,n,t){"use strict";var a=t(2),i=t(3),o=t(1),r=t(8),s=t(5),l=t(111).CONFIGURABLE,m=t(112),d=t(113),c=d.enforce,u=d.get,h=String,y=Object.defineProperty,w=a("".slice),z=a("".replace),j=a([].join),p=s&&!i((function(){return 8!==y((function(){}),"length",{value:8}).length})),g=String(String).split("String"),b=e.exports=function(e,n,t){"Symbol("===w(h(n),0,7)&&(n="["+z(h(n),/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(n="get "+n),t&&t.setter&&(n="set "+n),(!r(e,"name")||l&&e.name!==n)&&(s?y(e,"name",{value:n,configurable:!0}):e.name=n),p&&t&&r(t,"arity")&&e.length!==t.arity&&y(e,"length",{value:t.arity});try{t&&r(t,"constructor")&&t.constructor?s&&y(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var a=c(e);return r(a,"source")||(a.source=j(g,"string"==typeof n?n:"")),e};Function.prototype.toString=b((function(){return o(this)&&u(this).source||m(this)}),"toString")},function(e,n,t){"use strict";var a=t(57),i=t(59),o=a("keys");e.exports=function(e){return o[e]||(o[e]=i(e))}},function(e,n,t){"use strict";var a=t(2),i=t(8),o=t(26),r=t(117).indexOf,s=t(46),l=a([].push);e.exports=function(e,n){var t,a=o(e),m=0,d=[];for(t in a)!i(s,t)&&i(a,t)&&l(d,t);for(;n.length>m;)i(a,t=n[m++])&&(~r(d,t)||l(d,t));return d}},,,function(e,n,t){e.exports=t(243)},function(e,n,t){"use strict";var a=t(24),i=t(123).left,o=t(124),r=t(56);a({target:"Array",proto:!0,forced:!t(125)&&r>79&&r<83||!o("reduce")},{reduce:function(e){var n=arguments.length;return i(this,e,n,n>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var a={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,o=i&&!a.call({1:2},1);n.f=o?function(e){var n=i(this,e);return!!n&&n.enumerable}:a},function(e,n,t){"use strict";var a=t(32),i=t(7),o=t(52),r=t(108),s=t(110),l=t(29),m=TypeError,d=l("toPrimitive");e.exports=function(e,n){if(!i(e)||o(e))return e;var t,l=r(e,d);if(l){if(void 0===n&&(n="default"),t=a(l,e,n),!i(t)||o(t))return t;throw new m("Can't convert object to primitive value")}return void 0===n&&(n="number"),s(e,n)}},function(e,n,t){"use strict";e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},function(e,n,t){"use strict";var a=t(28),i=t(50);e.exports=function(e,n){var t=e[n];return i(t)?void 0:a(t)}},function(e,n,t){"use strict";var a=String;e.exports=function(e){try{return a(e)}catch(e){return"Object"}}},function(e,n,t){"use strict";var a=t(32),i=t(1),o=t(7),r=TypeError;e.exports=function(e,n){var t,s;if("string"===n&&i(t=e.toString)&&!o(s=a(t,e)))return s;if(i(t=e.valueOf)&&!o(s=a(t,e)))return s;if("string"!==n&&i(t=e.toString)&&!o(s=a(t,e)))return s;throw new r("Can't convert object to primitive value")}},function(e,n,t){"use strict";var a=t(5),i=t(8),o=Function.prototype,r=a&&Object.getOwnPropertyDescriptor,s=i(o,"name"),l=s&&"something"===function(){}.name,m=s&&(!a||a&&r(o,"name").configurable);e.exports={EXISTS:s,PROPER:l,CONFIGURABLE:m}},function(e,n,t){"use strict";var a=t(2),i=t(1),o=t(34),r=a(Function.toString);i(o.inspectSource)||(o.inspectSource=function(e){return r(e)}),e.exports=o.inspectSource},function(e,n,t){"use strict";var a,i,o,r=t(114),s=t(0),l=t(7),m=t(13),d=t(8),c=t(34),u=t(99),h=t(46),y=s.TypeError,w=s.WeakMap;if(r||c.state){var z=c.state||(c.state=new w);z.get=z.get,z.has=z.has,z.set=z.set,a=function(e,n){if(z.has(e))throw new y("Object already initialized");return n.facade=e,z.set(e,n),n},i=function(e){return z.get(e)||{}},o=function(e){return z.has(e)}}else{var j=u("state");h[j]=!0,a=function(e,n){if(d(e,j))throw new y("Object already initialized");return n.facade=e,m(e,j,n),n},i=function(e){return d(e,j)?e[j]:{}},o=function(e){return d(e,j)}}e.exports={set:a,get:i,has:o,enforce:function(e){return o(e)?i(e):a(e,{})},getterFor:function(e){return function(n){var t;if(!l(n)||(t=i(n)).type!==e)throw new y("Incompatible receiver, "+e+" required");return t}}}},function(e,n,t){"use strict";var a=t(0),i=t(1),o=a.WeakMap;e.exports=i(o)&&/native code/.test(String(o))},function(e,n,t){"use strict";var a=t(27),i=t(2),o=t(116),r=t(121),s=t(23),l=i([].concat);e.exports=a("Reflect","ownKeys")||function(e){var n=o.f(s(e)),t=r.f;return t?l(n,t(e)):n}},function(e,n,t){"use strict";var a=t(100),i=t(93).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return a(e,i)}},function(e,n,t){"use strict";var a=t(26),i=t(118),o=t(31),r=function(e){return function(n,t,r){var s,l=a(n),m=o(l),d=i(r,m);if(e&&t!=t){for(;m>d;)if((s=l[d++])!=s)return!0}else for(;m>d;d++)if((e||d in l)&&l[d]===t)return e||d||0;return!e&&-1}};e.exports={includes:r(!0),indexOf:r(!1)}},function(e,n,t){"use strict";var a=t(62),i=Math.max,o=Math.min;e.exports=function(e,n){var t=a(e);return t<0?i(t+n,0):o(t,n)}},function(e,n,t){"use strict";var a=Math.ceil,i=Math.floor;e.exports=Math.trunc||function(e){var n=+e;return(n>0?i:a)(n)}},function(e,n,t){"use strict";var a=t(62),i=Math.min;e.exports=function(e){return e>0?i(a(e),9007199254740991):0}},function(e,n,t){"use strict";n.f=Object.getOwnPropertySymbols},function(e,n,t){"use strict";var a=t(3),i=t(1),o=/#|\.prototype\./,r=function(e,n){var t=l[s(e)];return t===d||t!==m&&(i(n)?a(n):!!n)},s=r.normalize=function(e){return String(e).replace(o,".").toLowerCase()},l=r.data={},m=r.NATIVE="N",d=r.POLYFILL="P";e.exports=r},function(e,n,t){"use strict";var a=t(28),i=t(30),o=t(45),r=t(31),s=TypeError,l=function(e){return function(n,t,l,m){var d=i(n),c=o(d),u=r(d);a(t);var h=e?u-1:0,y=e?-1:1;if(l<2)for(;;){if(h in c){m=c[h],h+=y;break}if(h+=y,e?h<0:u<=h)throw new s("Reduce of empty array with no initial value")}for(;e?h>=0:u>h;h+=y)h in c&&(m=t(m,c[h],h,d));return m}};e.exports={left:l(!1),right:l(!0)}},function(e,n,t){"use strict";var a=t(3);e.exports=function(e,n){var t=[][e];return!!t&&a((function(){t.call(null,n||function(){return 1},1)}))}},function(e,n,t){"use strict";var a=t(0),i=t(16);e.exports="process"===i(a.process)},function(e,n,t){"use strict";var a=t(5),i=t(127),o=TypeError,r=Object.getOwnPropertyDescriptor,s=a&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=s?function(e,n){if(i(e)&&!r(e,"length").writable)throw new o("Cannot set read only .length");return e.length=n}:function(e,n){return e.length=n}},function(e,n,t){"use strict";var a=t(16);e.exports=Array.isArray||function(e){return"Array"===a(e)}},function(e,n,t){"use strict";var a=TypeError;e.exports=function(e){if(e>9007199254740991)throw a("Maximum allowed index exceeded");return e}},function(e,n,t){"use strict";var a=t(24),i=t(0),o=t(130),r=t(131),s=i.WebAssembly,l=7!==new Error("e",{cause:7}).cause,m=function(e,n){var t={};t[e]=r(e,n,l),a({global:!0,constructor:!0,arity:1,forced:l},t)},d=function(e,n){if(s&&s[e]){var t={};t[e]=r("WebAssembly."+e,n,l),a({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};m("Error",(function(e){return function(n){return o(e,this,arguments)}})),m("EvalError",(function(e){return function(n){return o(e,this,arguments)}})),m("RangeError",(function(e){return function(n){return o(e,this,arguments)}})),m("ReferenceError",(function(e){return function(n){return o(e,this,arguments)}})),m("SyntaxError",(function(e){return function(n){return o(e,this,arguments)}})),m("TypeError",(function(e){return function(n){return o(e,this,arguments)}})),m("URIError",(function(e){return function(n){return o(e,this,arguments)}})),d("CompileError",(function(e){return function(n){return o(e,this,arguments)}})),d("LinkError",(function(e){return function(n){return o(e,this,arguments)}})),d("RuntimeError",(function(e){return function(n){return o(e,this,arguments)}}))},function(e,n,t){"use strict";var a=t(25),i=Function.prototype,o=i.apply,r=i.call;e.exports="object"==typeof Reflect&&Reflect.apply||(a?r.bind(o):function(){return r.apply(o,arguments)})},function(e,n,t){"use strict";var a=t(27),i=t(8),o=t(13),r=t(53),s=t(63),l=t(61),m=t(135),d=t(136),c=t(137),u=t(140),h=t(141),y=t(5),w=t(58);e.exports=function(e,n,t,z){var j=z?2:1,p=e.split("."),g=p[p.length-1],b=a.apply(null,p);if(b){var f=b.prototype;if(!w&&i(f,"cause")&&delete f.cause,!t)return b;var v=a("Error"),k=n((function(e,n){var t=c(z?n:e,void 0),a=z?new b(e):new b;return void 0!==t&&o(a,"message",t),h(a,k,a.stack,2),this&&r(f,this)&&d(a,this,k),arguments.length>j&&u(a,arguments[j]),a}));if(k.prototype=f,"Error"!==g?s?s(k,v):l(k,v,{name:!0}):y&&"stackTraceLimit"in b&&(m(k,b,"stackTraceLimit"),m(k,b,"prepareStackTrace")),l(k,b),!w)try{f.name!==g&&o(f,"name",g),f.constructor=k}catch(e){}return k}}},function(e,n,t){"use strict";var a=t(2),i=t(28);e.exports=function(e,n,t){try{return a(i(Object.getOwnPropertyDescriptor(e,n)[t]))}catch(e){}}},function(e,n,t){"use strict";var a=t(134),i=String,o=TypeError;e.exports=function(e){if(a(e))return e;throw new o("Can't set "+i(e)+" as a prototype")}},function(e,n,t){"use strict";var a=t(7);e.exports=function(e){return a(e)||null===e}},function(e,n,t){"use strict";var a=t(15).f;e.exports=function(e,n,t){t in e||a(e,t,{configurable:!0,get:function(){return n[t]},set:function(e){n[t]=e}})}},function(e,n,t){"use strict";var a=t(1),i=t(7),o=t(63);e.exports=function(e,n,t){var r,s;return o&&a(r=n.constructor)&&r!==t&&i(s=r.prototype)&&s!==t.prototype&&o(e,s),e}},function(e,n,t){"use strict";var a=t(94);e.exports=function(e,n){return void 0===e?arguments.length<2?"":n:a(e)}},function(e,n,t){"use strict";var a=t(139),i=t(1),o=t(16),r=t(29)("toStringTag"),s=Object,l="Arguments"===o(function(){return arguments}());e.exports=a?o:function(e){var n,t,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=s(e),r))?t:l?o(n):"Object"===(a=o(n))&&i(n.callee)?"Arguments":a}},function(e,n,t){"use strict";var a={};a[t(29)("toStringTag")]="z",e.exports="[object z]"===String(a)},function(e,n,t){"use strict";var a=t(7),i=t(13);e.exports=function(e,n){a(n)&&"cause"in n&&i(e,"cause",n.cause)}},function(e,n,t){"use strict";var a=t(13),i=t(142),o=t(143),r=Error.captureStackTrace;e.exports=function(e,n,t,s){o&&(r?r(e,n):a(e,"stack",i(t,s)))}},function(e,n,t){"use strict";var a=t(2),i=Error,o=a("".replace),r=String(new i("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(r);e.exports=function(e,n){if(l&&"string"==typeof e&&!i.prepareStackTrace)for(;n--;)e=o(e,s,"");return e}},function(e,n,t){"use strict";var a=t(3),i=t(33);e.exports=!a((function(){var e=new Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",i(1,7)),7!==e.stack)}))},function(e,n,t){var a=t(64),i=t(145);e.exports=function e(n,t,o,r,s){var l=-1,m=n.length;for(o||(o=i),s||(s=[]);++l<m;){var d=n[l];t>0&&o(d)?t>1?e(d,t-1,o,r,s):a(s,d):r||(s[s.length]=d)}return s}},function(e,n,t){var a=t(14),i=t(36),o=t(4),r=a?a.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||i(e)||!!(r&&e&&e[r])}},function(e,n,t){var a=t(12),i=t(11);e.exports=function(e){return i(e)&&"[object Arguments]"==a(e)}},function(e,n,t){var a=t(14),i=Object.prototype,o=i.hasOwnProperty,r=i.toString,s=a?a.toStringTag:void 0;e.exports=function(e){var n=o.call(e,s),t=e[s];try{e[s]=void 0;var a=!0}catch(e){}var i=r.call(e);return a&&(n?e[s]=t:delete e[s]),i}},function(e,n){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},function(e,n,t){var a=t(150),i=t(206),o=t(44),r=t(4),s=t(216);e.exports=function(e){return"function"==typeof e?e:null==e?o:"object"==typeof e?r(e)?i(e[0],e[1]):a(e):s(e)}},function(e,n,t){var a=t(151),i=t(205),o=t(81);e.exports=function(e){var n=i(e);return 1==n.length&&n[0][2]?o(n[0][0],n[0][1]):function(t){return t===e||a(t,e,n)}}},function(e,n,t){var a=t(66),i=t(70);e.exports=function(e,n,t,o){var r=t.length,s=r,l=!o;if(null==e)return!s;for(e=Object(e);r--;){var m=t[r];if(l&&m[2]?m[1]!==e[m[0]]:!(m[0]in e))return!1}for(;++r<s;){var d=(m=t[r])[0],c=e[d],u=m[1];if(l&&m[2]){if(void 0===c&&!(d in e))return!1}else{var h=new a;if(o)var y=o(c,u,d,e,n,h);if(!(void 0===y?i(u,c,3,o,h):y))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,t){var a=t(18),i=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=a(n,e);return!(t<0)&&(t==n.length-1?n.pop():i.call(n,t,1),--this.size,!0)}},function(e,n,t){var a=t(18);e.exports=function(e){var n=this.__data__,t=a(n,e);return t<0?void 0:n[t][1]}},function(e,n,t){var a=t(18);e.exports=function(e){return a(this.__data__,e)>-1}},function(e,n,t){var a=t(18);e.exports=function(e,n){var t=this.__data__,i=a(t,e);return i<0?(++this.size,t.push([e,n])):t[i][1]=n,this}},function(e,n,t){var a=t(17);e.exports=function(){this.__data__=new a,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,t){var a=t(17),i=t(37),o=t(39);e.exports=function(e,n){var t=this.__data__;if(t instanceof a){var r=t.__data__;if(!i||r.length<199)return r.push([e,n]),this.size=++t.size,this;t=this.__data__=new o(r)}return t.set(e,n),this.size=t.size,this}},function(e,n,t){var a=t(68),i=t(163),o=t(38),r=t(69),s=/^\[object .+?Constructor\]$/,l=Function.prototype,m=Object.prototype,d=l.toString,c=m.hasOwnProperty,u=RegExp("^"+d.call(c).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!o(e)||i(e))&&(a(e)?u:s).test(r(e))}},function(e,n,t){var a,i=t(164),o=(a=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"";e.exports=function(e){return!!o&&o in e}},function(e,n,t){var a=t(6)["__core-js_shared__"];e.exports=a},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,t){var a=t(167),i=t(17),o=t(37);e.exports=function(){this.size=0,this.__data__={hash:new a,map:new(o||i),string:new a}}},function(e,n,t){var a=t(168),i=t(169),o=t(170),r=t(171),s=t(172);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var a=e[n];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=i,l.prototype.get=o,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,n,t){var a=t(19);e.exports=function(){this.__data__=a?a(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,t){var a=t(19),i=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(a){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return i.call(n,e)?n[e]:void 0}},function(e,n,t){var a=t(19),i=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return a?void 0!==n[e]:i.call(n,e)}},function(e,n,t){var a=t(19);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=a&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,t){var a=t(20);e.exports=function(e){var n=a(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,t){var a=t(20);e.exports=function(e){return a(this,e).get(e)}},function(e,n,t){var a=t(20);e.exports=function(e){return a(this,e).has(e)}},function(e,n,t){var a=t(20);e.exports=function(e,n){var t=a(this,e),i=t.size;return t.set(e,n),this.size+=t.size==i?0:1,this}},function(e,n,t){var a=t(66),i=t(71),o=t(182),r=t(185),s=t(201),l=t(4),m=t(75),d=t(77),c="[object Object]",u=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,h,y,w){var z=l(e),j=l(n),p=z?"[object Array]":s(e),g=j?"[object Array]":s(n),b=(p="[object Arguments]"==p?c:p)==c,f=(g="[object Arguments]"==g?c:g)==c,v=p==g;if(v&&m(e)){if(!m(n))return!1;z=!0,b=!1}if(v&&!b)return w||(w=new a),z||d(e)?i(e,n,t,h,y,w):o(e,n,p,t,h,y,w);if(!(1&t)){var k=b&&u.call(e,"__wrapped__"),x=f&&u.call(n,"__wrapped__");if(k||x){var q=k?e.value():e,_=x?n.value():n;return w||(w=new a),y(q,_,t,h,w)}}return!!v&&(w||(w=new a),r(e,n,t,h,y,w))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var t=-1,a=null==e?0:e.length;++t<a;)if(n(e[t],t,e))return!0;return!1}},function(e,n,t){var a=t(14),i=t(183),o=t(67),r=t(71),s=t(184),l=t(40),m=a?a.prototype:void 0,d=m?m.valueOf:void 0;e.exports=function(e,n,t,a,m,c,u){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!c(new i(e),new i(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var h=s;case"[object Set]":var y=1&a;if(h||(h=l),e.size!=n.size&&!y)return!1;var w=u.get(e);if(w)return w==n;a|=2,u.set(e,n);var z=r(h(e),h(n),a,m,c,u);return u.delete(e),z;case"[object Symbol]":if(d)return d.call(e)==d.call(n)}return!1}},function(e,n,t){var a=t(6).Uint8Array;e.exports=a},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,a){t[++n]=[a,e]})),t}},function(e,n,t){var a=t(186),i=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,o,r,s){var l=1&t,m=a(e),d=m.length;if(d!=a(n).length&&!l)return!1;for(var c=d;c--;){var u=m[c];if(!(l?u in n:i.call(n,u)))return!1}var h=s.get(e),y=s.get(n);if(h&&y)return h==n&&y==e;var w=!0;s.set(e,n),s.set(n,e);for(var z=l;++c<d;){var j=e[u=m[c]],p=n[u];if(o)var g=l?o(p,j,u,n,e,s):o(j,p,u,e,n,s);if(!(void 0===g?j===p||r(j,p,t,o,s):g)){w=!1;break}z||(z="constructor"==u)}if(w&&!z){var b=e.constructor,f=n.constructor;b==f||!("constructor"in e)||!("constructor"in n)||"function"==typeof b&&b instanceof b&&"function"==typeof f&&f instanceof f||(w=!1)}return s.delete(e),s.delete(n),w}},function(e,n,t){var a=t(187),i=t(188),o=t(74);e.exports=function(e){return a(e,o,i)}},function(e,n,t){var a=t(64),i=t(4);e.exports=function(e,n,t){var o=n(e);return i(e)?o:a(o,t(e))}},function(e,n,t){var a=t(189),i=t(190),o=Object.prototype.propertyIsEnumerable,r=Object.getOwnPropertySymbols,s=r?function(e){return null==e?[]:(e=Object(e),a(r(e),(function(n){return o.call(e,n)})))}:i;e.exports=s},function(e,n){e.exports=function(e,n){for(var t=-1,a=null==e?0:e.length,i=0,o=[];++t<a;){var r=e[t];n(r,t,e)&&(o[i++]=r)}return o}},function(e,n){e.exports=function(){return[]}},function(e,n,t){var a=t(192),i=t(36),o=t(4),r=t(75),s=t(76),l=t(77),m=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=o(e),d=!t&&i(e),c=!t&&!d&&r(e),u=!t&&!d&&!c&&l(e),h=t||d||c||u,y=h?a(e.length,String):[],w=y.length;for(var z in e)!n&&!m.call(e,z)||h&&("length"==z||c&&("offset"==z||"parent"==z)||u&&("buffer"==z||"byteLength"==z||"byteOffset"==z)||s(z,w))||y.push(z);return y}},function(e,n){e.exports=function(e,n){for(var t=-1,a=Array(e);++t<e;)a[t]=n(t);return a}},function(e,n){e.exports=function(){return!1}},function(e,n,t){var a=t(12),i=t(41),o=t(11),r={};r["[object Float32Array]"]=r["[object Float64Array]"]=r["[object Int8Array]"]=r["[object Int16Array]"]=r["[object Int32Array]"]=r["[object Uint8Array]"]=r["[object Uint8ClampedArray]"]=r["[object Uint16Array]"]=r["[object Uint32Array]"]=!0,r["[object Arguments]"]=r["[object Array]"]=r["[object ArrayBuffer]"]=r["[object Boolean]"]=r["[object DataView]"]=r["[object Date]"]=r["[object Error]"]=r["[object Function]"]=r["[object Map]"]=r["[object Number]"]=r["[object Object]"]=r["[object RegExp]"]=r["[object Set]"]=r["[object String]"]=r["[object WeakMap]"]=!1,e.exports=function(e){return o(e)&&i(e.length)&&!!r[a(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,t){(function(e){var a=t(65),i=n&&!n.nodeType&&n,o=i&&"object"==typeof e&&e&&!e.nodeType&&e,r=o&&o.exports===i&&a.process,s=function(){try{var e=o&&o.require&&o.require("util").types;return e||r&&r.binding&&r.binding("util")}catch(e){}}();e.exports=s}).call(this,t(47)(e))},function(e,n,t){var a=t(198),i=t(199),o=Object.prototype.hasOwnProperty;e.exports=function(e){if(!a(e))return i(e);var n=[];for(var t in Object(e))o.call(e,t)&&"constructor"!=t&&n.push(t);return n}},function(e,n){var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},function(e,n,t){var a=t(200)(Object.keys,Object);e.exports=a},function(e,n){e.exports=function(e,n){return function(t){return e(n(t))}}},function(e,n,t){var a=t(202),i=t(37),o=t(203),r=t(79),s=t(204),l=t(12),m=t(69),d=m(a),c=m(i),u=m(o),h=m(r),y=m(s),w=l;(a&&"[object DataView]"!=w(new a(new ArrayBuffer(1)))||i&&"[object Map]"!=w(new i)||o&&"[object Promise]"!=w(o.resolve())||r&&"[object Set]"!=w(new r)||s&&"[object WeakMap]"!=w(new s))&&(w=function(e){var n=l(e),t="[object Object]"==n?e.constructor:void 0,a=t?m(t):"";if(a)switch(a){case d:return"[object DataView]";case c:return"[object Map]";case u:return"[object Promise]";case h:return"[object Set]";case y:return"[object WeakMap]"}return n}),e.exports=w},function(e,n,t){var a=t(9)(t(6),"DataView");e.exports=a},function(e,n,t){var a=t(9)(t(6),"Promise");e.exports=a},function(e,n,t){var a=t(9)(t(6),"WeakMap");e.exports=a},function(e,n,t){var a=t(80),i=t(74);e.exports=function(e){for(var n=i(e),t=n.length;t--;){var o=n[t],r=e[o];n[t]=[o,r,a(r)]}return n}},function(e,n,t){var a=t(70),i=t(95),o=t(213),r=t(42),s=t(80),l=t(81),m=t(21);e.exports=function(e,n){return r(e)&&s(n)?l(m(e),n):function(t){var r=i(t,e);return void 0===r&&r===n?o(t,e):a(n,r,3)}}},function(e,n,t){var a=t(208),i=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,r=a((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(i,(function(e,t,a,i){n.push(a?i.replace(o,"$1"):t||e)})),n}));e.exports=r},function(e,n,t){var a=t(209);e.exports=function(e){var n=a(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},function(e,n,t){var a=t(39);function i(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var a=arguments,i=n?n.apply(this,a):a[0],o=t.cache;if(o.has(i))return o.get(i);var r=e.apply(this,a);return t.cache=o.set(i,r)||o,r};return t.cache=new(i.Cache||a),t}i.Cache=a,e.exports=i},function(e,n,t){var a=t(211);e.exports=function(e){return null==e?"":a(e)}},function(e,n,t){var a=t(14),i=t(212),o=t(4),r=t(43),s=a?a.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(o(n))return i(n,e)+"";if(r(n))return l?l.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(e,n){e.exports=function(e,n){for(var t=-1,a=null==e?0:e.length,i=Array(a);++t<a;)i[t]=n(e[t],t,e);return i}},function(e,n,t){var a=t(214),i=t(215);e.exports=function(e,n){return null!=e&&i(e,n,a)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,t){var a=t(83),i=t(36),o=t(4),r=t(76),s=t(41),l=t(21);e.exports=function(e,n,t){for(var m=-1,d=(n=a(n,e)).length,c=!1;++m<d;){var u=l(n[m]);if(!(c=null!=e&&t(e,u)))break;e=e[u]}return c||++m!=d?c:!!(d=null==e?0:e.length)&&s(d)&&r(u,d)&&(o(e)||i(e))}},function(e,n,t){var a=t(217),i=t(218),o=t(42),r=t(21);e.exports=function(e){return o(e)?a(r(e)):i(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,t){var a=t(82);e.exports=function(e){return function(n){return a(n,e)}}},function(e,n,t){var a=t(44),i=t(220),o=t(222);e.exports=function(e,n){return o(i(e,n,a),e+"")}},function(e,n,t){var a=t(221),i=Math.max;e.exports=function(e,n,t){return n=i(void 0===n?e.length-1:n,0),function(){for(var o=arguments,r=-1,s=i(o.length-n,0),l=Array(s);++r<s;)l[r]=o[n+r];r=-1;for(var m=Array(n+1);++r<n;)m[r]=o[r];return m[n]=t(l),a(e,this,m)}}},function(e,n){e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},function(e,n,t){var a=t(223),i=t(226)(a);e.exports=i},function(e,n,t){var a=t(224),i=t(225),o=t(44),r=i?function(e,n){return i(e,"toString",{configurable:!0,enumerable:!1,value:a(n),writable:!0})}:o;e.exports=r},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,t){var a=t(9),i=function(){try{var e=a(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=i},function(e,n){var t=Date.now;e.exports=function(e){var n=0,a=0;return function(){var i=t(),o=16-(i-a);if(a=i,o>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,t){var a=t(72),i=t(228),o=t(233),r=t(73),s=t(234),l=t(40);e.exports=function(e,n,t){var m=-1,d=i,c=e.length,u=!0,h=[],y=h;if(t)u=!1,d=o;else if(c>=200){var w=n?null:s(e);if(w)return l(w);u=!1,d=r,y=new a}else y=n?[]:h;e:for(;++m<c;){var z=e[m],j=n?n(z):z;if(z=t||0!==z?z:0,u&&j==j){for(var p=y.length;p--;)if(y[p]===j)continue e;n&&y.push(j),h.push(z)}else d(y,j,t)||(y!==h&&y.push(j),h.push(z))}return h}},function(e,n,t){var a=t(229);e.exports=function(e,n){return!!(null==e?0:e.length)&&a(e,n,0)>-1}},function(e,n,t){var a=t(230),i=t(231),o=t(232);e.exports=function(e,n,t){return n==n?o(e,n,t):a(e,i,t)}},function(e,n){e.exports=function(e,n,t,a){for(var i=e.length,o=t+(a?1:-1);a?o--:++o<i;)if(n(e[o],o,e))return o;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,t){for(var a=t-1,i=e.length;++a<i;)if(e[a]===n)return a;return-1}},function(e,n){e.exports=function(e,n,t){for(var a=-1,i=null==e?0:e.length;++a<i;)if(t(n,e[a]))return!0;return!1}},function(e,n,t){var a=t(79),i=t(235),o=t(40),r=a&&1/o(new a([,-0]))[1]==1/0?function(e){return new a(e)}:i;e.exports=r},function(e,n){e.exports=function(){}},function(e,n,t){var a=t(78),i=t(11);e.exports=function(e){return i(e)&&a(e)}},function(e,n,t){"use strict";t(84)},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(85)},function(e,n,t){"use strict";t(86)},function(e,n,t){"use strict";t.r(n);
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var a=Object.freeze({}),i=Array.isArray;function o(e){return null==e}function r(e){return null!=e}function s(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function m(e){return"function"==typeof e}function d(e){return null!==e&&"object"==typeof e}var c=Object.prototype.toString;function u(e){return"[object Object]"===c.call(e)}function h(e){return"[object RegExp]"===c.call(e)}function y(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function w(e){return r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function z(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===c?JSON.stringify(e,j,2):String(e)}function j(e,n){return n&&n.__v_isRef?n.value:n}function p(e){var n=parseFloat(e);return isNaN(n)?e:n}function g(e,n){for(var t=Object.create(null),a=e.split(","),i=0;i<a.length;i++)t[a[i]]=!0;return n?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}g("slot,component",!0);var b=g("key,ref,slot,slot-scope,is");function f(e,n){var t=e.length;if(t){if(n===e[t-1])return void(e.length=t-1);var a=e.indexOf(n);if(a>-1)return e.splice(a,1)}}var v=Object.prototype.hasOwnProperty;function k(e,n){return v.call(e,n)}function x(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var q=/-(\w)/g,_=x((function(e){return e.replace(q,(function(e,n){return n?n.toUpperCase():""}))})),N=x((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),Z=/\B([A-Z])/g,M=x((function(e){return e.replace(Z,"-$1").toLowerCase()}));var I=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function t(t){var a=arguments.length;return a?a>1?e.apply(n,arguments):e.call(n,t):e.call(n)}return t._length=e.length,t};function Y(e,n){n=n||0;for(var t=e.length-n,a=new Array(t);t--;)a[t]=e[t+n];return a}function T(e,n){for(var t in n)e[t]=n[t];return e}function A(e){for(var n={},t=0;t<e.length;t++)e[t]&&T(n,e[t]);return n}function W(e,n,t){}var O=function(e,n,t){return!1},D=function(e){return e};function R(e,n){if(e===n)return!0;var t=d(e),a=d(n);if(!t||!a)return!t&&!a&&String(e)===String(n);try{var i=Array.isArray(e),o=Array.isArray(n);if(i&&o)return e.length===n.length&&e.every((function(e,t){return R(e,n[t])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(i||o)return!1;var r=Object.keys(e),s=Object.keys(n);return r.length===s.length&&r.every((function(t){return R(e[t],n[t])}))}catch(e){return!1}}function U(e,n){for(var t=0;t<e.length;t++)if(R(e[t],n))return t;return-1}function V(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}function E(e,n){return e===n?0===e&&1/e!=1/n:e==e||n==n}var G=["component","directive","filter"],F=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],Q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:O,isReservedAttr:O,isUnknownElement:O,getTagNamespace:W,parsePlatformTagName:D,mustUseProp:O,async:!0,_lifecycleHooks:F},J=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function S(e){var n=(e+"").charCodeAt(0);return 36===n||95===n}function X(e,n,t,a){Object.defineProperty(e,n,{value:t,enumerable:!!a,writable:!0,configurable:!0})}var B=new RegExp("[^".concat(J.source,".$_\\d]"));var C="__proto__"in{},L="undefined"!=typeof window,H=L&&window.navigator.userAgent.toLowerCase(),P=H&&/msie|trident/.test(H),K=H&&H.indexOf("msie 9.0")>0,$=H&&H.indexOf("edge/")>0;H&&H.indexOf("android");var ee=H&&/iphone|ipad|ipod|ios/.test(H);H&&/chrome\/\d+/.test(H),H&&/phantomjs/.test(H);var ne,te=H&&H.match(/firefox\/(\d+)/),ae={}.watch,ie=!1;if(L)try{var oe={};Object.defineProperty(oe,"passive",{get:function(){ie=!0}}),window.addEventListener("test-passive",null,oe)}catch(e){}var re=function(){return void 0===ne&&(ne=!L&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),ne},se=L&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function le(e){return"function"==typeof e&&/native code/.test(e.toString())}var me,de="undefined"!=typeof Symbol&&le(Symbol)&&"undefined"!=typeof Reflect&&le(Reflect.ownKeys);me="undefined"!=typeof Set&&le(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ce=null;function ue(e){void 0===e&&(e=null),e||ce&&ce._scope.off(),ce=e,e&&e._scope.on()}var he=function(){function e(e,n,t,a,i,o,r,s){this.tag=e,this.data=n,this.children=t,this.text=a,this.elm=i,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),ye=function(e){void 0===e&&(e="");var n=new he;return n.text=e,n.isComment=!0,n};function we(e){return new he(void 0,void 0,void 0,String(e))}function ze(e){var n=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}"function"==typeof SuppressedError&&SuppressedError;var je=0,pe=[],ge=function(){function e(){this._pending=!1,this.id=je++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,pe.push(this))},e.prototype.depend=function(n){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var n=this.subs.filter((function(e){return e}));for(var t=0,a=n.length;t<a;t++){0,n[t].update()}},e}();ge.target=null;var be=[];function fe(e){be.push(e),ge.target=e}function ve(){be.pop(),ge.target=be[be.length-1]}var ke=Array.prototype,xe=Object.create(ke);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=ke[e];X(xe,e,(function(){for(var t=[],a=0;a<arguments.length;a++)t[a]=arguments[a];var i,o=n.apply(this,t),r=this.__ob__;switch(e){case"push":case"unshift":i=t;break;case"splice":i=t.slice(2)}return i&&r.observeArray(i),r.dep.notify(),o}))}));var qe=Object.getOwnPropertyNames(xe),_e={},Ne=!0;function Ze(e){Ne=e}var Me={notify:W,depend:W,addSub:W,removeSub:W},Ie=function(){function e(e,n,t){if(void 0===n&&(n=!1),void 0===t&&(t=!1),this.value=e,this.shallow=n,this.mock=t,this.dep=t?Me:new ge,this.vmCount=0,X(e,"__ob__",this),i(e)){if(!t)if(C)e.__proto__=xe;else for(var a=0,o=qe.length;a<o;a++){X(e,s=qe[a],xe[s])}n||this.observeArray(e)}else{var r=Object.keys(e);for(a=0;a<r.length;a++){var s;Te(e,s=r[a],_e,void 0,n,t)}}}return e.prototype.observeArray=function(e){for(var n=0,t=e.length;n<t;n++)Ye(e[n],!1,this.mock)},e}();function Ye(e,n,t){return e&&k(e,"__ob__")&&e.__ob__ instanceof Ie?e.__ob__:!Ne||!t&&re()||!i(e)&&!u(e)||!Object.isExtensible(e)||e.__v_skip||Ge(e)||e instanceof he?void 0:new Ie(e,n,t)}function Te(e,n,t,a,o,r,s){void 0===s&&(s=!1);var l=new ge,m=Object.getOwnPropertyDescriptor(e,n);if(!m||!1!==m.configurable){var d=m&&m.get,c=m&&m.set;d&&!c||t!==_e&&2!==arguments.length||(t=e[n]);var u=o?t&&t.__ob__:Ye(t,!1,r);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=d?d.call(e):t;return ge.target&&(l.depend(),u&&(u.dep.depend(),i(n)&&Oe(n))),Ge(n)&&!o?n.value:n},set:function(n){var a=d?d.call(e):t;if(E(a,n)){if(c)c.call(e,n);else{if(d)return;if(!o&&Ge(a)&&!Ge(n))return void(a.value=n);t=n}u=o?n&&n.__ob__:Ye(n,!1,r),l.notify()}}}),l}}function Ae(e,n,t){if(!Ee(e)){var a=e.__ob__;return i(e)&&y(n)?(e.length=Math.max(e.length,n),e.splice(n,1,t),a&&!a.shallow&&a.mock&&Ye(t,!1,!0),t):n in e&&!(n in Object.prototype)?(e[n]=t,t):e._isVue||a&&a.vmCount?t:a?(Te(a.value,n,t,void 0,a.shallow,a.mock),a.dep.notify(),t):(e[n]=t,t)}}function We(e,n){if(i(e)&&y(n))e.splice(n,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||Ee(e)||k(e,n)&&(delete e[n],t&&t.dep.notify())}}function Oe(e){for(var n=void 0,t=0,a=e.length;t<a;t++)(n=e[t])&&n.__ob__&&n.__ob__.dep.depend(),i(n)&&Oe(n)}function De(e){return Re(e,!0),X(e,"__v_isShallow",!0),e}function Re(e,n){if(!Ee(e)){Ye(e,n,re());0}}function Ue(e){return Ee(e)?Ue(e.__v_raw):!(!e||!e.__ob__)}function Ve(e){return!(!e||!e.__v_isShallow)}function Ee(e){return!(!e||!e.__v_isReadonly)}function Ge(e){return!(!e||!0!==e.__v_isRef)}function Fe(e,n,t){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var e=n[t];if(Ge(e))return e.value;var a=e&&e.__ob__;return a&&a.dep.depend(),e},set:function(e){var a=n[t];Ge(a)&&!Ge(e)?a.value=e:n[t]=e}})}var Qe="".concat("watcher"," callback"),Je="".concat("watcher"," getter"),Se="".concat("watcher"," cleanup");var Xe,Be={};function Ce(e,n,t){return Le(e,n,t)}function Le(e,n,t){var o=void 0===t?a:t,r=o.immediate,s=o.deep,l=o.flush,d=void 0===l?"pre":l;o.onTrack,o.onTrigger;var c,u,h=ce,y=function(e,n,t){void 0===t&&(t=null);var a=Dn(e,null,t,h,n);return s&&a&&a.__ob__&&a.__ob__.dep.depend(),a},w=!1,z=!1;if(Ge(e)?(c=function(){return e.value},w=Ve(e)):Ue(e)?(c=function(){return e.__ob__.dep.depend(),e},s=!0):i(e)?(z=!0,w=e.some((function(e){return Ue(e)||Ve(e)})),c=function(){return e.map((function(e){return Ge(e)?e.value:Ue(e)?(e.__ob__.dep.depend(),Pn(e)):m(e)?y(e,Je):void 0}))}):c=m(e)?n?function(){return y(e,Je)}:function(){if(!h||!h._isDestroyed)return u&&u(),y(e,"watcher",[p])}:W,n&&s){var j=c;c=function(){return Pn(j())}}var p=function(e){u=g.onStop=function(){y(e,Se)}};if(re())return p=W,n?r&&y(n,Qe,[c(),z?[]:void 0,p]):c(),W;var g=new et(ce,c,W,{lazy:!0});g.noRecurse=!n;var b=z?[]:Be;return g.run=function(){if(g.active)if(n){var e=g.get();(s||w||(z?e.some((function(e,n){return E(e,b[n])})):E(e,b)))&&(u&&u(),y(n,Qe,[e,b===Be?void 0:b,p]),b=e)}else g.get()},"sync"===d?g.update=g.run:"post"===d?(g.post=!0,g.update=function(){return ft(g)}):g.update=function(){if(h&&h===ce&&!h._isMounted){var e=h._preWatchers||(h._preWatchers=[]);e.indexOf(g)<0&&e.push(g)}else ft(g)},n?r?g.run():b=g.get():"post"===d&&h?h.$once("hook:mounted",(function(){return g.get()})):g.get(),function(){g.teardown()}}var He=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Xe,!e&&Xe&&(this.index=(Xe.scopes||(Xe.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var n=Xe;try{return Xe=this,e()}finally{Xe=n}}else 0},e.prototype.on=function(){Xe=this},e.prototype.off=function(){Xe=this.parent},e.prototype.stop=function(e){if(this.active){var n=void 0,t=void 0;for(n=0,t=this.effects.length;n<t;n++)this.effects[n].teardown();for(n=0,t=this.cleanups.length;n<t;n++)this.cleanups[n]();if(this.scopes)for(n=0,t=this.scopes.length;n<t;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!e){var a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0,this.active=!1}},e}();function Pe(e){var n=e._provided,t=e.$parent&&e.$parent._provided;return t===n?e._provided=Object.create(t):n}var Ke=x((function(e){var n="&"===e.charAt(0),t="~"===(e=n?e.slice(1):e).charAt(0),a="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:t,capture:a,passive:n}}));function $e(e,n){function t(){var e=t.fns;if(!i(e))return Dn(e,null,arguments,n,"v-on handler");for(var a=e.slice(),o=0;o<a.length;o++)Dn(a[o],null,arguments,n,"v-on handler")}return t.fns=e,t}function en(e,n,t,a,i,r){var l,m,d,c;for(l in e)m=e[l],d=n[l],c=Ke(l),o(m)||(o(d)?(o(m.fns)&&(m=e[l]=$e(m,r)),s(c.once)&&(m=e[l]=i(c.name,m,c.capture)),t(c.name,m,c.capture,c.passive,c.params)):m!==d&&(d.fns=m,e[l]=d));for(l in n)o(e[l])&&a((c=Ke(l)).name,n[l],c.capture)}function nn(e,n,t){var a;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var i=e[n];function l(){t.apply(this,arguments),f(a.fns,l)}o(i)?a=$e([l]):r(i.fns)&&s(i.merged)?(a=i).fns.push(l):a=$e([i,l]),a.merged=!0,e[n]=a}function tn(e,n,t,a,i){if(r(n)){if(k(n,t))return e[t]=n[t],i||delete n[t],!0;if(k(n,a))return e[t]=n[a],i||delete n[a],!0}return!1}function an(e){return l(e)?[we(e)]:i(e)?function e(n,t){var a,m,d,c,u=[];for(a=0;a<n.length;a++)o(m=n[a])||"boolean"==typeof m||(d=u.length-1,c=u[d],i(m)?m.length>0&&(on((m=e(m,"".concat(t||"","_").concat(a)))[0])&&on(c)&&(u[d]=we(c.text+m[0].text),m.shift()),u.push.apply(u,m)):l(m)?on(c)?u[d]=we(c.text+m):""!==m&&u.push(we(m)):on(m)&&on(c)?u[d]=we(c.text+m.text):(s(n._isVList)&&r(m.tag)&&o(m.key)&&r(t)&&(m.key="__vlist".concat(t,"_").concat(a,"__")),u.push(m)));return u}(e):void 0}function on(e){return r(e)&&r(e.text)&&!1===e.isComment}function rn(e,n){var t,a,o,s,l=null;if(i(e)||"string"==typeof e)for(l=new Array(e.length),t=0,a=e.length;t<a;t++)l[t]=n(e[t],t);else if("number"==typeof e)for(l=new Array(e),t=0;t<e;t++)l[t]=n(t+1,t);else if(d(e))if(de&&e[Symbol.iterator]){l=[];for(var m=e[Symbol.iterator](),c=m.next();!c.done;)l.push(n(c.value,l.length)),c=m.next()}else for(o=Object.keys(e),l=new Array(o.length),t=0,a=o.length;t<a;t++)s=o[t],l[t]=n(e[s],s,t);return r(l)||(l=[]),l._isVList=!0,l}function sn(e,n,t,a){var i,o=this.$scopedSlots[e];o?(t=t||{},a&&(t=T(T({},a),t)),i=o(t)||(m(n)?n():n)):i=this.$slots[e]||(m(n)?n():n);var r=t&&t.slot;return r?this.$createElement("template",{slot:r},i):i}function ln(e){return Vt(this.$options,"filters",e,!0)||D}function mn(e,n){return i(e)?-1===e.indexOf(n):e!==n}function dn(e,n,t,a,i){var o=Q.keyCodes[n]||t;return i&&a&&!Q.keyCodes[n]?mn(i,a):o?mn(o,e):a?M(a)!==n:void 0===e}function cn(e,n,t,a,o){if(t)if(d(t)){i(t)&&(t=A(t));var r=void 0,s=function(i){if("class"===i||"style"===i||b(i))r=e;else{var s=e.attrs&&e.attrs.type;r=a||Q.mustUseProp(n,s,i)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=_(i),m=M(i);l in r||m in r||(r[i]=t[i],o&&((e.on||(e.on={}))["update:".concat(i)]=function(e){t[i]=e}))};for(var l in t)s(l)}else;return e}function un(e,n){var t=this._staticTrees||(this._staticTrees=[]),a=t[e];return a&&!n||yn(a=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),a}function hn(e,n,t){return yn(e,"__once__".concat(n).concat(t?"_".concat(t):""),!0),e}function yn(e,n,t){if(i(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&wn(e[a],"".concat(n,"_").concat(a),t);else wn(e,n,t)}function wn(e,n,t){e.isStatic=!0,e.key=n,e.isOnce=t}function zn(e,n){if(n)if(u(n)){var t=e.on=e.on?T({},e.on):{};for(var a in n){var i=t[a],o=n[a];t[a]=i?[].concat(i,o):o}}else;return e}function jn(e,n,t,a){n=n||{$stable:!t};for(var o=0;o<e.length;o++){var r=e[o];i(r)?jn(r,n,t):r&&(r.proxy&&(r.fn.proxy=!0),n[r.key]=r.fn)}return a&&(n.$key=a),n}function pn(e,n){for(var t=0;t<n.length;t+=2){var a=n[t];"string"==typeof a&&a&&(e[n[t]]=n[t+1])}return e}function gn(e,n){return"string"==typeof e?n+e:e}function bn(e){e._o=hn,e._n=p,e._s=z,e._l=rn,e._t=sn,e._q=R,e._i=U,e._m=un,e._f=ln,e._k=dn,e._b=cn,e._v=we,e._e=ye,e._u=jn,e._g=zn,e._d=pn,e._p=gn}function fn(e,n){if(!e||!e.length)return{};for(var t={},a=0,i=e.length;a<i;a++){var o=e[a],r=o.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,o.context!==n&&o.fnContext!==n||!r||null==r.slot)(t.default||(t.default=[])).push(o);else{var s=r.slot,l=t[s]||(t[s]=[]);"template"===o.tag?l.push.apply(l,o.children||[]):l.push(o)}}for(var m in t)t[m].every(vn)&&delete t[m];return t}function vn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function kn(e){return e.isComment&&e.asyncFactory}function xn(e,n,t,i){var o,r=Object.keys(t).length>0,s=n?!!n.$stable:!r,l=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(s&&i&&i!==a&&l===i.$key&&!r&&!i.$hasNormal)return i;for(var m in o={},n)n[m]&&"$"!==m[0]&&(o[m]=qn(e,t,m,n[m]))}else o={};for(var d in t)d in o||(o[d]=_n(t,d));return n&&Object.isExtensible(n)&&(n._normalized=o),X(o,"$stable",s),X(o,"$key",l),X(o,"$hasNormal",r),o}function qn(e,n,t,a){var o=function(){var n=ce;ue(e);var t=arguments.length?a.apply(null,arguments):a({}),o=(t=t&&"object"==typeof t&&!i(t)?[t]:an(t))&&t[0];return ue(n),t&&(!o||1===t.length&&o.isComment&&!kn(o))?void 0:t};return a.proxy&&Object.defineProperty(n,t,{get:o,enumerable:!0,configurable:!0}),o}function _n(e,n){return function(){return e[n]}}function Nn(e){return{get attrs(){if(!e._attrsProxy){var n=e._attrsProxy={};X(n,"_v_attr_proxy",!0),Zn(n,e.$attrs,a,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||Zn(e._listenersProxy={},e.$listeners,a,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||In(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:I(e.$emit,e),expose:function(n){n&&Object.keys(n).forEach((function(t){return Fe(e,n,t)}))}}}function Zn(e,n,t,a,i){var o=!1;for(var r in n)r in e?n[r]!==t[r]&&(o=!0):(o=!0,Mn(e,r,a,i));for(var r in e)r in n||(o=!0,delete e[r]);return o}function Mn(e,n,t,a){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){return t[a][n]}})}function In(e,n){for(var t in n)e[t]=n[t];for(var t in e)t in n||delete e[t]}var Yn=null;function Tn(e,n){return(e.__esModule||de&&"Module"===e[Symbol.toStringTag])&&(e=e.default),d(e)?n.extend(e):e}function An(e){if(i(e))for(var n=0;n<e.length;n++){var t=e[n];if(r(t)&&(r(t.componentOptions)||kn(t)))return t}}function Wn(e,n,t,a,c,u){return(i(t)||l(t))&&(c=a,a=t,t=void 0),s(u)&&(c=2),function(e,n,t,a,l){if(r(t)&&r(t.__ob__))return ye();r(t)&&r(t.is)&&(n=t.is);if(!n)return ye();0;i(a)&&m(a[0])&&((t=t||{}).scopedSlots={default:a[0]},a.length=0);2===l?a=an(a):1===l&&(a=function(e){for(var n=0;n<e.length;n++)if(i(e[n]))return Array.prototype.concat.apply([],e);return e}(a));var c,u;if("string"==typeof n){var h=void 0;u=e.$vnode&&e.$vnode.ns||Q.getTagNamespace(n),c=Q.isReservedTag(n)?new he(Q.parsePlatformTagName(n),t,a,void 0,void 0,e):t&&t.pre||!r(h=Vt(e.$options,"components",n))?new he(n,t,a,void 0,void 0,e):Mt(h,t,e,a,n)}else c=Mt(n,t,e,a);return i(c)?c:r(c)?(r(u)&&function e(n,t,a){n.ns=t,"foreignObject"===n.tag&&(t=void 0,a=!0);if(r(n.children))for(var i=0,l=n.children.length;i<l;i++){var m=n.children[i];r(m.tag)&&(o(m.ns)||s(a)&&"svg"!==m.tag)&&e(m,t,a)}}(c,u),r(t)&&function(e){d(e.style)&&Pn(e.style);d(e.class)&&Pn(e.class)}(t),c):ye()}(e,n,t,a,c)}function On(e,n,t){fe();try{if(n)for(var a=n;a=a.$parent;){var i=a.$options.errorCaptured;if(i)for(var o=0;o<i.length;o++)try{if(!1===i[o].call(a,e,n,t))return}catch(e){Rn(e,a,"errorCaptured hook")}}Rn(e,n,t)}finally{ve()}}function Dn(e,n,t,a,i){var o;try{(o=t?e.apply(n,t):e.call(n))&&!o._isVue&&w(o)&&!o._handled&&(o.catch((function(e){return On(e,a,i+" (Promise/async)")})),o._handled=!0)}catch(e){On(e,a,i)}return o}function Rn(e,n,t){if(Q.errorHandler)try{return Q.errorHandler.call(null,e,n,t)}catch(n){n!==e&&Un(n,null,"config.errorHandler")}Un(e,n,t)}function Un(e,n,t){if(!L||"undefined"==typeof console)throw e;console.error(e)}var Vn,En=!1,Gn=[],Fn=!1;function Qn(){Fn=!1;var e=Gn.slice(0);Gn.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&le(Promise)){var Jn=Promise.resolve();Vn=function(){Jn.then(Qn),ee&&setTimeout(W)},En=!0}else if(P||"undefined"==typeof MutationObserver||!le(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Vn="undefined"!=typeof setImmediate&&le(setImmediate)?function(){setImmediate(Qn)}:function(){setTimeout(Qn,0)};else{var Sn=1,Xn=new MutationObserver(Qn),Bn=document.createTextNode(String(Sn));Xn.observe(Bn,{characterData:!0}),Vn=function(){Sn=(Sn+1)%2,Bn.data=String(Sn)},En=!0}function Cn(e,n){var t;if(Gn.push((function(){if(e)try{e.call(n)}catch(e){On(e,n,"nextTick")}else t&&t(n)})),Fn||(Fn=!0,Vn()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}function Ln(e){return function(n,t){if(void 0===t&&(t=ce),t)return function(e,n,t){var a=e.$options;a[n]=Ot(a[n],t)}(t,e,n)}}Ln("beforeMount"),Ln("mounted"),Ln("beforeUpdate"),Ln("updated"),Ln("beforeDestroy"),Ln("destroyed"),Ln("activated"),Ln("deactivated"),Ln("serverPrefetch"),Ln("renderTracked"),Ln("renderTriggered"),Ln("errorCaptured");var Hn=new me;function Pn(e){return function e(n,t){var a,o,r=i(n);if(!r&&!d(n)||n.__v_skip||Object.isFrozen(n)||n instanceof he)return;if(n.__ob__){var s=n.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(r)for(a=n.length;a--;)e(n[a],t);else if(Ge(n))e(n.value,t);else for(o=Object.keys(n),a=o.length;a--;)e(n[o[a]],t)}(e,Hn),Hn.clear(),e}var Kn,$n=0,et=function(){function e(e,n,t,a,i){var o,r;o=this,void 0===(r=Xe&&!Xe._vm?Xe:e?e._scope:void 0)&&(r=Xe),r&&r.active&&r.effects.push(o),(this.vm=e)&&i&&(e._watcher=this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++$n,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new me,this.newDepIds=new me,this.expression="",m(n)?this.getter=n:(this.getter=function(e){if(!B.test(e)){var n=e.split(".");return function(e){for(var t=0;t<n.length;t++){if(!e)return;e=e[n[t]]}return e}}}(n),this.getter||(this.getter=W)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;fe(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;On(e,n,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Pn(e),ve(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ft(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||d(e)||this.deep){var n=this.value;if(this.value=e,this.user){var t='callback for watcher "'.concat(this.expression,'"');Dn(this.cb,this.vm,[e,n],this.vm,t)}else this.cb.call(this.vm,e,n)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&f(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function nt(e,n){Kn.$on(e,n)}function tt(e,n){Kn.$off(e,n)}function at(e,n){var t=Kn;return function a(){var i=n.apply(null,arguments);null!==i&&t.$off(e,a)}}function it(e,n,t){Kn=e,en(n,t||{},nt,tt,at,e),Kn=void 0}var ot=null;function rt(e){var n=ot;return ot=e,function(){ot=n}}function st(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function lt(e,n){if(n){if(e._directInactive=!1,st(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)lt(e.$children[t]);mt(e,"activated")}}function mt(e,n,t,a){void 0===a&&(a=!0),fe();var i=ce,o=Xe;a&&ue(e);var r=e.$options[n],s="".concat(n," hook");if(r)for(var l=0,m=r.length;l<m;l++)Dn(r[l],e,t||null,e,s);e._hasHookEvent&&e.$emit("hook:"+n),a&&(ue(i),o&&o.on()),ve()}var dt=[],ct=[],ut={},ht=!1,yt=!1,wt=0;var zt=0,jt=Date.now;if(L&&!P){var pt=window.performance;pt&&"function"==typeof pt.now&&jt()>document.createEvent("Event").timeStamp&&(jt=function(){return pt.now()})}var gt=function(e,n){if(e.post){if(!n.post)return 1}else if(n.post)return-1;return e.id-n.id};function bt(){var e,n;for(zt=jt(),yt=!0,dt.sort(gt),wt=0;wt<dt.length;wt++)(e=dt[wt]).before&&e.before(),n=e.id,ut[n]=null,e.run();var t=ct.slice(),a=dt.slice();wt=dt.length=ct.length=0,ut={},ht=yt=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,lt(e[n],!0)}(t),function(e){var n=e.length;for(;n--;){var t=e[n],a=t.vm;a&&a._watcher===t&&a._isMounted&&!a._isDestroyed&&mt(a,"updated")}}(a),function(){for(var e=0;e<pe.length;e++){var n=pe[e];n.subs=n.subs.filter((function(e){return e})),n._pending=!1}pe.length=0}(),se&&Q.devtools&&se.emit("flush")}function ft(e){var n=e.id;if(null==ut[n]&&(e!==ge.target||!e.noRecurse)){if(ut[n]=!0,yt){for(var t=dt.length-1;t>wt&&dt[t].id>e.id;)t--;dt.splice(t+1,0,e)}else dt.push(e);ht||(ht=!0,Cn(bt))}}function vt(e,n){if(e){for(var t=Object.create(null),a=de?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++){var o=a[i];if("__ob__"!==o){var r=e[o].from;if(r in n._provided)t[o]=n._provided[r];else if("default"in e[o]){var s=e[o].default;t[o]=m(s)?s.call(n):s}else 0}}return t}}function kt(e,n,t,o,r){var l,m=this,d=r.options;k(o,"_uid")?(l=Object.create(o))._original=o:(l=o,o=o._original);var c=s(d._compiled),u=!c;this.data=e,this.props=n,this.children=t,this.parent=o,this.listeners=e.on||a,this.injections=vt(d.inject,o),this.slots=function(){return m.$slots||xn(o,e.scopedSlots,m.$slots=fn(t,o)),m.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return xn(o,e.scopedSlots,this.slots())}}),c&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=xn(o,e.scopedSlots,this.$slots)),d._scopeId?this._c=function(e,n,t,a){var r=Wn(l,e,n,t,a,u);return r&&!i(r)&&(r.fnScopeId=d._scopeId,r.fnContext=o),r}:this._c=function(e,n,t,a){return Wn(l,e,n,t,a,u)}}function xt(e,n,t,a,i){var o=ze(e);return o.fnContext=t,o.fnOptions=a,n.slot&&((o.data||(o.data={})).slot=n.slot),o}function qt(e,n){for(var t in n)e[_(t)]=n[t]}function _t(e){return e.name||e.__name||e._componentTag}bn(kt.prototype);var Nt={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;Nt.prepatch(t,t)}else{(e.componentInstance=function(e,n){var t={_isComponent:!0,_parentVnode:e,parent:n},a=e.data.inlineTemplate;r(a)&&(t.render=a.render,t.staticRenderFns=a.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,ot)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var t=n.componentOptions;!function(e,n,t,i,o){var r=i.data.scopedSlots,s=e.$scopedSlots,l=!!(r&&!r.$stable||s!==a&&!s.$stable||r&&e.$scopedSlots.$key!==r.$key||!r&&e.$scopedSlots.$key),m=!!(o||e.$options._renderChildren||l),d=e.$vnode;e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i),e.$options._renderChildren=o;var c=i.data.attrs||a;e._attrsProxy&&Zn(e._attrsProxy,c,d.data&&d.data.attrs||a,e,"$attrs")&&(m=!0),e.$attrs=c,t=t||a;var u=e.$options._parentListeners;if(e._listenersProxy&&Zn(e._listenersProxy,t,u||a,e,"$listeners"),e.$listeners=e.$options._parentListeners=t,it(e,t,u),n&&e.$options.props){Ze(!1);for(var h=e._props,y=e.$options._propKeys||[],w=0;w<y.length;w++){var z=y[w],j=e.$options.props;h[z]=Et(z,j,n,e)}Ze(!0),e.$options.propsData=n}m&&(e.$slots=fn(o,i.context),e.$forceUpdate())}(n.componentInstance=e.componentInstance,t.propsData,t.listeners,n,t.children)},insert:function(e){var n,t=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,mt(a,"mounted")),e.data.keepAlive&&(t._isMounted?((n=a)._inactive=!1,ct.push(n)):lt(a,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,t){if(!(t&&(n._directInactive=!0,st(n))||n._inactive)){n._inactive=!0;for(var a=0;a<n.$children.length;a++)e(n.$children[a]);mt(n,"deactivated")}}(n,!0):n.$destroy())}},Zt=Object.keys(Nt);function Mt(e,n,t,l,m){if(!o(e)){var c=t.$options._base;if(d(e)&&(e=c.extend(e)),"function"==typeof e){var u;if(o(e.cid)&&void 0===(e=function(e,n){if(s(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;var t=Yn;if(t&&r(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t),s(e.loading)&&r(e.loadingComp))return e.loadingComp;if(t&&!r(e.owners)){var a=e.owners=[t],i=!0,l=null,m=null;t.$on("hook:destroyed",(function(){return f(a,t)}));var c=function(e){for(var n=0,t=a.length;n<t;n++)a[n].$forceUpdate();e&&(a.length=0,null!==l&&(clearTimeout(l),l=null),null!==m&&(clearTimeout(m),m=null))},u=V((function(t){e.resolved=Tn(t,n),i?a.length=0:c(!0)})),h=V((function(n){r(e.errorComp)&&(e.error=!0,c(!0))})),y=e(u,h);return d(y)&&(w(y)?o(e.resolved)&&y.then(u,h):w(y.component)&&(y.component.then(u,h),r(y.error)&&(e.errorComp=Tn(y.error,n)),r(y.loading)&&(e.loadingComp=Tn(y.loading,n),0===y.delay?e.loading=!0:l=setTimeout((function(){l=null,o(e.resolved)&&o(e.error)&&(e.loading=!0,c(!1))}),y.delay||200)),r(y.timeout)&&(m=setTimeout((function(){m=null,o(e.resolved)&&h(null)}),y.timeout)))),i=!1,e.loading?e.loadingComp:e.resolved}}(u=e,c)))return function(e,n,t,a,i){var o=ye();return o.asyncFactory=e,o.asyncMeta={data:n,context:t,children:a,tag:i},o}(u,n,t,l,m);n=n||{},ea(e),r(n.model)&&function(e,n){var t=e.model&&e.model.prop||"value",a=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[t]=n.model.value;var o=n.on||(n.on={}),s=o[a],l=n.model.callback;r(s)?(i(s)?-1===s.indexOf(l):s!==l)&&(o[a]=[l].concat(s)):o[a]=l}(e.options,n);var h=function(e,n,t){var a=n.options.props;if(!o(a)){var i={},s=e.attrs,l=e.props;if(r(s)||r(l))for(var m in a){var d=M(m);tn(i,l,m,d,!0)||tn(i,s,m,d,!1)}return i}}(n,e);if(s(e.options.functional))return function(e,n,t,o,s){var l=e.options,m={},d=l.props;if(r(d))for(var c in d)m[c]=Et(c,d,n||a);else r(t.attrs)&&qt(m,t.attrs),r(t.props)&&qt(m,t.props);var u=new kt(t,m,s,o,e),h=l.render.call(null,u._c,u);if(h instanceof he)return xt(h,t,u.parent,l,u);if(i(h)){for(var y=an(h)||[],w=new Array(y.length),z=0;z<y.length;z++)w[z]=xt(y[z],t,u.parent,l,u);return w}}(e,h,n,t,l);var y=n.on;if(n.on=n.nativeOn,s(e.options.abstract)){var z=n.slot;n={},z&&(n.slot=z)}!function(e){for(var n=e.hook||(e.hook={}),t=0;t<Zt.length;t++){var a=Zt[t],i=n[a],o=Nt[a];i===o||i&&i._merged||(n[a]=i?It(o,i):o)}}(n);var j=_t(e.options)||m;return new he("vue-component-".concat(e.cid).concat(j?"-".concat(j):""),n,void 0,void 0,void 0,t,{Ctor:e,propsData:h,listeners:y,tag:m,children:l},u)}}}function It(e,n){var t=function(t,a){e(t,a),n(t,a)};return t._merged=!0,t}var Yt=W,Tt=Q.optionMergeStrategies;function At(e,n,t){if(void 0===t&&(t=!0),!n)return e;for(var a,i,o,r=de?Reflect.ownKeys(n):Object.keys(n),s=0;s<r.length;s++)"__ob__"!==(a=r[s])&&(i=e[a],o=n[a],t&&k(e,a)?i!==o&&u(i)&&u(o)&&At(i,o):Ae(e,a,o));return e}function Wt(e,n,t){return t?function(){var a=m(n)?n.call(t,t):n,i=m(e)?e.call(t,t):e;return a?At(a,i):i}:n?e?function(){return At(m(n)?n.call(this,this):n,m(e)?e.call(this,this):e)}:n:e}function Ot(e,n){var t=n?e?e.concat(n):i(n)?n:[n]:e;return t?function(e){for(var n=[],t=0;t<e.length;t++)-1===n.indexOf(e[t])&&n.push(e[t]);return n}(t):t}function Dt(e,n,t,a){var i=Object.create(e||null);return n?T(i,n):i}Tt.data=function(e,n,t){return t?Wt(e,n,t):n&&"function"!=typeof n?e:Wt(e,n)},F.forEach((function(e){Tt[e]=Ot})),G.forEach((function(e){Tt[e+"s"]=Dt})),Tt.watch=function(e,n,t,a){if(e===ae&&(e=void 0),n===ae&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var o={};for(var r in T(o,e),n){var s=o[r],l=n[r];s&&!i(s)&&(s=[s]),o[r]=s?s.concat(l):i(l)?l:[l]}return o},Tt.props=Tt.methods=Tt.inject=Tt.computed=function(e,n,t,a){if(!e)return n;var i=Object.create(null);return T(i,e),n&&T(i,n),i},Tt.provide=function(e,n){return e?function(){var t=Object.create(null);return At(t,m(e)?e.call(this):e),n&&At(t,m(n)?n.call(this):n,!1),t}:n};var Rt=function(e,n){return void 0===n?e:n};function Ut(e,n,t){if(m(n)&&(n=n.options),function(e,n){var t=e.props;if(t){var a,o,r={};if(i(t))for(a=t.length;a--;)"string"==typeof(o=t[a])&&(r[_(o)]={type:null});else if(u(t))for(var s in t)o=t[s],r[_(s)]=u(o)?o:{type:o};else 0;e.props=r}}(n),function(e,n){var t=e.inject;if(t){var a=e.inject={};if(i(t))for(var o=0;o<t.length;o++)a[t[o]]={from:t[o]};else if(u(t))for(var r in t){var s=t[r];a[r]=u(s)?T({from:r},s):{from:s}}else 0}}(n),function(e){var n=e.directives;if(n)for(var t in n){var a=n[t];m(a)&&(n[t]={bind:a,update:a})}}(n),!n._base&&(n.extends&&(e=Ut(e,n.extends,t)),n.mixins))for(var a=0,o=n.mixins.length;a<o;a++)e=Ut(e,n.mixins[a],t);var r,s={};for(r in e)l(r);for(r in n)k(e,r)||l(r);function l(a){var i=Tt[a]||Rt;s[a]=i(e[a],n[a],t,a)}return s}function Vt(e,n,t,a){if("string"==typeof t){var i=e[n];if(k(i,t))return i[t];var o=_(t);if(k(i,o))return i[o];var r=N(o);return k(i,r)?i[r]:i[t]||i[o]||i[r]}}function Et(e,n,t,a){var i=n[e],o=!k(t,e),r=t[e],s=Jt(Boolean,i.type);if(s>-1)if(o&&!k(i,"default"))r=!1;else if(""===r||r===M(e)){var l=Jt(String,i.type);(l<0||s<l)&&(r=!0)}if(void 0===r){r=function(e,n,t){if(!k(n,"default"))return;var a=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return m(a)&&"Function"!==Ft(n.type)?a.call(e):a}(a,i,e);var d=Ne;Ze(!0),Ye(r),Ze(d)}return r}var Gt=/^\s*function (\w+)/;function Ft(e){var n=e&&e.toString().match(Gt);return n?n[1]:""}function Qt(e,n){return Ft(e)===Ft(n)}function Jt(e,n){if(!i(n))return Qt(n,e)?0:-1;for(var t=0,a=n.length;t<a;t++)if(Qt(n[t],e))return t;return-1}var St={enumerable:!0,configurable:!0,get:W,set:W};function Xt(e,n,t){St.get=function(){return this[n][t]},St.set=function(e){this[n][t]=e},Object.defineProperty(e,t,St)}function Bt(e){var n=e.$options;if(n.props&&function(e,n){var t=e.$options.propsData||{},a=e._props=De({}),i=e.$options._propKeys=[];e.$parent&&Ze(!1);var o=function(o){i.push(o);var r=Et(o,n,t,e);Te(a,o,r,void 0,!0),o in e||Xt(e,"_props",o)};for(var r in n)o(r);Ze(!0)}(e,n.props),function(e){var n=e.$options,t=n.setup;if(t){var a=e._setupContext=Nn(e);ue(e),fe();var i=Dn(t,null,[e._props||De({}),a],e,"setup");if(ve(),ue(),m(i))n.render=i;else if(d(i))if(e._setupState=i,i.__sfc){var o=e._setupProxy={};for(var r in i)"__sfc"!==r&&Fe(o,i,r)}else for(var r in i)S(r)||Fe(e,i,r);else 0}}(e),n.methods&&function(e,n){e.$options.props;for(var t in n)e[t]="function"!=typeof n[t]?W:I(n[t],e)}(e,n.methods),n.data)!function(e){var n=e.$options.data;u(n=e._data=m(n)?function(e,n){fe();try{return e.call(n,n)}catch(e){return On(e,n,"data()"),{}}finally{ve()}}(n,e):n||{})||(n={});var t=Object.keys(n),a=e.$options.props,i=(e.$options.methods,t.length);for(;i--;){var o=t[i];0,a&&k(a,o)||S(o)||Xt(e,"_data",o)}var r=Ye(n);r&&r.vmCount++}(e);else{var t=Ye(e._data={});t&&t.vmCount++}n.computed&&function(e,n){var t=e._computedWatchers=Object.create(null),a=re();for(var i in n){var o=n[i],r=m(o)?o:o.get;0,a||(t[i]=new et(e,r||W,W,Ct)),i in e||Lt(e,i,o)}}(e,n.computed),n.watch&&n.watch!==ae&&function(e,n){for(var t in n){var a=n[t];if(i(a))for(var o=0;o<a.length;o++)Kt(e,t,a[o]);else Kt(e,t,a)}}(e,n.watch)}var Ct={lazy:!0};function Lt(e,n,t){var a=!re();m(t)?(St.get=a?Ht(n):Pt(t),St.set=W):(St.get=t.get?a&&!1!==t.cache?Ht(n):Pt(t.get):W,St.set=t.set||W),Object.defineProperty(e,n,St)}function Ht(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),ge.target&&n.depend(),n.value}}function Pt(e){return function(){return e.call(this,this)}}function Kt(e,n,t,a){return u(t)&&(a=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(n,t,a)}var $t=0;function ea(e){var n=e.options;if(e.super){var t=ea(e.super);if(t!==e.superOptions){e.superOptions=t;var a=function(e){var n,t=e.options,a=e.sealedOptions;for(var i in t)t[i]!==a[i]&&(n||(n={}),n[i]=t[i]);return n}(e);a&&T(e.extendOptions,a),(n=e.options=Ut(t,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function na(e){this._init(e)}function ta(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var t=this,a=t.cid,i=e._Ctor||(e._Ctor={});if(i[a])return i[a];var o=_t(e)||_t(t.options);var r=function(e){this._init(e)};return(r.prototype=Object.create(t.prototype)).constructor=r,r.cid=n++,r.options=Ut(t.options,e),r.super=t,r.options.props&&function(e){var n=e.options.props;for(var t in n)Xt(e.prototype,"_props",t)}(r),r.options.computed&&function(e){var n=e.options.computed;for(var t in n)Lt(e.prototype,t,n[t])}(r),r.extend=t.extend,r.mixin=t.mixin,r.use=t.use,G.forEach((function(e){r[e]=t[e]})),o&&(r.options.components[o]=r),r.superOptions=t.options,r.extendOptions=e,r.sealedOptions=T({},r.options),i[a]=r,r}}function aa(e){return e&&(_t(e.Ctor.options)||e.tag)}function ia(e,n){return i(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!h(e)&&e.test(n)}function oa(e,n){var t=e.cache,a=e.keys,i=e._vnode,o=e.$vnode;for(var r in t){var s=t[r];if(s){var l=s.name;l&&!n(l)&&ra(t,r,a,i)}}o.componentOptions.children=void 0}function ra(e,n,t,a){var i=e[n];!i||a&&i.tag===a.tag||i.componentInstance.$destroy(),e[n]=null,f(t,n)}na.prototype._init=function(e){var n=this;n._uid=$t++,n._isVue=!0,n.__v_skip=!0,n._scope=new He(!0),n._scope.parent=void 0,n._scope._vm=!0,e&&e._isComponent?function(e,n){var t=e.$options=Object.create(e.constructor.options),a=n._parentVnode;t.parent=n.parent,t._parentVnode=a;var i=a.componentOptions;t.propsData=i.propsData,t._parentListeners=i.listeners,t._renderChildren=i.children,t._componentTag=i.tag,n.render&&(t.render=n.render,t.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=Ut(ea(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,t=n.parent;if(t&&!n.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._provided=t?t._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&it(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,t=e.$vnode=n._parentVnode,i=t&&t.context;e.$slots=fn(n._renderChildren,i),e.$scopedSlots=t?xn(e.$parent,t.data.scopedSlots,e.$slots):a,e._c=function(n,t,a,i){return Wn(e,n,t,a,i,!1)},e.$createElement=function(n,t,a,i){return Wn(e,n,t,a,i,!0)};var o=t&&t.data;Te(e,"$attrs",o&&o.attrs||a,null,!0),Te(e,"$listeners",n._parentListeners||a,null,!0)}(n),mt(n,"beforeCreate",void 0,!1),function(e){var n=vt(e.$options.inject,e);n&&(Ze(!1),Object.keys(n).forEach((function(t){Te(e,t,n[t])})),Ze(!0))}(n),Bt(n),function(e){var n=e.$options.provide;if(n){var t=m(n)?n.call(e):n;if(!d(t))return;for(var a=Pe(e),i=de?Reflect.ownKeys(t):Object.keys(t),o=0;o<i.length;o++){var r=i[o];Object.defineProperty(a,r,Object.getOwnPropertyDescriptor(t,r))}}}(n),mt(n,"created"),n.$options.el&&n.$mount(n.$options.el)},function(e){var n={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=Ae,e.prototype.$delete=We,e.prototype.$watch=function(e,n,t){if(u(n))return Kt(this,e,n,t);(t=t||{}).user=!0;var a=new et(this,e,n,t);if(t.immediate){var i='callback for immediate watcher "'.concat(a.expression,'"');fe(),Dn(n,this,[a.value],this,i),ve()}return function(){a.teardown()}}}(na),function(e){var n=/^hook:/;e.prototype.$on=function(e,t){var a=this;if(i(e))for(var o=0,r=e.length;o<r;o++)a.$on(e[o],t);else(a._events[e]||(a._events[e]=[])).push(t),n.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,n){var t=this;function a(){t.$off(e,a),n.apply(t,arguments)}return a.fn=n,t.$on(e,a),t},e.prototype.$off=function(e,n){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(i(e)){for(var a=0,o=e.length;a<o;a++)t.$off(e[a],n);return t}var r,s=t._events[e];if(!s)return t;if(!n)return t._events[e]=null,t;for(var l=s.length;l--;)if((r=s[l])===n||r.fn===n){s.splice(l,1);break}return t},e.prototype.$emit=function(e){var n=this,t=n._events[e];if(t){t=t.length>1?Y(t):t;for(var a=Y(arguments,1),i='event handler for "'.concat(e,'"'),o=0,r=t.length;o<r;o++)Dn(t[o],n,a,n,i)}return n}}(na),function(e){e.prototype._update=function(e,n){var t=this,a=t.$el,i=t._vnode,o=rt(t);t._vnode=e,t.$el=i?t.__patch__(i,e):t.__patch__(t.$el,e,n,!1),o(),a&&(a.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var r=t;r&&r.$vnode&&r.$parent&&r.$vnode===r.$parent._vnode;)r.$parent.$el=r.$el,r=r.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){mt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||f(n.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),mt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(na),function(e){bn(e.prototype),e.prototype.$nextTick=function(e){return Cn(e,this)},e.prototype._render=function(){var e=this,n=e.$options,t=n.render,a=n._parentVnode;a&&e._isMounted&&(e.$scopedSlots=xn(e.$parent,a.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&In(e._slotsProxy,e.$scopedSlots)),e.$vnode=a;var o,r=ce,s=Yn;try{ue(e),Yn=e,o=t.call(e._renderProxy,e.$createElement)}catch(n){On(n,e,"render"),o=e._vnode}finally{Yn=s,ue(r)}return i(o)&&1===o.length&&(o=o[0]),o instanceof he||(o=ye()),o.parent=a,o}}(na);var sa=[String,RegExp,Array],la={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:sa,exclude:sa,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,n=this.keys,t=this.vnodeToCache,a=this.keyToCache;if(t){var i=t.tag,o=t.componentInstance,r=t.componentOptions;e[a]={name:aa(r),tag:i,componentInstance:o},n.push(a),this.max&&n.length>parseInt(this.max)&&ra(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)ra(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(n){oa(e,(function(e){return ia(n,e)}))})),this.$watch("exclude",(function(n){oa(e,(function(e){return!ia(n,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,n=An(e),t=n&&n.componentOptions;if(t){var a=aa(t),i=this.include,o=this.exclude;if(i&&(!a||!ia(i,a))||o&&a&&ia(o,a))return n;var r=this.cache,s=this.keys,l=null==n.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):n.key;r[l]?(n.componentInstance=r[l].componentInstance,f(s,l),s.push(l)):(this.vnodeToCache=n,this.keyToCache=l),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return Q}};Object.defineProperty(e,"config",n),e.util={warn:Yt,extend:T,mergeOptions:Ut,defineReactive:Te},e.set=Ae,e.delete=We,e.nextTick=Cn,e.observable=function(e){return Ye(e),e},e.options=Object.create(null),G.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,T(e.options.components,la),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var t=Y(arguments,1);return t.unshift(this),m(e.install)?e.install.apply(e,t):m(e)&&e.apply(null,t),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Ut(this.options,e),this}}(e),ta(e),function(e){G.forEach((function(n){e[n]=function(e,t){return t?("component"===n&&u(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===n&&m(t)&&(t={bind:t,update:t}),this.options[n+"s"][e]=t,t):this.options[n+"s"][e]}}))}(e)}(na),Object.defineProperty(na.prototype,"$isServer",{get:re}),Object.defineProperty(na.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(na,"FunctionalRenderContext",{value:kt}),na.version="2.7.16";var ma=g("style,class"),da=g("input,textarea,option,select,progress"),ca=g("contenteditable,draggable,spellcheck"),ua=g("events,caret,typing,plaintext-only"),ha=g("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ya="http://www.w3.org/1999/xlink",wa=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},za=function(e){return wa(e)?e.slice(6,e.length):""},ja=function(e){return null==e||!1===e};function pa(e){for(var n=e.data,t=e,a=e;r(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(n=ga(a.data,n));for(;r(t=t.parent);)t&&t.data&&(n=ga(n,t.data));return function(e,n){if(r(e)||r(n))return ba(e,fa(n));return""}(n.staticClass,n.class)}function ga(e,n){return{staticClass:ba(e.staticClass,n.staticClass),class:r(e.class)?[e.class,n.class]:n.class}}function ba(e,n){return e?n?e+" "+n:e:n||""}function fa(e){return Array.isArray(e)?function(e){for(var n,t="",a=0,i=e.length;a<i;a++)r(n=fa(e[a]))&&""!==n&&(t&&(t+=" "),t+=n);return t}(e):d(e)?function(e){var n="";for(var t in e)e[t]&&(n&&(n+=" "),n+=t);return n}(e):"string"==typeof e?e:""}var va={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ka=g("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),xa=g("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),qa=function(e){return ka(e)||xa(e)};var _a=Object.create(null);var Na=g("text,number,password,search,email,tel,url");var Za=Object.freeze({__proto__:null,createElement:function(e,n){var t=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,n){return document.createElementNS(va[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,t){e.insertBefore(n,t)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),Ma={create:function(e,n){Ia(n)},update:function(e,n){e.data.ref!==n.data.ref&&(Ia(e,!0),Ia(n))},destroy:function(e){Ia(e,!0)}};function Ia(e,n){var t=e.data.ref;if(r(t)){var a=e.context,o=e.componentInstance||e.elm,s=n?null:o,l=n?void 0:o;if(m(t))Dn(t,a,[s],a,"template ref function");else{var d=e.data.refInFor,c="string"==typeof t||"number"==typeof t,u=Ge(t),h=a.$refs;if(c||u)if(d){var y=c?h[t]:t.value;n?i(y)&&f(y,o):i(y)?y.includes(o)||y.push(o):c?(h[t]=[o],Ya(a,t,h[t])):t.value=[o]}else if(c){if(n&&h[t]!==o)return;h[t]=l,Ya(a,t,s)}else if(u){if(n&&t.value!==o)return;t.value=s}else 0}}}function Ya(e,n,t){var a=e._setupState;a&&k(a,n)&&(Ge(a[n])?a[n].value=t:a[n]=t)}var Ta=new he("",{},[]),Aa=["create","activate","update","remove","destroy"];function Wa(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&r(e.data)===r(n.data)&&function(e,n){if("input"!==e.tag)return!0;var t,a=r(t=e.data)&&r(t=t.attrs)&&t.type,i=r(t=n.data)&&r(t=t.attrs)&&t.type;return a===i||Na(a)&&Na(i)}(e,n)||s(e.isAsyncPlaceholder)&&o(n.asyncFactory.error))}function Oa(e,n,t){var a,i,o={};for(a=n;a<=t;++a)r(i=e[a].key)&&(o[i]=a);return o}var Da={create:Ra,update:Ra,destroy:function(e){Ra(e,Ta)}};function Ra(e,n){(e.data.directives||n.data.directives)&&function(e,n){var t,a,i,o=e===Ta,r=n===Ta,s=Va(e.data.directives,e.context),l=Va(n.data.directives,n.context),m=[],d=[];for(t in l)a=s[t],i=l[t],a?(i.oldValue=a.value,i.oldArg=a.arg,Ga(i,"update",n,e),i.def&&i.def.componentUpdated&&d.push(i)):(Ga(i,"bind",n,e),i.def&&i.def.inserted&&m.push(i));if(m.length){var c=function(){for(var t=0;t<m.length;t++)Ga(m[t],"inserted",n,e)};o?nn(n,"insert",c):c()}d.length&&nn(n,"postpatch",(function(){for(var t=0;t<d.length;t++)Ga(d[t],"componentUpdated",n,e)}));if(!o)for(t in s)l[t]||Ga(s[t],"unbind",e,e,r)}(e,n)}var Ua=Object.create(null);function Va(e,n){var t,a,i=Object.create(null);if(!e)return i;for(t=0;t<e.length;t++){if((a=e[t]).modifiers||(a.modifiers=Ua),i[Ea(a)]=a,n._setupState&&n._setupState.__sfc){var o=a.def||Vt(n,"_setupState","v-"+a.name);a.def="function"==typeof o?{bind:o,update:o}:o}a.def=a.def||Vt(n.$options,"directives",a.name)}return i}function Ea(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Ga(e,n,t,a,i){var o=e.def&&e.def[n];if(o)try{o(t.elm,e,t,a,i)}catch(a){On(a,t.context,"directive ".concat(e.name," ").concat(n," hook"))}}var Fa=[Ma,Da];function Qa(e,n){var t=n.componentOptions;if(!(r(t)&&!1===t.Ctor.options.inheritAttrs||o(e.data.attrs)&&o(n.data.attrs))){var a,i,l=n.elm,m=e.data.attrs||{},d=n.data.attrs||{};for(a in(r(d.__ob__)||s(d._v_attr_proxy))&&(d=n.data.attrs=T({},d)),d)i=d[a],m[a]!==i&&Ja(l,a,i,n.data.pre);for(a in(P||$)&&d.value!==m.value&&Ja(l,"value",d.value),m)o(d[a])&&(wa(a)?l.removeAttributeNS(ya,za(a)):ca(a)||l.removeAttribute(a))}}function Ja(e,n,t,a){a||e.tagName.indexOf("-")>-1?Sa(e,n,t):ha(n)?ja(t)?e.removeAttribute(n):(t="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,t)):ca(n)?e.setAttribute(n,function(e,n){return ja(n)||"false"===n?"false":"contenteditable"===e&&ua(n)?n:"true"}(n,t)):wa(n)?ja(t)?e.removeAttributeNS(ya,za(n)):e.setAttributeNS(ya,n,t):Sa(e,n,t)}function Sa(e,n,t){if(ja(t))e.removeAttribute(n);else{if(P&&!K&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==t&&!e.__ieph){var a=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(n,t)}}var Xa={create:Qa,update:Qa};function Ba(e,n){var t=n.elm,a=n.data,i=e.data;if(!(o(a.staticClass)&&o(a.class)&&(o(i)||o(i.staticClass)&&o(i.class)))){var s=pa(n),l=t._transitionClasses;r(l)&&(s=ba(s,fa(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Ca,La={create:Ba,update:Ba};function Ha(e,n,t){var a=Ca;return function i(){var o=n.apply(null,arguments);null!==o&&$a(e,i,t,a)}}var Pa=En&&!(te&&Number(te[1])<=53);function Ka(e,n,t,a){if(Pa){var i=zt,o=n;n=o._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return o.apply(this,arguments)}}Ca.addEventListener(e,n,ie?{capture:t,passive:a}:t)}function $a(e,n,t,a){(a||Ca).removeEventListener(e,n._wrapper||n,t)}function ei(e,n){if(!o(e.data.on)||!o(n.data.on)){var t=n.data.on||{},a=e.data.on||{};Ca=n.elm||e.elm,function(e){if(r(e.__r)){var n=P?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}r(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),en(t,a,Ka,$a,Ha,n.context),Ca=void 0}}var ni,ti={create:ei,update:ei,destroy:function(e){return ei(e,Ta)}};function ai(e,n){if(!o(e.data.domProps)||!o(n.data.domProps)){var t,a,i=n.elm,l=e.data.domProps||{},m=n.data.domProps||{};for(t in(r(m.__ob__)||s(m._v_attr_proxy))&&(m=n.data.domProps=T({},m)),l)t in m||(i[t]="");for(t in m){if(a=m[t],"textContent"===t||"innerHTML"===t){if(n.children&&(n.children.length=0),a===l[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=a;var d=o(a)?"":String(a);ii(i,d)&&(i.value=d)}else if("innerHTML"===t&&xa(i.tagName)&&o(i.innerHTML)){(ni=ni||document.createElement("div")).innerHTML="<svg>".concat(a,"</svg>");for(var c=ni.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;c.firstChild;)i.appendChild(c.firstChild)}else if(a!==l[t])try{i[t]=a}catch(e){}}}}function ii(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==n}(e,n)||function(e,n){var t=e.value,a=e._vModifiers;if(r(a)){if(a.number)return p(t)!==p(n);if(a.trim)return t.trim()!==n.trim()}return t!==n}(e,n))}var oi={create:ai,update:ai},ri=x((function(e){var n={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(t);a.length>1&&(n[a[0].trim()]=a[1].trim())}})),n}));function si(e){var n=li(e.style);return e.staticStyle?T(e.staticStyle,n):n}function li(e){return Array.isArray(e)?A(e):"string"==typeof e?ri(e):e}var mi,di=/^--/,ci=/\s*!important$/,ui=function(e,n,t){if(di.test(n))e.style.setProperty(n,t);else if(ci.test(t))e.style.setProperty(M(n),t.replace(ci,""),"important");else{var a=yi(n);if(Array.isArray(t))for(var i=0,o=t.length;i<o;i++)e.style[a]=t[i];else e.style[a]=t}},hi=["Webkit","Moz","ms"],yi=x((function(e){if(mi=mi||document.createElement("div").style,"filter"!==(e=_(e))&&e in mi)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<hi.length;t++){var a=hi[t]+n;if(a in mi)return a}}));function wi(e,n){var t=n.data,a=e.data;if(!(o(t.staticStyle)&&o(t.style)&&o(a.staticStyle)&&o(a.style))){var i,s,l=n.elm,m=a.staticStyle,d=a.normalizedStyle||a.style||{},c=m||d,u=li(n.data.style)||{};n.data.normalizedStyle=r(u.__ob__)?T({},u):u;var h=function(e,n){var t,a={};if(n)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(t=si(i.data))&&T(a,t);(t=si(e.data))&&T(a,t);for(var o=e;o=o.parent;)o.data&&(t=si(o.data))&&T(a,t);return a}(n,!0);for(s in c)o(h[s])&&ui(l,s,"");for(s in h)i=h[s],ui(l,s,null==i?"":i)}}var zi={create:wi,update:wi},ji=/\s+/;function pi(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(ji).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var t=" ".concat(e.getAttribute("class")||""," ");t.indexOf(" "+n+" ")<0&&e.setAttribute("class",(t+n).trim())}}function gi(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(ji).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var t=" ".concat(e.getAttribute("class")||""," "),a=" "+n+" ";t.indexOf(a)>=0;)t=t.replace(a," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function bi(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&T(n,fi(e.name||"v")),T(n,e),n}return"string"==typeof e?fi(e):void 0}}var fi=x((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),vi=L&&!K,ki="transition",xi="transitionend",qi="animation",_i="animationend";vi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(ki="WebkitTransition",xi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(qi="WebkitAnimation",_i="webkitAnimationEnd"));var Ni=L?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Zi(e){Ni((function(){Ni(e)}))}function Mi(e,n){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(n)<0&&(t.push(n),pi(e,n))}function Ii(e,n){e._transitionClasses&&f(e._transitionClasses,n),gi(e,n)}function Yi(e,n,t){var a=Ai(e,n),i=a.type,o=a.timeout,r=a.propCount;if(!i)return t();var s="transition"===i?xi:_i,l=0,m=function(){e.removeEventListener(s,d),t()},d=function(n){n.target===e&&++l>=r&&m()};setTimeout((function(){l<r&&m()}),o+1),e.addEventListener(s,d)}var Ti=/\b(transform|all)(,|$)/;function Ai(e,n){var t,a=window.getComputedStyle(e),i=(a[ki+"Delay"]||"").split(", "),o=(a[ki+"Duration"]||"").split(", "),r=Wi(i,o),s=(a[qi+"Delay"]||"").split(", "),l=(a[qi+"Duration"]||"").split(", "),m=Wi(s,l),d=0,c=0;return"transition"===n?r>0&&(t="transition",d=r,c=o.length):"animation"===n?m>0&&(t="animation",d=m,c=l.length):c=(t=(d=Math.max(r,m))>0?r>m?"transition":"animation":null)?"transition"===t?o.length:l.length:0,{type:t,timeout:d,propCount:c,hasTransform:"transition"===t&&Ti.test(a[ki+"Property"])}}function Wi(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,t){return Oi(n)+Oi(e[t])})))}function Oi(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Di(e,n){var t=e.elm;r(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var a=bi(e.data.transition);if(!o(a)&&!r(t._enterCb)&&1===t.nodeType){for(var i=a.css,s=a.type,l=a.enterClass,c=a.enterToClass,u=a.enterActiveClass,h=a.appearClass,y=a.appearToClass,w=a.appearActiveClass,z=a.beforeEnter,j=a.enter,g=a.afterEnter,b=a.enterCancelled,f=a.beforeAppear,v=a.appear,k=a.afterAppear,x=a.appearCancelled,q=a.duration,_=ot,N=ot.$vnode;N&&N.parent;)_=N.context,N=N.parent;var Z=!_._isMounted||!e.isRootInsert;if(!Z||v||""===v){var M=Z&&h?h:l,I=Z&&w?w:u,Y=Z&&y?y:c,T=Z&&f||z,A=Z&&m(v)?v:j,W=Z&&k||g,O=Z&&x||b,D=p(d(q)?q.enter:q);0;var R=!1!==i&&!K,U=Vi(A),E=t._enterCb=V((function(){R&&(Ii(t,Y),Ii(t,I)),E.cancelled?(R&&Ii(t,M),O&&O(t)):W&&W(t),t._enterCb=null}));e.data.show||nn(e,"insert",(function(){var n=t.parentNode,a=n&&n._pending&&n._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),A&&A(t,E)})),T&&T(t),R&&(Mi(t,M),Mi(t,I),Zi((function(){Ii(t,M),E.cancelled||(Mi(t,Y),U||(Ui(D)?setTimeout(E,D):Yi(t,s,E)))}))),e.data.show&&(n&&n(),A&&A(t,E)),R||U||E()}}}function Ri(e,n){var t=e.elm;r(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var a=bi(e.data.transition);if(o(a)||1!==t.nodeType)return n();if(!r(t._leaveCb)){var i=a.css,s=a.type,l=a.leaveClass,m=a.leaveToClass,c=a.leaveActiveClass,u=a.beforeLeave,h=a.leave,y=a.afterLeave,w=a.leaveCancelled,z=a.delayLeave,j=a.duration,g=!1!==i&&!K,b=Vi(h),f=p(d(j)?j.leave:j);0;var v=t._leaveCb=V((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),g&&(Ii(t,m),Ii(t,c)),v.cancelled?(g&&Ii(t,l),w&&w(t)):(n(),y&&y(t)),t._leaveCb=null}));z?z(k):k()}function k(){v.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),u&&u(t),g&&(Mi(t,l),Mi(t,c),Zi((function(){Ii(t,l),v.cancelled||(Mi(t,m),b||(Ui(f)?setTimeout(v,f):Yi(t,s,v)))}))),h&&h(t,v),g||b||v())}}function Ui(e){return"number"==typeof e&&!isNaN(e)}function Vi(e){if(o(e))return!1;var n=e.fns;return r(n)?Vi(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function Ei(e,n){!0!==n.data.show&&Di(n)}var Gi=function(e){var n,t,a={},m=e.modules,d=e.nodeOps;for(n=0;n<Aa.length;++n)for(a[Aa[n]]=[],t=0;t<m.length;++t)r(m[t][Aa[n]])&&a[Aa[n]].push(m[t][Aa[n]]);function c(e){var n=d.parentNode(e);r(n)&&d.removeChild(n,e)}function u(e,n,t,i,o,l,m){if(r(e.elm)&&r(l)&&(e=l[m]=ze(e)),e.isRootInsert=!o,!function(e,n,t,i){var o=e.data;if(r(o)){var l=r(e.componentInstance)&&o.keepAlive;if(r(o=o.hook)&&r(o=o.init)&&o(e,!1),r(e.componentInstance))return h(e,n),y(t,e.elm,i),s(l)&&function(e,n,t,i){var o,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,r(o=s.data)&&r(o=o.transition)){for(o=0;o<a.activate.length;++o)a.activate[o](Ta,s);n.push(s);break}y(t,e.elm,i)}(e,n,t,i),!0}}(e,n,t,i)){var c=e.data,u=e.children,z=e.tag;r(z)?(e.elm=e.ns?d.createElementNS(e.ns,z):d.createElement(z,e),p(e),w(e,u,n),r(c)&&j(e,n),y(t,e.elm,i)):s(e.isComment)?(e.elm=d.createComment(e.text),y(t,e.elm,i)):(e.elm=d.createTextNode(e.text),y(t,e.elm,i))}}function h(e,n){r(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,z(e)?(j(e,n),p(e)):(Ia(e),n.push(e))}function y(e,n,t){r(e)&&(r(t)?d.parentNode(t)===e&&d.insertBefore(e,n,t):d.appendChild(e,n))}function w(e,n,t){if(i(n)){0;for(var a=0;a<n.length;++a)u(n[a],t,e.elm,null,!0,n,a)}else l(e.text)&&d.appendChild(e.elm,d.createTextNode(String(e.text)))}function z(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return r(e.tag)}function j(e,t){for(var i=0;i<a.create.length;++i)a.create[i](Ta,e);r(n=e.data.hook)&&(r(n.create)&&n.create(Ta,e),r(n.insert)&&t.push(e))}function p(e){var n;if(r(n=e.fnScopeId))d.setStyleScope(e.elm,n);else for(var t=e;t;)r(n=t.context)&&r(n=n.$options._scopeId)&&d.setStyleScope(e.elm,n),t=t.parent;r(n=ot)&&n!==e.context&&n!==e.fnContext&&r(n=n.$options._scopeId)&&d.setStyleScope(e.elm,n)}function b(e,n,t,a,i,o){for(;a<=i;++a)u(t[a],o,e,n,!1,t,a)}function f(e){var n,t,i=e.data;if(r(i))for(r(n=i.hook)&&r(n=n.destroy)&&n(e),n=0;n<a.destroy.length;++n)a.destroy[n](e);if(r(n=e.children))for(t=0;t<e.children.length;++t)f(e.children[t])}function v(e,n,t){for(;n<=t;++n){var a=e[n];r(a)&&(r(a.tag)?(k(a),f(a)):c(a.elm))}}function k(e,n){if(r(n)||r(e.data)){var t,i=a.remove.length+1;for(r(n)?n.listeners+=i:n=function(e,n){function t(){0==--t.listeners&&c(e)}return t.listeners=n,t}(e.elm,i),r(t=e.componentInstance)&&r(t=t._vnode)&&r(t.data)&&k(t,n),t=0;t<a.remove.length;++t)a.remove[t](e,n);r(t=e.data.hook)&&r(t=t.remove)?t(e,n):n()}else c(e.elm)}function x(e,n,t,a){for(var i=t;i<a;i++){var o=n[i];if(r(o)&&Wa(e,o))return i}}function q(e,n,t,i,l,m){if(e!==n){r(n.elm)&&r(i)&&(n=i[l]=ze(n));var c=n.elm=e.elm;if(s(e.isAsyncPlaceholder))r(n.asyncFactory.resolved)?Z(e.elm,n,t):n.isAsyncPlaceholder=!0;else if(s(n.isStatic)&&s(e.isStatic)&&n.key===e.key&&(s(n.isCloned)||s(n.isOnce)))n.componentInstance=e.componentInstance;else{var h,y=n.data;r(y)&&r(h=y.hook)&&r(h=h.prepatch)&&h(e,n);var w=e.children,j=n.children;if(r(y)&&z(n)){for(h=0;h<a.update.length;++h)a.update[h](e,n);r(h=y.hook)&&r(h=h.update)&&h(e,n)}o(n.text)?r(w)&&r(j)?w!==j&&function(e,n,t,a,i){var s,l,m,c=0,h=0,y=n.length-1,w=n[0],z=n[y],j=t.length-1,p=t[0],g=t[j],f=!i;for(0;c<=y&&h<=j;)o(w)?w=n[++c]:o(z)?z=n[--y]:Wa(w,p)?(q(w,p,a,t,h),w=n[++c],p=t[++h]):Wa(z,g)?(q(z,g,a,t,j),z=n[--y],g=t[--j]):Wa(w,g)?(q(w,g,a,t,j),f&&d.insertBefore(e,w.elm,d.nextSibling(z.elm)),w=n[++c],g=t[--j]):Wa(z,p)?(q(z,p,a,t,h),f&&d.insertBefore(e,z.elm,w.elm),z=n[--y],p=t[++h]):(o(s)&&(s=Oa(n,c,y)),o(l=r(p.key)?s[p.key]:x(p,n,c,y))?u(p,a,e,w.elm,!1,t,h):Wa(m=n[l],p)?(q(m,p,a,t,h),n[l]=void 0,f&&d.insertBefore(e,m.elm,w.elm)):u(p,a,e,w.elm,!1,t,h),p=t[++h]);c>y?b(e,o(t[j+1])?null:t[j+1].elm,t,h,j,a):h>j&&v(n,c,y)}(c,w,j,t,m):r(j)?(r(e.text)&&d.setTextContent(c,""),b(c,null,j,0,j.length-1,t)):r(w)?v(w,0,w.length-1):r(e.text)&&d.setTextContent(c,""):e.text!==n.text&&d.setTextContent(c,n.text),r(y)&&r(h=y.hook)&&r(h=h.postpatch)&&h(e,n)}}}function _(e,n,t){if(s(t)&&r(e.parent))e.parent.data.pendingInsert=n;else for(var a=0;a<n.length;++a)n[a].data.hook.insert(n[a])}var N=g("attrs,class,staticClass,staticStyle,key");function Z(e,n,t,a){var i,o=n.tag,l=n.data,m=n.children;if(a=a||l&&l.pre,n.elm=e,s(n.isComment)&&r(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(r(l)&&(r(i=l.hook)&&r(i=i.init)&&i(n,!0),r(i=n.componentInstance)))return h(n,t),!0;if(r(o)){if(r(m))if(e.hasChildNodes())if(r(i=l)&&r(i=i.domProps)&&r(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var d=!0,c=e.firstChild,u=0;u<m.length;u++){if(!c||!Z(c,m[u],t,a)){d=!1;break}c=c.nextSibling}if(!d||c)return!1}else w(n,m,t);if(r(l)){var y=!1;for(var z in l)if(!N(z)){y=!0,j(n,t);break}!y&&l.class&&Pn(l.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,t,i){if(!o(n)){var l,m=!1,c=[];if(o(e))m=!0,u(n,c);else{var h=r(e.nodeType);if(!h&&Wa(e,n))q(e,n,c,null,null,i);else{if(h){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),t=!0),s(t)&&Z(e,n,c))return _(n,c,!0),e;l=e,e=new he(d.tagName(l).toLowerCase(),{},[],void 0,l)}var y=e.elm,w=d.parentNode(y);if(u(n,c,y._leaveCb?null:w,d.nextSibling(y)),r(n.parent))for(var j=n.parent,p=z(n);j;){for(var g=0;g<a.destroy.length;++g)a.destroy[g](j);if(j.elm=n.elm,p){for(var b=0;b<a.create.length;++b)a.create[b](Ta,j);var k=j.data.hook.insert;if(k.merged)for(var x=k.fns.slice(1),N=0;N<x.length;N++)x[N]()}else Ia(j);j=j.parent}r(w)?v([e],0,0):r(e.tag)&&f(e)}}return _(n,c,m),n.elm}r(e)&&f(e)}}({nodeOps:Za,modules:[Xa,La,ti,oi,zi,L?{create:Ei,activate:Ei,remove:function(e,n){!0!==e.data.show?Ri(e,n):n()}}:{}].concat(Fa)});K&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Li(e,"input")}));var Fi={inserted:function(e,n,t,a){"select"===t.tag?(a.elm&&!a.elm._vOptions?nn(t,"postpatch",(function(){Fi.componentUpdated(e,n,t)})):Qi(e,n,t.context),e._vOptions=[].map.call(e.options,Xi)):("textarea"===t.tag||Na(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",Bi),e.addEventListener("compositionend",Ci),e.addEventListener("change",Ci),K&&(e.vmodel=!0)))},componentUpdated:function(e,n,t){if("select"===t.tag){Qi(e,n,t.context);var a=e._vOptions,i=e._vOptions=[].map.call(e.options,Xi);if(i.some((function(e,n){return!R(e,a[n])})))(e.multiple?n.value.some((function(e){return Si(e,i)})):n.value!==n.oldValue&&Si(n.value,i))&&Li(e,"change")}}};function Qi(e,n,t){Ji(e,n,t),(P||$)&&setTimeout((function(){Ji(e,n,t)}),0)}function Ji(e,n,t){var a=n.value,i=e.multiple;if(!i||Array.isArray(a)){for(var o,r,s=0,l=e.options.length;s<l;s++)if(r=e.options[s],i)o=U(a,Xi(r))>-1,r.selected!==o&&(r.selected=o);else if(R(Xi(r),a))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function Si(e,n){return n.every((function(n){return!R(n,e)}))}function Xi(e){return"_value"in e?e._value:e.value}function Bi(e){e.target.composing=!0}function Ci(e){e.target.composing&&(e.target.composing=!1,Li(e.target,"input"))}function Li(e,n){var t=document.createEvent("HTMLEvents");t.initEvent(n,!0,!0),e.dispatchEvent(t)}function Hi(e){return!e.componentInstance||e.data&&e.data.transition?e:Hi(e.componentInstance._vnode)}var Pi={model:Fi,show:{bind:function(e,n,t){var a=n.value,i=(t=Hi(t)).data&&t.data.transition,o=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&i?(t.data.show=!0,Di(t,(function(){e.style.display=o}))):e.style.display=a?o:"none"},update:function(e,n,t){var a=n.value;!a!=!n.oldValue&&((t=Hi(t)).data&&t.data.transition?(t.data.show=!0,a?Di(t,(function(){e.style.display=e.__vOriginalDisplay})):Ri(t,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,n,t,a,i){i||(e.style.display=e.__vOriginalDisplay)}}},Ki={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function $i(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?$i(An(n.children)):e}function eo(e){var n={},t=e.$options;for(var a in t.propsData)n[a]=e[a];var i=t._parentListeners;for(var a in i)n[_(a)]=i[a];return n}function no(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var to=function(e){return e.tag||kn(e)},ao=function(e){return"show"===e.name},io={name:"transition",props:Ki,abstract:!0,render:function(e){var n=this,t=this.$slots.default;if(t&&(t=t.filter(to)).length){0;var a=this.mode;0;var i=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var o=$i(i);if(!o)return i;if(this._leaving)return no(e,i);var r="__transition-".concat(this._uid,"-");o.key=null==o.key?o.isComment?r+"comment":r+o.tag:l(o.key)?0===String(o.key).indexOf(r)?o.key:r+o.key:o.key;var s=(o.data||(o.data={})).transition=eo(this),m=this._vnode,d=$i(m);if(o.data.directives&&o.data.directives.some(ao)&&(o.data.show=!0),d&&d.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(o,d)&&!kn(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var c=d.data.transition=T({},s);if("out-in"===a)return this._leaving=!0,nn(c,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),no(e,i);if("in-out"===a){if(kn(o))return m;var u,h=function(){u()};nn(s,"afterEnter",h),nn(s,"enterCancelled",h),nn(c,"delayLeave",(function(e){u=e}))}}return i}}},oo=T({tag:String,moveClass:String},Ki);function ro(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function so(e){e.data.newPos=e.elm.getBoundingClientRect()}function lo(e){var n=e.data.pos,t=e.data.newPos,a=n.left-t.left,i=n.top-t.top;if(a||i){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform="translate(".concat(a,"px,").concat(i,"px)"),o.transitionDuration="0s"}}delete oo.mode;var mo={Transition:io,TransitionGroup:{props:oo,beforeMount:function(){var e=this,n=this._update;this._update=function(t,a){var i=rt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),n.call(e,t,a)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),a=this.prevChildren=this.children,i=this.$slots.default||[],o=this.children=[],r=eo(this),s=0;s<i.length;s++){if((d=i[s]).tag)if(null!=d.key&&0!==String(d.key).indexOf("__vlist"))o.push(d),t[d.key]=d,(d.data||(d.data={})).transition=r;else;}if(a){var l=[],m=[];for(s=0;s<a.length;s++){var d;(d=a[s]).data.transition=r,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?l.push(d):m.push(d)}this.kept=e(n,null,l),this.removed=m}return e(n,null,o)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(ro),e.forEach(so),e.forEach(lo),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,a=t.style;Mi(t,n),a.transform=a.WebkitTransform=a.transitionDuration="",t.addEventListener(xi,t._moveCb=function e(a){a&&a.target!==t||a&&!/transform$/.test(a.propertyName)||(t.removeEventListener(xi,e),t._moveCb=null,Ii(t,n))})}})))},methods:{hasMove:function(e,n){if(!vi)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){gi(t,e)})),pi(t,n),t.style.display="none",this.$el.appendChild(t);var a=Ai(t);return this.$el.removeChild(t),this._hasMove=a.hasTransform}}}};function co(e,n){for(var t in n)e[t]=n[t];return e}na.config.mustUseProp=function(e,n,t){return"value"===t&&da(e)&&"button"!==n||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},na.config.isReservedTag=qa,na.config.isReservedAttr=ma,na.config.getTagNamespace=function(e){return xa(e)?"svg":"math"===e?"math":void 0},na.config.isUnknownElement=function(e){if(!L)return!0;if(qa(e))return!1;if(e=e.toLowerCase(),null!=_a[e])return _a[e];var n=document.createElement(e);return e.indexOf("-")>-1?_a[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:_a[e]=/HTMLUnknownElement/.test(n.toString())},T(na.options.directives,Pi),T(na.options.components,mo),na.prototype.__patch__=L?Gi:W,na.prototype.$mount=function(e,n){return function(e,n,t){var a;e.$el=n,e.$options.render||(e.$options.render=ye),mt(e,"beforeMount"),a=function(){e._update(e._render(),t)},new et(e,a,W,{before:function(){e._isMounted&&!e._isDestroyed&&mt(e,"beforeUpdate")}},!0),t=!1;var i=e._preWatchers;if(i)for(var o=0;o<i.length;o++)i[o].run();return null==e.$vnode&&(e._isMounted=!0,mt(e,"mounted")),e}(this,e=e&&L?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},L&&setTimeout((function(){Q.devtools&&se&&se.emit("init",na)}),0);var uo=/[!'()*]/g,ho=function(e){return"%"+e.charCodeAt(0).toString(16)},yo=/%2C/g,wo=function(e){return encodeURIComponent(e).replace(uo,ho).replace(yo,",")};function zo(e){try{return decodeURIComponent(e)}catch(e){0}return e}var jo=function(e){return null==e||"object"==typeof e?e:String(e)};function po(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),a=zo(t.shift()),i=t.length>0?zo(t.join("=")):null;void 0===n[a]?n[a]=i:Array.isArray(n[a])?n[a].push(i):n[a]=[n[a],i]})),n):n}function go(e){var n=e?Object.keys(e).map((function(n){var t=e[n];if(void 0===t)return"";if(null===t)return wo(n);if(Array.isArray(t)){var a=[];return t.forEach((function(e){void 0!==e&&(null===e?a.push(wo(n)):a.push(wo(n)+"="+wo(e)))})),a.join("&")}return wo(n)+"="+wo(t)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var bo=/\/?$/;function fo(e,n,t,a){var i=a&&a.options.stringifyQuery,o=n.query||{};try{o=vo(o)}catch(e){}var r={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:o,params:n.params||{},fullPath:qo(n,i),matched:e?xo(e):[]};return t&&(r.redirectedFrom=qo(t,i)),Object.freeze(r)}function vo(e){if(Array.isArray(e))return e.map(vo);if(e&&"object"==typeof e){var n={};for(var t in e)n[t]=vo(e[t]);return n}return e}var ko=fo(null,{path:"/"});function xo(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function qo(e,n){var t=e.path,a=e.query;void 0===a&&(a={});var i=e.hash;return void 0===i&&(i=""),(t||"/")+(n||go)(a)+i}function _o(e,n,t){return n===ko?e===n:!!n&&(e.path&&n.path?e.path.replace(bo,"")===n.path.replace(bo,"")&&(t||e.hash===n.hash&&No(e.query,n.query)):!(!e.name||!n.name)&&(e.name===n.name&&(t||e.hash===n.hash&&No(e.query,n.query)&&No(e.params,n.params))))}function No(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var t=Object.keys(e).sort(),a=Object.keys(n).sort();return t.length===a.length&&t.every((function(t,i){var o=e[t];if(a[i]!==t)return!1;var r=n[t];return null==o||null==r?o===r:"object"==typeof o&&"object"==typeof r?No(o,r):String(o)===String(r)}))}function Zo(e){for(var n=0;n<e.matched.length;n++){var t=e.matched[n];for(var a in t.instances){var i=t.instances[a],o=t.enteredCbs[a];if(i&&o){delete t.enteredCbs[a];for(var r=0;r<o.length;r++)i._isBeingDestroyed||o[r](i)}}}}var Mo={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var t=n.props,a=n.children,i=n.parent,o=n.data;o.routerView=!0;for(var r=i.$createElement,s=t.name,l=i.$route,m=i._routerViewCache||(i._routerViewCache={}),d=0,c=!1;i&&i._routerRoot!==i;){var u=i.$vnode?i.$vnode.data:{};u.routerView&&d++,u.keepAlive&&i._directInactive&&i._inactive&&(c=!0),i=i.$parent}if(o.routerViewDepth=d,c){var h=m[s],y=h&&h.component;return y?(h.configProps&&Io(y,o,h.route,h.configProps),r(y,o,a)):r()}var w=l.matched[d],z=w&&w.components[s];if(!w||!z)return m[s]=null,r();m[s]={component:z},o.registerRouteInstance=function(e,n){var t=w.instances[s];(n&&t!==e||!n&&t===e)&&(w.instances[s]=n)},(o.hook||(o.hook={})).prepatch=function(e,n){w.instances[s]=n.componentInstance},o.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==w.instances[s]&&(w.instances[s]=e.componentInstance),Zo(l)};var j=w.props&&w.props[s];return j&&(co(m[s],{route:l,configProps:j}),Io(z,o,l,j)),r(z,o,a)}};function Io(e,n,t,a){var i=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(t,a);if(i){i=n.props=co({},i);var o=n.attrs=n.attrs||{};for(var r in i)e.props&&r in e.props||(o[r]=i[r],delete i[r])}}function Yo(e,n,t){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return n+e;var i=n.split("/");t&&i[i.length-1]||i.pop();for(var o=e.replace(/^\//,"").split("/"),r=0;r<o.length;r++){var s=o[r];".."===s?i.pop():"."!==s&&i.push(s)}return""!==i[0]&&i.unshift(""),i.join("/")}function To(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var Ao=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},Wo=Co,Oo=Eo,Do=function(e,n){return Fo(Eo(e,n),n)},Ro=Fo,Uo=Bo,Vo=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Eo(e,n){for(var t,a=[],i=0,o=0,r="",s=n&&n.delimiter||"/";null!=(t=Vo.exec(e));){var l=t[0],m=t[1],d=t.index;if(r+=e.slice(o,d),o=d+l.length,m)r+=m[1];else{var c=e[o],u=t[2],h=t[3],y=t[4],w=t[5],z=t[6],j=t[7];r&&(a.push(r),r="");var p=null!=u&&null!=c&&c!==u,g="+"===z||"*"===z,b="?"===z||"*"===z,f=t[2]||s,v=y||w;a.push({name:h||i++,prefix:u||"",delimiter:f,optional:b,repeat:g,partial:p,asterisk:!!j,pattern:v?Jo(v):j?".*":"[^"+Qo(f)+"]+?"})}}return o<e.length&&(r+=e.substr(o)),r&&a.push(r),a}function Go(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Fo(e,n){for(var t=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(t[a]=new RegExp("^(?:"+e[a].pattern+")$",Xo(n)));return function(n,a){for(var i="",o=n||{},r=(a||{}).pretty?Go:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var m,d=o[l.name];if(null==d){if(l.optional){l.partial&&(i+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(Ao(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var c=0;c<d.length;c++){if(m=r(d[c]),!t[s].test(m))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(m)+"`");i+=(0===c?l.prefix:l.delimiter)+m}}else{if(m=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):r(d),!t[s].test(m))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+m+'"');i+=l.prefix+m}}else i+=l}return i}}function Qo(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Jo(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function So(e,n){return e.keys=n,e}function Xo(e){return e&&e.sensitive?"":"i"}function Bo(e,n,t){Ao(n)||(t=n||t,n=[]);for(var a=(t=t||{}).strict,i=!1!==t.end,o="",r=0;r<e.length;r++){var s=e[r];if("string"==typeof s)o+=Qo(s);else{var l=Qo(s.prefix),m="(?:"+s.pattern+")";n.push(s),s.repeat&&(m+="(?:"+l+m+")*"),o+=m=s.optional?s.partial?l+"("+m+")?":"(?:"+l+"("+m+"))?":l+"("+m+")"}}var d=Qo(t.delimiter||"/"),c=o.slice(-d.length)===d;return a||(o=(c?o.slice(0,-d.length):o)+"(?:"+d+"(?=$))?"),o+=i?"$":a&&c?"":"(?="+d+"|$)",So(new RegExp("^"+o,Xo(t)),n)}function Co(e,n,t){return Ao(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var a=0;a<t.length;a++)n.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return So(e,n)}(e,n):Ao(e)?function(e,n,t){for(var a=[],i=0;i<e.length;i++)a.push(Co(e[i],n,t).source);return So(new RegExp("(?:"+a.join("|")+")",Xo(t)),n)}(e,n,t):function(e,n,t){return Bo(Eo(e,t),n,t)}(e,n,t)}Wo.parse=Oo,Wo.compile=Do,Wo.tokensToFunction=Ro,Wo.tokensToRegExp=Uo;var Lo=Object.create(null);function Ho(e,n,t){n=n||{};try{var a=Lo[e]||(Lo[e]=Wo.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),a(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function Po(e,n,t,a){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var o=(i=co({},e)).params;return o&&"object"==typeof o&&(i.params=co({},o)),i}if(!i.path&&i.params&&n){(i=co({},i))._normalized=!0;var r=co(co({},n.params),i.params);if(n.name)i.name=n.name,i.params=r;else if(n.matched.length){var s=n.matched[n.matched.length-1].path;i.path=Ho(s,r,n.path)}else 0;return i}var l=function(e){var n="",t="",a=e.indexOf("#");a>=0&&(n=e.slice(a),e=e.slice(0,a));var i=e.indexOf("?");return i>=0&&(t=e.slice(i+1),e=e.slice(0,i)),{path:e,query:t,hash:n}}(i.path||""),m=n&&n.path||"/",d=l.path?Yo(l.path,m,t||i.append):m,c=function(e,n,t){void 0===n&&(n={});var a,i=t||po;try{a=i(e||"")}catch(e){a={}}for(var o in n){var r=n[o];a[o]=Array.isArray(r)?r.map(jo):jo(r)}return a}(l.query,i.query,a&&a.options.parseQuery),u=i.hash||l.hash;return u&&"#"!==u.charAt(0)&&(u="#"+u),{_normalized:!0,path:d,query:c,hash:u}}var Ko,$o=function(){},er={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,t=this.$router,a=this.$route,i=t.resolve(this.to,a,this.append),o=i.location,r=i.route,s=i.href,l={},m=t.options.linkActiveClass,d=t.options.linkExactActiveClass,c=null==m?"router-link-active":m,u=null==d?"router-link-exact-active":d,h=null==this.activeClass?c:this.activeClass,y=null==this.exactActiveClass?u:this.exactActiveClass,w=r.redirectedFrom?fo(null,Po(r.redirectedFrom),null,t):r;l[y]=_o(a,w,this.exactPath),l[h]=this.exact||this.exactPath?l[y]:function(e,n){return 0===e.path.replace(bo,"/").indexOf(n.path.replace(bo,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var t in n)if(!(t in e))return!1;return!0}(e.query,n.query)}(a,w);var z=l[y]?this.ariaCurrentValue:null,j=function(e){nr(e)&&(n.replace?t.replace(o,$o):t.push(o,$o))},p={click:nr};Array.isArray(this.event)?this.event.forEach((function(e){p[e]=j})):p[this.event]=j;var g={class:l},b=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:r,navigate:j,isActive:l[h],isExactActive:l[y]});if(b){if(1===b.length)return b[0];if(b.length>1||!b.length)return 0===b.length?e():e("span",{},b)}if("a"===this.tag)g.on=p,g.attrs={href:s,"aria-current":z};else{var f=function e(n){var t;if(n)for(var a=0;a<n.length;a++){if("a"===(t=n[a]).tag)return t;if(t.children&&(t=e(t.children)))return t}}(this.$slots.default);if(f){f.isStatic=!1;var v=f.data=co({},f.data);for(var k in v.on=v.on||{},v.on){var x=v.on[k];k in p&&(v.on[k]=Array.isArray(x)?x:[x])}for(var q in p)q in v.on?v.on[q].push(p[q]):v.on[q]=j;var _=f.data.attrs=co({},f.data.attrs);_.href=s,_["aria-current"]=z}else g.on=p}return e(this.tag,g,this.$slots.default)}};function nr(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var tr="undefined"!=typeof window;function ar(e,n,t,a,i){var o=n||[],r=t||Object.create(null),s=a||Object.create(null);e.forEach((function(e){!function e(n,t,a,i,o,r){var s=i.path,l=i.name;0;var m=i.pathToRegexpOptions||{},d=function(e,n,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return To(n.path+"/"+e)}(s,o,m.strict);"boolean"==typeof i.caseSensitive&&(m.sensitive=i.caseSensitive);var c={path:d,regex:ir(d,m),components:i.components||{default:i.component},alias:i.alias?"string"==typeof i.alias?[i.alias]:i.alias:[],instances:{},enteredCbs:{},name:l,parent:o,matchAs:r,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach((function(i){var o=r?To(r+"/"+i.path):void 0;e(n,t,a,i,c,o)}));t[c.path]||(n.push(c.path),t[c.path]=c);if(void 0!==i.alias)for(var u=Array.isArray(i.alias)?i.alias:[i.alias],h=0;h<u.length;++h){0;var y={path:u[h],children:i.children};e(n,t,a,y,o,c.path||"/")}l&&(a[l]||(a[l]=c))}(o,r,s,e,i)}));for(var l=0,m=o.length;l<m;l++)"*"===o[l]&&(o.push(o.splice(l,1)[0]),m--,l--);return{pathList:o,pathMap:r,nameMap:s}}function ir(e,n){return Wo(e,[],n)}function or(e,n){var t=ar(e),a=t.pathList,i=t.pathMap,o=t.nameMap;function r(e,t,r){var s=Po(e,t,!1,n),m=s.name;if(m){var d=o[m];if(!d)return l(null,s);var c=d.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var u in t.params)!(u in s.params)&&c.indexOf(u)>-1&&(s.params[u]=t.params[u]);return s.path=Ho(d.path,s.params),l(d,s,r)}if(s.path){s.params={};for(var h=0;h<a.length;h++){var y=a[h],w=i[y];if(rr(w.regex,s.path,s.params))return l(w,s,r)}}return l(null,s)}function s(e,t){var a=e.redirect,i="function"==typeof a?a(fo(e,t,null,n)):a;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return l(null,t);var s=i,m=s.name,d=s.path,c=t.query,u=t.hash,h=t.params;if(c=s.hasOwnProperty("query")?s.query:c,u=s.hasOwnProperty("hash")?s.hash:u,h=s.hasOwnProperty("params")?s.params:h,m){o[m];return r({_normalized:!0,name:m,query:c,hash:u,params:h},void 0,t)}if(d){var y=function(e,n){return Yo(e,n.parent?n.parent.path:"/",!0)}(d,e);return r({_normalized:!0,path:Ho(y,h),query:c,hash:u},void 0,t)}return l(null,t)}function l(e,t,a){return e&&e.redirect?s(e,a||t):e&&e.matchAs?function(e,n,t){var a=r({_normalized:!0,path:Ho(t,n.params)});if(a){var i=a.matched,o=i[i.length-1];return n.params=a.params,l(o,n)}return l(null,n)}(0,t,e.matchAs):fo(e,t,a,n)}return{match:r,addRoute:function(e,n){var t="object"!=typeof e?o[e]:void 0;ar([n||e],a,i,o,t),t&&t.alias.length&&ar(t.alias.map((function(e){return{path:e,children:[n]}})),a,i,o,t)},getRoutes:function(){return a.map((function(e){return i[e]}))},addRoutes:function(e){ar(e,a,i,o)}}}function rr(e,n,t){var a=n.match(e);if(!a)return!1;if(!t)return!0;for(var i=1,o=a.length;i<o;++i){var r=e.keys[i-1];r&&(t[r.name||"pathMatch"]="string"==typeof a[i]?zo(a[i]):a[i])}return!0}var sr=tr&&window.performance&&window.performance.now?window.performance:Date;function lr(){return sr.now().toFixed(3)}var mr=lr();function dr(){return mr}function cr(e){return mr=e}var ur=Object.create(null);function hr(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),t=co({},window.history.state);return t.key=dr(),window.history.replaceState(t,"",n),window.addEventListener("popstate",zr),function(){window.removeEventListener("popstate",zr)}}function yr(e,n,t,a){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var o=function(){var e=dr();if(e)return ur[e]}(),r=i.call(e,n,t,a?o:null);r&&("function"==typeof r.then?r.then((function(e){fr(e,o)})).catch((function(e){0})):fr(r,o))}))}}function wr(){var e=dr();e&&(ur[e]={x:window.pageXOffset,y:window.pageYOffset})}function zr(e){wr(),e.state&&e.state.key&&cr(e.state.key)}function jr(e){return gr(e.x)||gr(e.y)}function pr(e){return{x:gr(e.x)?e.x:window.pageXOffset,y:gr(e.y)?e.y:window.pageYOffset}}function gr(e){return"number"==typeof e}var br=/^#\d/;function fr(e,n){var t,a="object"==typeof e;if(a&&"string"==typeof e.selector){var i=br.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var o=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var t=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-t.left-n.x,y:a.top-t.top-n.y}}(i,o={x:gr((t=o).x)?t.x:0,y:gr(t.y)?t.y:0})}else jr(e)&&(n=pr(e))}else a&&jr(e)&&(n=pr(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var vr,kr=tr&&((-1===(vr=window.navigator.userAgent).indexOf("Android 2.")&&-1===vr.indexOf("Android 4.0")||-1===vr.indexOf("Mobile Safari")||-1!==vr.indexOf("Chrome")||-1!==vr.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function xr(e,n){wr();var t=window.history;try{if(n){var a=co({},t.state);a.key=dr(),t.replaceState(a,"",e)}else t.pushState({key:cr(lr())},"",e)}catch(t){window.location[n?"replace":"assign"](e)}}function qr(e){xr(e,!0)}var _r={redirected:2,aborted:4,cancelled:8,duplicated:16};function Nr(e,n){return Mr(e,n,_r.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return Ir.forEach((function(t){t in e&&(n[t]=e[t])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function Zr(e,n){return Mr(e,n,_r.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function Mr(e,n,t,a){var i=new Error(a);return i._isRouter=!0,i.from=e,i.to=n,i.type=t,i}var Ir=["params","query","hash"];function Yr(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Tr(e,n){return Yr(e)&&e._isRouter&&(null==n||e.type===n)}function Ar(e,n,t){var a=function(i){i>=e.length?t():e[i]?n(e[i],(function(){a(i+1)})):a(i+1)};a(0)}function Wr(e){return function(n,t,a){var i=!1,o=0,r=null;Or(e,(function(e,n,t,s){if("function"==typeof e&&void 0===e.cid){i=!0,o++;var l,m=Ur((function(n){var i;((i=n).__esModule||Rr&&"Module"===i[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:Ko.extend(n),t.components[s]=n,--o<=0&&a()})),d=Ur((function(e){var n="Failed to resolve async component "+s+": "+e;r||(r=Yr(e)?e:new Error(n),a(r))}));try{l=e(m,d)}catch(e){d(e)}if(l)if("function"==typeof l.then)l.then(m,d);else{var c=l.component;c&&"function"==typeof c.then&&c.then(m,d)}}})),i||a()}}function Or(e,n){return Dr(e.map((function(e){return Object.keys(e.components).map((function(t){return n(e.components[t],e.instances[t],e,t)}))})))}function Dr(e){return Array.prototype.concat.apply([],e)}var Rr="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Ur(e){var n=!1;return function(){for(var t=[],a=arguments.length;a--;)t[a]=arguments[a];if(!n)return n=!0,e.apply(this,t)}}var Vr=function(e,n){this.router=e,this.base=function(e){if(!e)if(tr){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=ko,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Er(e,n,t,a){var i=Or(e,(function(e,a,i,o){var r=function(e,n){"function"!=typeof e&&(e=Ko.extend(e));return e.options[n]}(e,n);if(r)return Array.isArray(r)?r.map((function(e){return t(e,a,i,o)})):t(r,a,i,o)}));return Dr(a?i.reverse():i)}function Gr(e,n){if(n)return function(){return e.apply(n,arguments)}}Vr.prototype.listen=function(e){this.cb=e},Vr.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},Vr.prototype.onError=function(e){this.errorCbs.push(e)},Vr.prototype.transitionTo=function(e,n,t){var a,i=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var o=this.current;this.confirmTransition(a,(function(){i.updateRoute(a),n&&n(a),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(a,o)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(a)})))}),(function(e){t&&t(e),e&&!i.ready&&(Tr(e,_r.redirected)&&o===ko||(i.ready=!0,i.readyErrorCbs.forEach((function(n){n(e)}))))}))},Vr.prototype.confirmTransition=function(e,n,t){var a=this,i=this.current;this.pending=e;var o,r,s=function(e){!Tr(e)&&Yr(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(n){n(e)})):console.error(e)),t&&t(e)},l=e.matched.length-1,m=i.matched.length-1;if(_o(e,i)&&l===m&&e.matched[l]===i.matched[m])return this.ensureURL(),e.hash&&yr(this.router,i,e,!1),s(((r=Mr(o=i,e,_r.duplicated,'Avoided redundant navigation to current location: "'+o.fullPath+'".')).name="NavigationDuplicated",r));var d=function(e,n){var t,a=Math.max(e.length,n.length);for(t=0;t<a&&e[t]===n[t];t++);return{updated:n.slice(0,t),activated:n.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),c=d.updated,u=d.deactivated,h=d.activated,y=[].concat(function(e){return Er(e,"beforeRouteLeave",Gr,!0)}(u),this.router.beforeHooks,function(e){return Er(e,"beforeRouteUpdate",Gr)}(c),h.map((function(e){return e.beforeEnter})),Wr(h)),w=function(n,t){if(a.pending!==e)return s(Zr(i,e));try{n(e,i,(function(n){!1===n?(a.ensureURL(!0),s(function(e,n){return Mr(e,n,_r.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(i,e))):Yr(n)?(a.ensureURL(!0),s(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(s(Nr(i,e)),"object"==typeof n&&n.replace?a.replace(n):a.push(n)):t(n)}))}catch(e){s(e)}};Ar(y,w,(function(){Ar(function(e){return Er(e,"beforeRouteEnter",(function(e,n,t,a){return function(e,n,t){return function(a,i,o){return e(a,i,(function(e){"function"==typeof e&&(n.enteredCbs[t]||(n.enteredCbs[t]=[]),n.enteredCbs[t].push(e)),o(e)}))}}(e,t,a)}))}(h).concat(a.router.resolveHooks),w,(function(){if(a.pending!==e)return s(Zr(i,e));a.pending=null,n(e),a.router.app&&a.router.app.$nextTick((function(){Zo(e)}))}))}))},Vr.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Vr.prototype.setupListeners=function(){},Vr.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=ko,this.pending=null};var Fr=function(e){function n(n,t){e.call(this,n,t),this._startLocation=Qr(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,t=n.options.scrollBehavior,a=kr&&t;a&&this.listeners.push(hr());var i=function(){var t=e.current,i=Qr(e.base);e.current===ko&&i===e._startLocation||e.transitionTo(i,(function(e){a&&yr(n,e,t,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,t){var a=this,i=this.current;this.transitionTo(e,(function(e){xr(To(a.base+e.fullPath)),yr(a.router,e,i,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var a=this,i=this.current;this.transitionTo(e,(function(e){qr(To(a.base+e.fullPath)),yr(a.router,e,i,!1),n&&n(e)}),t)},n.prototype.ensureURL=function(e){if(Qr(this.base)!==this.current.fullPath){var n=To(this.base+this.current.fullPath);e?xr(n):qr(n)}},n.prototype.getCurrentLocation=function(){return Qr(this.base)},n}(Vr);function Qr(e){var n=window.location.pathname,t=n.toLowerCase(),a=e.toLowerCase();return!e||t!==a&&0!==t.indexOf(To(a+"/"))||(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var Jr=function(e){function n(n,t,a){e.call(this,n,t),a&&function(e){var n=Qr(e);if(!/^\/#/.test(n))return window.location.replace(To(e+"/#"+n)),!0}(this.base)||Sr()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,t=kr&&n;t&&this.listeners.push(hr());var a=function(){var n=e.current;Sr()&&e.transitionTo(Xr(),(function(a){t&&yr(e.router,a,n,!0),kr||Lr(a.fullPath)}))},i=kr?"popstate":"hashchange";window.addEventListener(i,a),this.listeners.push((function(){window.removeEventListener(i,a)}))}},n.prototype.push=function(e,n,t){var a=this,i=this.current;this.transitionTo(e,(function(e){Cr(e.fullPath),yr(a.router,e,i,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var a=this,i=this.current;this.transitionTo(e,(function(e){Lr(e.fullPath),yr(a.router,e,i,!1),n&&n(e)}),t)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;Xr()!==n&&(e?Cr(n):Lr(n))},n.prototype.getCurrentLocation=function(){return Xr()},n}(Vr);function Sr(){var e=Xr();return"/"===e.charAt(0)||(Lr("/"+e),!1)}function Xr(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function Br(e){var n=window.location.href,t=n.indexOf("#");return(t>=0?n.slice(0,t):n)+"#"+e}function Cr(e){kr?xr(Br(e)):window.location.hash=e}function Lr(e){kr?qr(Br(e)):window.location.replace(Br(e))}var Hr=function(e){function n(n,t){e.call(this,n,t),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,t){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),n&&n(e)}),t)},n.prototype.go=function(e){var n=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var a=this.stack[t];this.confirmTransition(a,(function(){var e=n.current;n.index=t,n.updateRoute(a),n.router.afterHooks.forEach((function(n){n&&n(a,e)}))}),(function(e){Tr(e,_r.duplicated)&&(n.index=t)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(Vr),Pr=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=or(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!kr&&!1!==e.fallback,this.fallback&&(n="hash"),tr||(n="abstract"),this.mode=n,n){case"history":this.history=new Fr(this,e.base);break;case"hash":this.history=new Jr(this,e.base,this.fallback);break;case"abstract":this.history=new Hr(this,e.base);break;default:0}},Kr={currentRoute:{configurable:!0}};Pr.prototype.match=function(e,n,t){return this.matcher.match(e,n,t)},Kr.currentRoute.get=function(){return this.history&&this.history.current},Pr.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=n.apps.indexOf(e);t>-1&&n.apps.splice(t,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof Fr||t instanceof Jr){var a=function(e){t.setupListeners(),function(e){var a=t.current,i=n.options.scrollBehavior;kr&&i&&"fullPath"in e&&yr(n,e,a,!1)}(e)};t.transitionTo(t.getCurrentLocation(),a,a)}t.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},Pr.prototype.beforeEach=function(e){return es(this.beforeHooks,e)},Pr.prototype.beforeResolve=function(e){return es(this.resolveHooks,e)},Pr.prototype.afterEach=function(e){return es(this.afterHooks,e)},Pr.prototype.onReady=function(e,n){this.history.onReady(e,n)},Pr.prototype.onError=function(e){this.history.onError(e)},Pr.prototype.push=function(e,n,t){var a=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){a.history.push(e,n,t)}));this.history.push(e,n,t)},Pr.prototype.replace=function(e,n,t){var a=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){a.history.replace(e,n,t)}));this.history.replace(e,n,t)},Pr.prototype.go=function(e){this.history.go(e)},Pr.prototype.back=function(){this.go(-1)},Pr.prototype.forward=function(){this.go(1)},Pr.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},Pr.prototype.resolve=function(e,n,t){var a=Po(e,n=n||this.history.current,t,this),i=this.match(a,n),o=i.redirectedFrom||i.fullPath;return{location:a,route:i,href:function(e,n,t){var a="hash"===t?"#"+n:n;return e?To(e+"/"+a):a}(this.history.base,o,this.mode),normalizedTo:a,resolved:i}},Pr.prototype.getRoutes=function(){return this.matcher.getRoutes()},Pr.prototype.addRoute=function(e,n){this.matcher.addRoute(e,n),this.history.current!==ko&&this.history.transitionTo(this.history.getCurrentLocation())},Pr.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==ko&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Pr.prototype,Kr);var $r=Pr;function es(e,n){return e.push(n),function(){var t=e.indexOf(n);t>-1&&e.splice(t,1)}}Pr.install=function e(n){if(!e.installed||Ko!==n){e.installed=!0,Ko=n;var t=function(e){return void 0!==e},a=function(e,n){var a=e.$options._parentVnode;t(a)&&t(a=a.data)&&t(a=a.registerRouteInstance)&&a(e,n)};n.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",Mo),n.component("RouterLink",er);var i=n.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},Pr.version="3.6.5",Pr.isNavigationFailure=Tr,Pr.NavigationFailureType=_r,Pr.START_LOCATION=ko,tr&&window.Vue&&window.Vue.use(Pr);t(104);t(90),t(129);var ns={"components/AlgoliaSearchBox":()=>Promise.all([t.e(0),t.e(14)]).then(t.bind(null,322)),"components/DropdownLink":()=>Promise.all([t.e(0),t.e(15)]).then(t.bind(null,259)),"components/DropdownTransition":()=>Promise.all([t.e(0),t.e(22)]).then(t.bind(null,247)),"components/Home":()=>Promise.all([t.e(0),t.e(17)]).then(t.bind(null,295)),"components/NavLink":()=>t.e(25).then(t.bind(null,246)),"components/NavLinks":()=>Promise.all([t.e(0),t.e(13)]).then(t.bind(null,273)),"components/Navbar":()=>Promise.all([t.e(0),t.e(1)]).then(t.bind(null,318)),"components/Page":()=>Promise.all([t.e(0),t.e(12)]).then(t.bind(null,296)),"components/PageEdit":()=>Promise.all([t.e(0),t.e(18)]).then(t.bind(null,276)),"components/PageNav":()=>Promise.all([t.e(0),t.e(16)]).then(t.bind(null,277)),"components/Sidebar":()=>Promise.all([t.e(0),t.e(11)]).then(t.bind(null,297)),"components/SidebarButton":()=>Promise.all([t.e(0),t.e(21)]).then(t.bind(null,300)),"components/SidebarGroup":()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,274)),"components/SidebarLink":()=>Promise.all([t.e(0),t.e(20)]).then(t.bind(null,260)),"components/SidebarLinks":()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,258)),"global-components/Badge":()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,327)),"global-components/CodeBlock":()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,323)),"global-components/CodeGroup":()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,324)),"layouts/404":()=>t.e(26).then(t.bind(null,325)),"layouts/Layout":()=>Promise.all([t.e(0),t.e(2),t.e(1),t.e(3)]).then(t.bind(null,319)),NotFound:()=>Promise.all([t.e(0),t.e(2),t.e(1),t.e(3),t.e(8)]).then(t.bind(null,326)),Layout:()=>Promise.all([t.e(0),t.e(2),t.e(1),t.e(3)]).then(t.bind(null,319)),"components/Footer":()=>Promise.all([t.e(0),t.e(23)]).then(t.bind(null,299)),"components/SearchBox":()=>Promise.all([t.e(0),t.e(24)]).then(t.bind(null,294)),"components/SearchModal":()=>Promise.all([t.e(0),t.e(2),t.e(19)]).then(t.bind(null,298)),"layouts/NotFound":()=>Promise.all([t.e(0),t.e(2),t.e(1),t.e(3),t.e(8)]).then(t.bind(null,326))},ts={"v-c0a4944c":()=>t.e(27).then(t.bind(null,328)),"v-b8cb630c":()=>t.e(29).then(t.bind(null,329)),"v-038b01fa":()=>t.e(28).then(t.bind(null,330)),"v-1ba5eb6a":()=>t.e(30).then(t.bind(null,331)),"v-aaa9b6f4":()=>t.e(31).then(t.bind(null,332)),"v-0a39d43a":()=>t.e(32).then(t.bind(null,333)),"v-c0082a28":()=>t.e(33).then(t.bind(null,334)),"v-4c2c563a":()=>t.e(34).then(t.bind(null,335)),"v-db3ac7ec":()=>t.e(35).then(t.bind(null,336)),"v-ecd6cf40":()=>t.e(36).then(t.bind(null,337)),"v-90d4f50c":()=>t.e(37).then(t.bind(null,338)),"v-48851acc":()=>t.e(38).then(t.bind(null,339)),"v-9172688c":()=>t.e(39).then(t.bind(null,340)),"v-172dfc5a":()=>t.e(40).then(t.bind(null,341)),"v-30ab1e90":()=>t.e(41).then(t.bind(null,342)),"v-2fa5878c":()=>t.e(43).then(t.bind(null,343)),"v-b292638c":()=>t.e(44).then(t.bind(null,344)),"v-e0d70ecc":()=>t.e(45).then(t.bind(null,345)),"v-6e1e3488":()=>t.e(46).then(t.bind(null,346)),"v-3f2c877a":()=>t.e(42).then(t.bind(null,347)),"v-2151a890":()=>t.e(47).then(t.bind(null,348)),"v-ad4931e0":()=>t.e(49).then(t.bind(null,349)),"v-79f5d88c":()=>t.e(50).then(t.bind(null,350)),"v-4222367a":()=>t.e(51).then(t.bind(null,351)),"v-0cbb8c5a":()=>t.e(52).then(t.bind(null,352)),"v-68d9087a":()=>t.e(53).then(t.bind(null,353)),"v-2aed10ba":()=>t.e(54).then(t.bind(null,354)),"v-37cd1c0a":()=>t.e(56).then(t.bind(null,355)),"v-657f8880":()=>t.e(57).then(t.bind(null,356)),"v-d8e9780c":()=>t.e(55).then(t.bind(null,357)),"v-bf3acddc":()=>t.e(58).then(t.bind(null,358)),"v-401d6fcc":()=>t.e(59).then(t.bind(null,359)),"v-0d0949e4":()=>t.e(60).then(t.bind(null,360)),"v-c8f0091c":()=>t.e(61).then(t.bind(null,361)),"v-6c1fe4b4":()=>t.e(62).then(t.bind(null,362)),"v-e8e2a6fc":()=>t.e(63).then(t.bind(null,363)),"v-a40710da":()=>t.e(64).then(t.bind(null,364)),"v-4d71a012":()=>t.e(65).then(t.bind(null,365)),"v-3798e78c":()=>t.e(66).then(t.bind(null,366)),"v-fc9b918c":()=>t.e(67).then(t.bind(null,367)),"v-2c88928c":()=>t.e(48).then(t.bind(null,368))};function as(e){const n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}const is=/-(\w)/g,os=as(e=>e.replace(is,(e,n)=>n?n.toUpperCase():"")),rs=/\B([A-Z])/g,ss=as(e=>e.replace(rs,"-$1").toLowerCase()),ls=as(e=>e.charAt(0).toUpperCase()+e.slice(1));function ms(e,n){if(!n)return;if(e(n))return e(n);return n.includes("-")?e(ls(os(n))):e(ls(n))||e(ss(n))}const ds=Object.assign({},ns,ts),cs=e=>ds[e],us=e=>ts[e],hs=e=>ns[e],ys=e=>na.component(e);function ws(e){return ms(us,e)}function zs(e){return ms(hs,e)}function js(e){return ms(cs,e)}function ps(e){return ms(ys,e)}function gs(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!ps(e)&&js(e)){const n=await js(e)();na.component(e,n.default)}}))}function bs(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}var fs=t(87),vs=t.n(fs),ks=t(88),xs=t.n(ks),qs={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,n])=>n),this.$ssrContext){const n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map(e=>{let n="<meta";return Object.keys(e).forEach(t=>{n+=` ${t}="${xs()(e[t])}"`}),n+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=Ns(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=Zs(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return vs()([{name:"description",content:this.$description}],e,this.siteMeta,Ms)},updateCanonicalLink(){_s(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",Ns(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){Zs(null,this.currentMetaTags),_s()}};function _s(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function Ns(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function Zs(e,n){if(n&&[...n].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const n=document.createElement("meta");return Object.keys(e).forEach(t=>{n.setAttribute(t,e[t])}),document.head.appendChild(n),n})}function Ms(e){for(const n of["name","property","itemprop"])if(e.hasOwnProperty(n))return e[n]+n;return JSON.stringify(e)}var Is=t(89),Ys={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(Is)()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter(n=>e.some(e=>e.hash===n.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+t;for(let e=0;e<n.length;e++){const o=n[e],r=n[e+1],s=0===e&&0===t||t>=o.parentElement.offsetTop+10&&(!r||t<r.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(o.hash)){const t=o;if(i===a)for(let t=e+1;t<n.length;t++)if(l===decodeURIComponent(n[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Ts=t(22),As=t.n(Ts),Ws={mounted(){As.a.configure({showSpinner:!1}),this.$router.beforeEach((e,n,t)=>{e.path===n.path||na.component(e.name)||As.a.start(),t()}),this.$router.afterEach(()=>{As.a.done(),this.isSidebarOpen=!1})}},Os={props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:()=>({success:!1,originalBackground:null,originalTransition:null}),computed:{alignStyle(){let e={};return e[this.options.align]="7.5px",e},iconClass(){return this.options.staticIcon?"":"hover"}},mounted(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb(e){let n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return n?{r:parseInt(n[1],16),g:parseInt(n[2],16),b:parseInt(n[3],16)}:null},copyToClipboard(e){if(navigator.clipboard)navigator.clipboard.writeText(this.code).then(()=>{this.setSuccessTransitions()},()=>{});else{let e=document.createElement("textarea");document.body.appendChild(e),e.value=this.code,e.select(),document.execCommand("Copy"),e.remove(),this.setSuccessTransitions()}},setSuccessTransitions(){if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";let e=this.hexToRgb(this.options.backgroundColor);this.parent.style.background=`rgba(${e.r}, ${e.g}, ${e.b}, 0.1)`}this.success=!0,this.successTimeout=setTimeout(()=>{this.options.backgroundTransition&&(this.parent.style.background=this.originalBackground,this.parent.style.transition=this.originalTransition),this.success=!1},500)}}},Ds=(t(237),t(10)),Rs=Object(Ds.a)(Os,(function(){var e=this,n=e._self._c;return n("div",{staticClass:"code-copy"},[n("svg",{class:e.iconClass,style:e.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:e.copyToClipboard}},[n("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e._v(" "),n("path",{attrs:{fill:e.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),e._v(" "),n("span",{class:e.success?"success":"",style:e.alignStyle},[e._v("\n        "+e._s(e.options.successText)+"\n    ")])])}),[],!1,null,"49140617",null).exports,Us=(t(238),[qs,Ys,Ws,{updated(){this.update()},methods:{update(){setTimeout(()=>{document.querySelectorAll('div[class*="language-"] pre').forEach(e=>{if(e.classList.contains("code-copy-added"))return;let n=new(na.extend(Rs));n.options={align:"bottom",color:"#27b1ff",backgroundTransition:!0,backgroundColor:"#0075b8",successText:"Copied!",staticIcon:!1},n.code=e.innerText,n.parent=e,n.$mount(),e.classList.add("code-copy-added"),e.appendChild(n.$el)})},100)}}}]),Vs={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return bs("layout",e),na.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},Es=Object(Ds.a)(Vs,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,t){switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],t);break;case"mixins":e[n]||(e[n]=[]),e[n].push(...t);break;default:throw new Error("Unknown option name.")}}(Es,"mixins",Us);const Gs=[{name:"v-c0a4944c",path:"/arns/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-c0a4944c").then(t)}},{path:"/arns/index.html",redirect:"/arns/"},{path:"/arns.html",redirect:"/arns/"},{name:"v-b8cb630c",path:"/community-resources.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-b8cb630c").then(t)}},{name:"v-038b01fa",path:"/arweave/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-038b01fa").then(t)}},{path:"/arweave/index.html",redirect:"/arweave/"},{path:"/arweave.html",redirect:"/arweave/"},{name:"v-1ba5eb6a",path:"/arcss/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-1ba5eb6a").then(t)}},{path:"/arcss/index.html",redirect:"/arcss/"},{path:"/concepts/arcss.html",redirect:"/arcss/"},{name:"v-aaa9b6f4",path:"/manifests/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-aaa9b6f4").then(t)}},{path:"/manifests/index.html",redirect:"/manifests/"},{path:"/concepts/manifests.html",redirect:"/manifests/"},{name:"v-0a39d43a",path:"/concepts/sandboxing.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-0a39d43a").then(t)}},{name:"v-c0082a28",path:"/contribute.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-c0082a28").then(t)}},{name:"v-4c2c563a",path:"/guides/experimental/ao-ant/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-4c2c563a").then(t)}},{path:"/guides/experimental/ao-ant/index.html",redirect:"/guides/experimental/ao-ant/"},{path:"/experimental/ao-ant.html",redirect:"/guides/experimental/ao-ant/"},{name:"v-db3ac7ec",path:"/guides/experimental/ao-resolver/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-db3ac7ec").then(t)}},{path:"/guides/experimental/ao-resolver/index.html",redirect:"/guides/experimental/ao-resolver/"},{path:"/experimental/ao-resolver.html",redirect:"/guides/experimental/ao-resolver/"},{name:"v-ecd6cf40",path:"/foundation/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-ecd6cf40").then(t)}},{path:"/foundation/index.html",redirect:"/foundation/"},{path:"/foundation.html",redirect:"/foundation/"},{name:"v-90d4f50c",path:"/gateway-network/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-90d4f50c").then(t)}},{path:"/gateway-network/index.html",redirect:"/gateway-network/"},{path:"/gateway-network.html",redirect:"/gateway-network/"},{name:"v-48851acc",path:"/gateways/ar-io-node/admin/admin-api.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-48851acc").then(t)}},{name:"v-9172688c",path:"/gateways/ar-io-node/advanced-config.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-9172688c").then(t)}},{name:"v-172dfc5a",path:"/gateways/ar-io-node/api.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-172dfc5a").then(t)}},{name:"v-30ab1e90",path:"/gateways/ar-io-node/arnsoip/observer.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-30ab1e90").then(t)}},{name:"v-2fa5878c",path:"/gateways/ar-io-node/env.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-2fa5878c").then(t)}},{name:"v-b292638c",path:"/experimental/frames/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-b292638c").then(t)}},{path:"/experimental/frames/index.html",redirect:"/experimental/frames/"},{path:"/gateways/ar-io-node/experimental/frames.html",redirect:"/experimental/frames/"},{name:"v-e0d70ecc",path:"/gateways/ar-io-node/linux-setup.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-e0d70ecc").then(t)}},{name:"v-6e1e3488",path:"/troubleshooting-observer/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-6e1e3488").then(t)}},{path:"/troubleshooting-observer/index.html",redirect:"/troubleshooting-observer/"},{path:"/gateways/ar-io-node/observer-troubleshooting.html",redirect:"/troubleshooting-observer/"},{name:"v-3f2c877a",path:"/gateways/delegated-staking/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-3f2c877a").then(t)}},{path:"/gateways/delegated-staking/index.html",redirect:"/gateways/delegated-staking/"},{path:"/gateways/ar-io-node/delegated-staking.html",redirect:"/gateways/delegated-staking/"},{name:"v-2151a890",path:"/gateways/ar-io-node/observer-upgrade.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-2151a890").then(t)}},{name:"v-ad4931e0",path:"/gateways/ar-io-node/overview/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-ad4931e0").then(t)}},{path:"/gateways/ar-io-node/overview/index.html",redirect:"/gateways/ar-io-node/overview/"},{path:"/gateways/ar-io-node/overview.html",redirect:"/gateways/ar-io-node/overview/"},{name:"v-79f5d88c",path:"/gateways/ar-io-node/release-notes.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-79f5d88c").then(t)}},{name:"v-4222367a",path:"/gateways/testnet/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-4222367a").then(t)}},{path:"/gateways/testnet/index.html",redirect:"/gateways/testnet/"},{path:"/gateways/ar-io-node/testnet.html",redirect:"/gateways/testnet/"},{name:"v-0cbb8c5a",path:"/troubleshooting/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-0cbb8c5a").then(t)}},{path:"/troubleshooting/index.html",redirect:"/troubleshooting/"},{path:"/gateways/ar-io-node/troubleshooting.html",redirect:"/troubleshooting/"},{name:"v-68d9087a",path:"/gateways/upgrade/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-68d9087a").then(t)}},{path:"/gateways/upgrade/index.html",redirect:"/gateways/upgrade/"},{path:"/gateways/ar-io-node/upgrading.html",redirect:"/gateways/upgrade/"},{name:"v-2aed10ba",path:"/gateways/ar-io-node/windows-setup.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-2aed10ba").then(t)}},{name:"v-37cd1c0a",path:"/glossary.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-37cd1c0a").then(t)}},{name:"v-657f8880",path:"/guides/arns/managing.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-657f8880").then(t)}},{name:"v-d8e9780c",path:"/gateways/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-d8e9780c").then(t)}},{path:"/gateways/index.html",redirect:"/gateways/"},{path:"/gateways/gateways.html",redirect:"/gateways/"},{name:"v-bf3acddc",path:"/guides/arns/overview.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-bf3acddc").then(t)}},{name:"v-401d6fcc",path:"/guides/arns/registering.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-401d6fcc").then(t)}},{name:"v-0d0949e4",path:"/guides/delegated-staking/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-0d0949e4").then(t)}},{path:"/guides/delegated-staking/index.html",redirect:"/guides/delegated-staking/"},{path:"/guides/delegated-staking.html",redirect:"/guides/delegated-staking/"},{name:"v-c8f0091c",path:"/guides/graphql/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-c8f0091c").then(t)}},{path:"/guides/graphql/index.html",redirect:"/guides/graphql/"},{path:"/guides/gql.html",redirect:"/guides/graphql/"},{name:"v-6c1fe4b4",path:"/guides/sdk-release-notes.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-6c1fe4b4").then(t)}},{name:"v-e8e2a6fc",path:"/sdk/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-e8e2a6fc").then(t)}},{path:"/sdk/index.html",redirect:"/sdk/"},{path:"/guides/sdk.html",redirect:"/sdk/"},{name:"v-a40710da",path:"/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-a40710da").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-4d71a012",path:"/introduction/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-4d71a012").then(t)}},{path:"/introduction/index.html",redirect:"/introduction/"},{path:"/introduction.html",redirect:"/introduction/"},{name:"v-3798e78c",path:"/labs/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-3798e78c").then(t)}},{path:"/labs/index.html",redirect:"/labs/"},{path:"/labs.html",redirect:"/labs/"},{name:"v-fc9b918c",path:"/token/",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-fc9b918c").then(t)}},{path:"/token/index.html",redirect:"/token/"},{path:"/token.html",redirect:"/token/"},{name:"v-2c88928c",path:"/gateways/ar-io-node/operation.html",component:Es,beforeEnter:(e,n,t)=>{gs("Layout","v-2c88928c").then(t)}},{path:"*",component:Es}],Fs={title:"ar.io Docs",description:"ar.io documentation",base:"/docs/",headTags:[["link",{rel:"icon",href:"/docs/images/logo.png"}],["meta",{property:"og:title",content:"ar.io Docs Portal"}],["meta",{name:"twitter:title",content:"ar.io Docs Portal"}],["meta",{property:"og:image",content:"https://res.cloudinary.com/dopbvlqgc/image/upload/v1706802732/ario_v2nv53.png"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{name:"twitter:image",content:"https://res.cloudinary.com/dopbvlqgc/image/upload/v1706802732/ario_v2nv53.png"}],["meta",{name:"twitter:site",content:"@ar_io_network"}],["meta",{name:"theme-color",content:"#3eaf7c"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["script",{src:"https://plausible.io/js/script.js",defer:!0,"data-domain":"docs.ar.io"}],["link",{rel:"stylesheet",href:"https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"}],["link",{rel:"stylesheet",href:"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;500;600;700&display=swap"}]],pages:[{title:"Arweave Name System (ArNS)",frontmatter:{permalink:"/arns/"},regularPath:"/arns.html",relativePath:"arns.md",key:"v-c0a4944c",path:"/arns/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:33},{level:2,title:"Name Registry",slug:"name-registry",normalizedTitle:"name registry",charIndex:2257},{level:3,title:"Name Validation Rules",slug:"name-validation-rules",normalizedTitle:"name validation rules",charIndex:4001},{level:2,title:"Arweave Name Token (ANT)",slug:"arweave-name-token-ant",normalizedTitle:"arweave name token (ant)",charIndex:1263},{level:3,title:"Under_Names",slug:"under-names",normalizedTitle:"under_names",charIndex:6568},{level:2,title:"Addressing Variable Market Conditions",slug:"addressing-variable-market-conditions",normalizedTitle:"addressing variable market conditions",charIndex:8254},{level:2,title:"Dynamic Pricing Model",slug:"dynamic-pricing-model",normalizedTitle:"dynamic pricing model",charIndex:9155},{level:3,title:"Pricing Scenarios",slug:"pricing-scenarios",normalizedTitle:"pricing scenarios",charIndex:10311},{level:3,title:"Dynamic Pricing Mechanics",slug:"dynamic-pricing-mechanics",normalizedTitle:"dynamic pricing mechanics",charIndex:10649},{level:3,title:"Step Pricing Mechanics",slug:"step-pricing-mechanics",normalizedTitle:"step pricing mechanics",charIndex:12539}],headersStr:"Overview Name Registry Name Validation Rules Arweave Name Token (ANT) Under_Names Addressing Variable Market Conditions Dynamic Pricing Model Pricing Scenarios Dynamic Pricing Mechanics Step Pricing Mechanics",content:"# Arweave Name System (ArNS)\n\n\n# Overview\n\nArweave URLs and Transaction IDs are long, difficult to remember, and occasionally miscategorized as spam. The Arweave Name System (ArNS) aims to resolve these problems in a decentralized manner. ArNS is a censorship-resistant naming system stored on Arweave, purchased with IO tokens, enabled through AR.IO gateway domains, and used to connect friendly domain names to permaweb dApps, web pages, data, and identities.\n\nIt's like an open, permissionless address book for anything on the permaweb, powered by the aoComputer.\n\nThis system works similarly to traditional DNS services, where users can purchase a name in a registry and DNS Name servers resolve these names to IP addresses. The system shall be flexible and allow users to purchase names permanently or lease them for a defined period based on their use case. With ArNS, the registry is decentralized, permanent, and stored on Arweave (through the aoComputer). This means that apps and infrastructure cannot just read the latest state of the registry but can also check any point in time in the past, creating a “Wayback Machine” of permanent data.\n\nUsers can register a name, like ardrive, within the ArNS Registry. Before owning a name, they must create an Arweave Name Token (ANT), an aoCOmputer process and open-source protocol used by ArNS to track the ownership and control over the name. ANTs allow the owner to set a pointer to any type of permaweb data, like a page, dApp or file, via its Arweave Transaction ID.\n\nEach AR.IO gateway acts as both a smart contract cache and an ArNS Name resolver. They will generate the latest state of both the ArNS Registry and its related ANTs and serve this information rapidly for apps and users. AR.IO gateways will also resolve that name as one of their own subdomains, e.g., https://ardrive.arweave.net and proxy all requests to the associated Arweave Transaction ID. This means that ANTs work across all AR.IO gateways that support them: https://ardrive.ar-io.dev, https://ardrive.g8way.io/, etc.\n\nUsers can easily reference these friendly names in their browsers, and other applications and infrastructure can build rich solutions on top of these ArNS primitives.\n\nArweave Name System Interactions\n\n\n# Name Registry\n\nThe ArNS Registry is a list of all the registered names and their associated ANT AO process Ids. Registering a name requires spending IO tokens based upon the name length and purchase type. The system shall allow users to either lease a name on a yearly basis (maximum up to 5 years) or purchase that name permanently.\n\nThe registry uses the following key rules, embedded within the AR.IO AO process:\n\n * The genesis prices of names are set within the contract itself; these are the starting conditions.\n * Name prices vary based on name length, purchase type (lease vs buy), lease duration, and the current Demand Factor. See the Dynamic Pricing section for more details.\n * Name records in the registry each include a pointer to its Arweave Name Token Smart Contract process address, its lease end time, and undername allocation.\n * Anyone with available IO Tokens can extend any name’s active lease.\n * Anyone with available IO Tokens can purchase undername space for any name.\n * When a lease expires, there is a grace period where it can still be extended before anyone else can repurchase the name with a new ANT.\n\nOnce added, name records cannot be removed from the registry. A leased name’s associated ANT smart contract address cannot be changed until the lease has expired and a new one is purchased. Care must be taken by the owners of permanent name purchases to ensure that their ANT supports an evolve ability should it be desired to add or modify functionality in the future as these name purchases are permanently tied to the associated ANT. Owners of permanently purchased names must understand the consequences of private key loss, which results in not being able to update any data pointers for this name.\n\n\n# Name Validation Rules\n\nAll names registered shall meet the following criteria:\n\n 1. Valid names include only numbers 0-9, characters a-z and dashes.\n 2. Dashes cannot be leading or trailing characters.\n 3. Dashes cannot be used in single character domains.\n 4. 1 character minimum, 51 characters maximum.\n 5. Shall not be an invalid name predesignated to prevent unintentional use/abuse such as www.\n\n\n# Arweave Name Token (ANT)\n\nTo establish ownership of a record in the ArNS Registry, each record contains both a friendly name and a reference to an Arweave Name Token, ANT. Name Tokens are unique aoComputer process tokens that give their owners the ability to update the Arweave Transaction IDs that their associated friendly names point to.\n\nThe ANT process is a standardized contract that contains the specific ArNS Record specification required by AR.IO gateways who resolve ArNS names and their Arweave Transaction IDs. It also contains other basic functionality to establish ownership and the ability to transfer ownership and update the Arweave Transaction ID.\n\nName Tokens have an owner, who can transfer the token and control all of its modifiable settings. These settings include modifying the time to live (ttl) for each name contained in the ANT, and other settings like the ANT Name, Ticker, and an ANT Controller. The controller can only manage the ANT and set and update records, name, and the ticker, but cannot transfer the ANT. Note that ANTs are initially created by an end user, in accordance with network standards, who then has to ability to transfer its ownership or assign a controller as they see fit.\n\nSecondary markets could be created by ecosystem partners that facilitate the trade of Name Tokens. Additionally, tertiary markets could be created that support the leasing of these friendly names to other users. Such markets, if any, would be created by third parties unrelated to and outside of the scope of this paper or control of the Foundation.\n\nThe table below indicates some of the possible interactions with an ANT and who can perform them:\n\nANT INTERACTIONS\nTYPE                           ANT OWNER   ANT CONTROLLER   ANY IO TOKEN HOLDER\nTransfer ANT                   ✔                            \nAdd / remove controllers       ✔                            \nSet records (pointers)         ✔           ✔                \nUpdate records, name, ticker   ✔           ✔                \nExtend / renew lease           ✔           ✔                ✔\nIncrease undernames            ✔           ✔                ✔\n\nANT Interactions\n\n\n# Under_Names\n\nANT owners and controllers can configure multiple subdomains for their registered ArNS name known as “under_names” or more easily written “undernames”. These undernames are assigned individually at the time of registration or can be added on to any registered name at any time.\n\nUndernames use an underscore “_” in place of a more typically used dot “.“ to separate the subdomain from the main ArNS domain.\n\nThis means users can trust dapp_ardrive just like you would trust ardrive since the owner of ardrive is the only one who can configure dapp_ardrive.\n\nSome other features that undernames allow include:\n\n * Undernames are configured in the ANT that is referenced for a given name. ANT owners can add more undernames as subDomains in the ANT’s records object, each of which can point to a different Arweave Transaction ID.\n * Each registered name is provided with an allocation of 10 undernames by default. Additional undername space can be purchased individually and as needed.\n * Other users could never register a name that resembles an undername on ardrive since “_” is not allowed to be registered in the ArNS registry.\n * Another user can register dapp-ardrive but this is a separate ArNS domain altogether. In traditional DNS, it’s like the difference in trusting dapp-ardrive.io(suspicious!) over the legitimate dapp.ardrive.io\n * Undernames can go multiple levels deep, like version_dapp_ardrive but must not be longer than the total MAX_NAME_LENGTH of an ArNS name. The total amount of characters for a name string consisting of undernames and underscore separators is 63 characters.\n\nUndernames give more versatility and utility to owning an ArNS name.\n\n\n# Addressing Variable Market Conditions\n\nThe future market landscape is unpredictable, and the AR.IO Network smart contract is designed to be immutable, operating without governance or mechanisms for manual intervention. In addition, the traditional method of employing a pricing oracle to fix prices relative to a stable currency is not viable due to the infancy of the network as well as the inherent reliance on outside dependencies. Considering this, ArNS is designed to be self-contained and adaptive, ensuring that name prices always mirror network activity and market conditions.\n\nTo achieve this, ArNS incorporates a dynamic pricing model that utilizes a “Demand Factor” to adjust fees in line with ArNS purchase activity.\n\nArNS is designed to ensure that name valuations are always in sync with their true market worth, despite the unchangeable nature of the smart contract it operates on.\n\n\n# Dynamic Pricing Model\n\nThe Arweave Name System (ArNS) introduces an adaptive pricing model for registering names within the AR.IO Network. The core objective is to strike a balance between market demand and pricing fairness, leveraging both static and dynamic pricing elements. The system differentiates prices based on character lengths of names and offers varied purchasing options such as leasing, permanent acquisition, and undernames.\n\nA unique feature of the ArNS pricing mechanism is the integration of a Demand Factor (DF), a dynamic multiplier that adjusts name prices in response to market demand. The DF is determined by comparing the total revenue in IO tokens from the current period to a moving average of revenues from the preceding period window. Depending on whether revenue is above, below, or equal to this average, the DF can increase or decrease. These adjustments are contained within boundaries to prevent extreme pricing variations.\n\nThis comprehensive approach ensures that ArNS names are accessible and reasonably priced, adapting to market trends while maintaining an equitable and maintenance-free registration environment.\n\n\n# Pricing Scenarios\n\nThere are several pricing models for leasing and purchasing names:\n\n * Leased Name: Allows a user to lease a name for a certain duration and have it available for use immediately by the lessee.\n\n * Permanent Name: Allows a user to purchase a name permanently and have it available for use immediately by the owner.\n\n\n# Dynamic Pricing Mechanics\n\nNames are initially priced according to the Genesis Registration Fee (GRF), as set in the AR.IO smart contract, with prices varying based on the length of the name. As the network's activity progresses, these fees give way to Base Registration Fees (BRF), which are modified by periodic step adjustments. The Demand Factor (DF) is a crucial component that dynamically scales prices, fluctuating with the network’s revenue trends.\n\nRevenue in the network accumulates within the Protocol Balance through various streams, such as instant name leases or purchases, lease extensions, and under_name transactions. This cumulative revenue impacts the Demand Factor, which in turn influences the current name prices.\n\nThe DF is adjusted by comparing the recent period’s revenue against a Revenue Moving Average (RMA) from the preceding seven periods. Based on this comparison, the DF can either increase, to reflect greater demand, or decrease, in response to diminished revenue, all within predetermined limits to prevent drastic fluctuations in pricing\n\nThe pricing system articulates various fees:\n\n * The Adjusted Registration Fee (ARF) is the BRF modified by the DF.\n\n * The Annual Fee is set as a proportion of the ARF.\n\n * Instant Lease Registration and Permabuy prices are derived from the ARF, adding the calculated annual fees over the desired years.\n\nThe DF’s modifications are controlled by the network's recent performance against the RMA. An increase in revenue leads to a DF rise, signifying a thriving market demand, while a decrease indicates the opposite. This responsive adjustment mechanism ensures that the pricing model remains aligned with actual market activity.\n\nUnder_names are bundled with name registrations with additional ones available for purchase. The cost for extra under_names is a percentage of the current BRF, altered by the DF.\n\n\n# Step Pricing Mechanics\n\nThe dynamic model shall utilize a “Step Pricing” concept that acts as a stabilizing mechanism to counteract swift and dramatic market shifts, ensuring registration costs remain aligned and predictable. Step pricing adjusts the Base Registration Fees when the Demand Factor reaches its minimum value for an extended period, updating the BRF to align with the current ARF, and resetting the DF to a neutral value. This allows for base prices to lower in extended droughts of low demand or high token value resulting in lower revenue generated to the protocol balance.\n\nThe below chart represents Step Pricing in action:\n\nStep Pricing Action - Declining Demand",normalizedContent:"# arweave name system (arns)\n\n\n# overview\n\narweave urls and transaction ids are long, difficult to remember, and occasionally miscategorized as spam. the arweave name system (arns) aims to resolve these problems in a decentralized manner. arns is a censorship-resistant naming system stored on arweave, purchased with io tokens, enabled through ar.io gateway domains, and used to connect friendly domain names to permaweb dapps, web pages, data, and identities.\n\nit's like an open, permissionless address book for anything on the permaweb, powered by the aocomputer.\n\nthis system works similarly to traditional dns services, where users can purchase a name in a registry and dns name servers resolve these names to ip addresses. the system shall be flexible and allow users to purchase names permanently or lease them for a defined period based on their use case. with arns, the registry is decentralized, permanent, and stored on arweave (through the aocomputer). this means that apps and infrastructure cannot just read the latest state of the registry but can also check any point in time in the past, creating a “wayback machine” of permanent data.\n\nusers can register a name, like ardrive, within the arns registry. before owning a name, they must create an arweave name token (ant), an aocomputer process and open-source protocol used by arns to track the ownership and control over the name. ants allow the owner to set a pointer to any type of permaweb data, like a page, dapp or file, via its arweave transaction id.\n\neach ar.io gateway acts as both a smart contract cache and an arns name resolver. they will generate the latest state of both the arns registry and its related ants and serve this information rapidly for apps and users. ar.io gateways will also resolve that name as one of their own subdomains, e.g., https://ardrive.arweave.net and proxy all requests to the associated arweave transaction id. this means that ants work across all ar.io gateways that support them: https://ardrive.ar-io.dev, https://ardrive.g8way.io/, etc.\n\nusers can easily reference these friendly names in their browsers, and other applications and infrastructure can build rich solutions on top of these arns primitives.\n\narweave name system interactions\n\n\n# name registry\n\nthe arns registry is a list of all the registered names and their associated ant ao process ids. registering a name requires spending io tokens based upon the name length and purchase type. the system shall allow users to either lease a name on a yearly basis (maximum up to 5 years) or purchase that name permanently.\n\nthe registry uses the following key rules, embedded within the ar.io ao process:\n\n * the genesis prices of names are set within the contract itself; these are the starting conditions.\n * name prices vary based on name length, purchase type (lease vs buy), lease duration, and the current demand factor. see the dynamic pricing section for more details.\n * name records in the registry each include a pointer to its arweave name token smart contract process address, its lease end time, and undername allocation.\n * anyone with available io tokens can extend any name’s active lease.\n * anyone with available io tokens can purchase undername space for any name.\n * when a lease expires, there is a grace period where it can still be extended before anyone else can repurchase the name with a new ant.\n\nonce added, name records cannot be removed from the registry. a leased name’s associated ant smart contract address cannot be changed until the lease has expired and a new one is purchased. care must be taken by the owners of permanent name purchases to ensure that their ant supports an evolve ability should it be desired to add or modify functionality in the future as these name purchases are permanently tied to the associated ant. owners of permanently purchased names must understand the consequences of private key loss, which results in not being able to update any data pointers for this name.\n\n\n# name validation rules\n\nall names registered shall meet the following criteria:\n\n 1. valid names include only numbers 0-9, characters a-z and dashes.\n 2. dashes cannot be leading or trailing characters.\n 3. dashes cannot be used in single character domains.\n 4. 1 character minimum, 51 characters maximum.\n 5. shall not be an invalid name predesignated to prevent unintentional use/abuse such as www.\n\n\n# arweave name token (ant)\n\nto establish ownership of a record in the arns registry, each record contains both a friendly name and a reference to an arweave name token, ant. name tokens are unique aocomputer process tokens that give their owners the ability to update the arweave transaction ids that their associated friendly names point to.\n\nthe ant process is a standardized contract that contains the specific arns record specification required by ar.io gateways who resolve arns names and their arweave transaction ids. it also contains other basic functionality to establish ownership and the ability to transfer ownership and update the arweave transaction id.\n\nname tokens have an owner, who can transfer the token and control all of its modifiable settings. these settings include modifying the time to live (ttl) for each name contained in the ant, and other settings like the ant name, ticker, and an ant controller. the controller can only manage the ant and set and update records, name, and the ticker, but cannot transfer the ant. note that ants are initially created by an end user, in accordance with network standards, who then has to ability to transfer its ownership or assign a controller as they see fit.\n\nsecondary markets could be created by ecosystem partners that facilitate the trade of name tokens. additionally, tertiary markets could be created that support the leasing of these friendly names to other users. such markets, if any, would be created by third parties unrelated to and outside of the scope of this paper or control of the foundation.\n\nthe table below indicates some of the possible interactions with an ant and who can perform them:\n\nant interactions\ntype                           ant owner   ant controller   any io token holder\ntransfer ant                   ✔                            \nadd / remove controllers       ✔                            \nset records (pointers)         ✔           ✔                \nupdate records, name, ticker   ✔           ✔                \nextend / renew lease           ✔           ✔                ✔\nincrease undernames            ✔           ✔                ✔\n\nant interactions\n\n\n# under_names\n\nant owners and controllers can configure multiple subdomains for their registered arns name known as “under_names” or more easily written “undernames”. these undernames are assigned individually at the time of registration or can be added on to any registered name at any time.\n\nundernames use an underscore “_” in place of a more typically used dot “.“ to separate the subdomain from the main arns domain.\n\nthis means users can trust dapp_ardrive just like you would trust ardrive since the owner of ardrive is the only one who can configure dapp_ardrive.\n\nsome other features that undernames allow include:\n\n * undernames are configured in the ant that is referenced for a given name. ant owners can add more undernames as subdomains in the ant’s records object, each of which can point to a different arweave transaction id.\n * each registered name is provided with an allocation of 10 undernames by default. additional undername space can be purchased individually and as needed.\n * other users could never register a name that resembles an undername on ardrive since “_” is not allowed to be registered in the arns registry.\n * another user can register dapp-ardrive but this is a separate arns domain altogether. in traditional dns, it’s like the difference in trusting dapp-ardrive.io(suspicious!) over the legitimate dapp.ardrive.io\n * undernames can go multiple levels deep, like version_dapp_ardrive but must not be longer than the total max_name_length of an arns name. the total amount of characters for a name string consisting of undernames and underscore separators is 63 characters.\n\nundernames give more versatility and utility to owning an arns name.\n\n\n# addressing variable market conditions\n\nthe future market landscape is unpredictable, and the ar.io network smart contract is designed to be immutable, operating without governance or mechanisms for manual intervention. in addition, the traditional method of employing a pricing oracle to fix prices relative to a stable currency is not viable due to the infancy of the network as well as the inherent reliance on outside dependencies. considering this, arns is designed to be self-contained and adaptive, ensuring that name prices always mirror network activity and market conditions.\n\nto achieve this, arns incorporates a dynamic pricing model that utilizes a “demand factor” to adjust fees in line with arns purchase activity.\n\narns is designed to ensure that name valuations are always in sync with their true market worth, despite the unchangeable nature of the smart contract it operates on.\n\n\n# dynamic pricing model\n\nthe arweave name system (arns) introduces an adaptive pricing model for registering names within the ar.io network. the core objective is to strike a balance between market demand and pricing fairness, leveraging both static and dynamic pricing elements. the system differentiates prices based on character lengths of names and offers varied purchasing options such as leasing, permanent acquisition, and undernames.\n\na unique feature of the arns pricing mechanism is the integration of a demand factor (df), a dynamic multiplier that adjusts name prices in response to market demand. the df is determined by comparing the total revenue in io tokens from the current period to a moving average of revenues from the preceding period window. depending on whether revenue is above, below, or equal to this average, the df can increase or decrease. these adjustments are contained within boundaries to prevent extreme pricing variations.\n\nthis comprehensive approach ensures that arns names are accessible and reasonably priced, adapting to market trends while maintaining an equitable and maintenance-free registration environment.\n\n\n# pricing scenarios\n\nthere are several pricing models for leasing and purchasing names:\n\n * leased name: allows a user to lease a name for a certain duration and have it available for use immediately by the lessee.\n\n * permanent name: allows a user to purchase a name permanently and have it available for use immediately by the owner.\n\n\n# dynamic pricing mechanics\n\nnames are initially priced according to the genesis registration fee (grf), as set in the ar.io smart contract, with prices varying based on the length of the name. as the network's activity progresses, these fees give way to base registration fees (brf), which are modified by periodic step adjustments. the demand factor (df) is a crucial component that dynamically scales prices, fluctuating with the network’s revenue trends.\n\nrevenue in the network accumulates within the protocol balance through various streams, such as instant name leases or purchases, lease extensions, and under_name transactions. this cumulative revenue impacts the demand factor, which in turn influences the current name prices.\n\nthe df is adjusted by comparing the recent period’s revenue against a revenue moving average (rma) from the preceding seven periods. based on this comparison, the df can either increase, to reflect greater demand, or decrease, in response to diminished revenue, all within predetermined limits to prevent drastic fluctuations in pricing\n\nthe pricing system articulates various fees:\n\n * the adjusted registration fee (arf) is the brf modified by the df.\n\n * the annual fee is set as a proportion of the arf.\n\n * instant lease registration and permabuy prices are derived from the arf, adding the calculated annual fees over the desired years.\n\nthe df’s modifications are controlled by the network's recent performance against the rma. an increase in revenue leads to a df rise, signifying a thriving market demand, while a decrease indicates the opposite. this responsive adjustment mechanism ensures that the pricing model remains aligned with actual market activity.\n\nunder_names are bundled with name registrations with additional ones available for purchase. the cost for extra under_names is a percentage of the current brf, altered by the df.\n\n\n# step pricing mechanics\n\nthe dynamic model shall utilize a “step pricing” concept that acts as a stabilizing mechanism to counteract swift and dramatic market shifts, ensuring registration costs remain aligned and predictable. step pricing adjusts the base registration fees when the demand factor reaches its minimum value for an extended period, updating the brf to align with the current arf, and resetting the df to a neutral value. this allows for base prices to lower in extended droughts of low demand or high token value resulting in lower revenue generated to the protocol balance.\n\nthe below chart represents step pricing in action:\n\nstep pricing action - declining demand",charsets:{}},{title:"Community Resources",frontmatter:{prev:!1,next:!1},regularPath:"/community-resources.html",relativePath:"community-resources.md",key:"v-b8cb630c",path:"/community-resources.html",headersStr:null,content:"# Community Resources\n\nar.io Github\n\nar.io Twitter\n\nar.io Discord\n\nContact Us Directly",normalizedContent:"# community resources\n\nar.io github\n\nar.io twitter\n\nar.io discord\n\ncontact us directly",charsets:{}},{title:"Arweave",frontmatter:{permalink:"/arweave/"},regularPath:"/arweave.html",relativePath:"arweave.md",key:"v-038b01fa",path:"/arweave/",headers:[{level:2,title:"The Permanence Pie",slug:"the-permanence-pie",normalizedTitle:"the permanence pie",charIndex:14},{level:2,title:"What Is Arweave",slug:"what-is-arweave",normalizedTitle:"what is arweave",charIndex:1451},{level:2,title:"Gateways",slug:"gateways",normalizedTitle:"gateways",charIndex:3775},{level:2,title:"aoComputer",slug:"aocomputer",normalizedTitle:"aocomputer",charIndex:5703},{level:2,title:"The Permaweb",slug:"the-permaweb",normalizedTitle:"the permaweb",charIndex:6659},{level:2,title:"References and Further Reading",slug:"references-and-further-reading",normalizedTitle:"references and further reading",charIndex:7195}],headersStr:"The Permanence Pie What Is Arweave Gateways aoComputer The Permaweb References and Further Reading",content:'# Arweave\n\n\n# The Permanence Pie\n\nThe permanent data storage ecosystem can be thought of as a three-tiered arrangement of protocols, services, and applications – dubbed here as “The Permanence Pie”.\n\nDiagram 1: The Shell of Permanence Pie\n\nThe base layer of that pie is the Arweave protocol and network, which is the backbone of the permanent data storage ecosystem. It provides the infrastructure for data to be stored on the network in a decentralized manner and incentivizes nodes to keep the data stored for long periods of time.\n\nThe second layer is made up of services that sit on top of the Arweave protocol and network. These services include gateways, data retrieval services, and computation that help to provide a seamless and functional experience for users, creators, and developers.\n\nFinally, the top layer of the pie consists of applications that utilize the data stored on the Arweave network. This includes everything from simple applications that allow users to access and view their data to complex, decentralized applications that use the Arweave network as their backbone.\n\nEach layer of the Permanence Pie is crucial to the overall success and growth of the permanent data storage ecosystem. The Arweave protocol and network provide the foundation for data storage, the services layer helps to facilitate data retrieval and usage, and the application layer brings the benefits of the ecosystem to users and developers alike.\n\n\n# What Is Arweave\n\nArweave is a decentralized Layer 1 data storage protocol optimized for long-term permanent storage through its unique proof of access mechanism and tokenomic endowment model. It can be thought of as a global, permissionless hard drive.\n\nThe information stored on Arweave is immutable and globally replicated by miner nodes. Instead of a traditional blockchain ledger which links blocks of transactions together in linear sequence, Arweave arranges blocks in a web known as the blockweave. These miner nodes secure the blockweave by operating the Succinct Proof of Random Access (SPoRA) algorithm. SPoRA requires miners to prove that they have access to recall randomly selected bits of weave data in order to produce and share a block. If successful, miners are rewarded in Arweave’s native AR token. These token rewards are derived from transaction fees as well as the network’s storage endowment. The endowment is a protocol-controlled pool of tokens designed to fund the projected cost of storage for 200+ years.\n\nDiagram 2: Arweave - The Base Storage Layer\n\nArweave is file type agnostic – any type of file ranging from simple text files to family photos to complex web applications and archival databases can be stored on the network. To upload data, users must pay an amount of AR proportional to the size of the files being uploaded. Arweave is unique when compared with other decentralized storage solutions in that users only pay once to upload their files, then that is it – the files will be stored in perpetuity without any additional upkeep or subscription fees paid by the user.\n\nThe Arweave protocol is designed to handle 1,000 base layer transactions per block with new blocks being mined roughly every two minutes. Each transaction may also store an unbounded number of signed, non-AR-transacting data items assembled into a bundle (i.e., a bundled data item). Since its launch in 2018, this scalable architecture has allowed the network\'s weave size (total data stored on the network) to grow to 140.8 TB with approximately 1.5 billion base layer transactions and bundled data items submitted from over 181k unique wallets. The Arweave protocol endowment has received 60.7k AR to cover the projected storage costs with a cost of storage 0.858 AR/GiB. *\n\n* data as of November 20, 2023\n\n\n# Gateways\n\nGateways act as the front door to the permaweb. They are infrastructure utilities that sit above the base storage layer and allow users to write, access, and query the information stored on Arweave. Gateways are specialized nodes responsible for data ingest (data "in") and data egress (data "out").\n\nFor access / egress, gateways allow for data retrieval, caching, and serving as well as indexing transactions into a database that can be easily queried at scale. With bundling functionality, gateways can act as services allowing users to write and seed new data the Arweave network.\n\nThese "in and out" functions are not performed by the Arweave mining nodes which are optimized for securing the Layer 1 blockweave and replicating information throughout the network through a mechanism known as Wildfire.\n\nDiagram 3: Gateways - The Ingest and Access Component\n\nBy taking on these responsibilities, gateways allow low cost and maintenance free hosting of static and dynamic content for users, creators, and developers. But there are costs associated with operating a gateway and Arweave does not offer any tokenomic incentives to offset these expenses. As the permaweb grows, these costs can become very significant.\n\nArweave.net, the primary community gateway, has scaled to meet the needs of the entire Arweave ecosystem and stored the entire weave. Over the last 6 months, this gateway indexed and cached approximately 3.4 million base layer transactions and bundled data items per day, served 233 million requests for data and node information per day, and responded to 3.2 million GQL queries per day. *\n\nGateway use cases, and the types of administrators who operate them, can range from at-home projects hosted by hobbyists to larger decentralized platforms and dApps run by small teams, all the way up to scaled out environments capable of supporting enterprise offerings.\n\n* data as of November 20, 2023\n\n\n# aoComputer\n\nAO is a global supercomputer built on Arweave. This actor-oriented machine is a single, unified computing environment, hosted on a heterogenous set of nodes in a distributed network. AO is designed to offer an environment in which an arbitrary number of parallel processes can be resident, coordinating through an open message passing layer. This message passing standard connects the machine\'s independently operating processes together into a \'web\' -- in the same way that websites operate on independent servers but are conjoined into a cohesive, unified experience via hyperlinks.\n\nDiagram 4: AO - The Supercomputer and Smart Contract Protocol\n\nWith AO, developers can create processes that act as smart contracts with token-like properties which can then be used to incorporate incentive structures into applications and infrastructure. The AR.IO Network leverages this technology for development of its network protocol and IO token.\n\n\n# The Permaweb\n\nThe permaweb is the third and final layer of the permanence pie. The permaweb stands for the permanent web, a collection of all the webpages, apps, and files stored on top of the Arweave network and enlivened with the functionality of the AR.IO Network. For users and builders, the permaweb offers low-cost, zero maintenance, permanent hosting of their web apps, files, and web pages.\n\nDiagram 5: The Permanence Pie\n\nAR.IO is a global network, protocol, and currency built on top of Arweave that enables the permaweb.\n\n\n# References and Further Reading\n\nThe following resources were used as reference material for this section and can provide the interested reader with additional information:\n\n * The ArWiki\n\n * Arweave GitHub repository\n\n * aoComputer',normalizedContent:'# arweave\n\n\n# the permanence pie\n\nthe permanent data storage ecosystem can be thought of as a three-tiered arrangement of protocols, services, and applications – dubbed here as “the permanence pie”.\n\ndiagram 1: the shell of permanence pie\n\nthe base layer of that pie is the arweave protocol and network, which is the backbone of the permanent data storage ecosystem. it provides the infrastructure for data to be stored on the network in a decentralized manner and incentivizes nodes to keep the data stored for long periods of time.\n\nthe second layer is made up of services that sit on top of the arweave protocol and network. these services include gateways, data retrieval services, and computation that help to provide a seamless and functional experience for users, creators, and developers.\n\nfinally, the top layer of the pie consists of applications that utilize the data stored on the arweave network. this includes everything from simple applications that allow users to access and view their data to complex, decentralized applications that use the arweave network as their backbone.\n\neach layer of the permanence pie is crucial to the overall success and growth of the permanent data storage ecosystem. the arweave protocol and network provide the foundation for data storage, the services layer helps to facilitate data retrieval and usage, and the application layer brings the benefits of the ecosystem to users and developers alike.\n\n\n# what is arweave\n\narweave is a decentralized layer 1 data storage protocol optimized for long-term permanent storage through its unique proof of access mechanism and tokenomic endowment model. it can be thought of as a global, permissionless hard drive.\n\nthe information stored on arweave is immutable and globally replicated by miner nodes. instead of a traditional blockchain ledger which links blocks of transactions together in linear sequence, arweave arranges blocks in a web known as the blockweave. these miner nodes secure the blockweave by operating the succinct proof of random access (spora) algorithm. spora requires miners to prove that they have access to recall randomly selected bits of weave data in order to produce and share a block. if successful, miners are rewarded in arweave’s native ar token. these token rewards are derived from transaction fees as well as the network’s storage endowment. the endowment is a protocol-controlled pool of tokens designed to fund the projected cost of storage for 200+ years.\n\ndiagram 2: arweave - the base storage layer\n\narweave is file type agnostic – any type of file ranging from simple text files to family photos to complex web applications and archival databases can be stored on the network. to upload data, users must pay an amount of ar proportional to the size of the files being uploaded. arweave is unique when compared with other decentralized storage solutions in that users only pay once to upload their files, then that is it – the files will be stored in perpetuity without any additional upkeep or subscription fees paid by the user.\n\nthe arweave protocol is designed to handle 1,000 base layer transactions per block with new blocks being mined roughly every two minutes. each transaction may also store an unbounded number of signed, non-ar-transacting data items assembled into a bundle (i.e., a bundled data item). since its launch in 2018, this scalable architecture has allowed the network\'s weave size (total data stored on the network) to grow to 140.8 tb with approximately 1.5 billion base layer transactions and bundled data items submitted from over 181k unique wallets. the arweave protocol endowment has received 60.7k ar to cover the projected storage costs with a cost of storage 0.858 ar/gib. *\n\n* data as of november 20, 2023\n\n\n# gateways\n\ngateways act as the front door to the permaweb. they are infrastructure utilities that sit above the base storage layer and allow users to write, access, and query the information stored on arweave. gateways are specialized nodes responsible for data ingest (data "in") and data egress (data "out").\n\nfor access / egress, gateways allow for data retrieval, caching, and serving as well as indexing transactions into a database that can be easily queried at scale. with bundling functionality, gateways can act as services allowing users to write and seed new data the arweave network.\n\nthese "in and out" functions are not performed by the arweave mining nodes which are optimized for securing the layer 1 blockweave and replicating information throughout the network through a mechanism known as wildfire.\n\ndiagram 3: gateways - the ingest and access component\n\nby taking on these responsibilities, gateways allow low cost and maintenance free hosting of static and dynamic content for users, creators, and developers. but there are costs associated with operating a gateway and arweave does not offer any tokenomic incentives to offset these expenses. as the permaweb grows, these costs can become very significant.\n\narweave.net, the primary community gateway, has scaled to meet the needs of the entire arweave ecosystem and stored the entire weave. over the last 6 months, this gateway indexed and cached approximately 3.4 million base layer transactions and bundled data items per day, served 233 million requests for data and node information per day, and responded to 3.2 million gql queries per day. *\n\ngateway use cases, and the types of administrators who operate them, can range from at-home projects hosted by hobbyists to larger decentralized platforms and dapps run by small teams, all the way up to scaled out environments capable of supporting enterprise offerings.\n\n* data as of november 20, 2023\n\n\n# aocomputer\n\nao is a global supercomputer built on arweave. this actor-oriented machine is a single, unified computing environment, hosted on a heterogenous set of nodes in a distributed network. ao is designed to offer an environment in which an arbitrary number of parallel processes can be resident, coordinating through an open message passing layer. this message passing standard connects the machine\'s independently operating processes together into a \'web\' -- in the same way that websites operate on independent servers but are conjoined into a cohesive, unified experience via hyperlinks.\n\ndiagram 4: ao - the supercomputer and smart contract protocol\n\nwith ao, developers can create processes that act as smart contracts with token-like properties which can then be used to incorporate incentive structures into applications and infrastructure. the ar.io network leverages this technology for development of its network protocol and io token.\n\n\n# the permaweb\n\nthe permaweb is the third and final layer of the permanence pie. the permaweb stands for the permanent web, a collection of all the webpages, apps, and files stored on top of the arweave network and enlivened with the functionality of the ar.io network. for users and builders, the permaweb offers low-cost, zero maintenance, permanent hosting of their web apps, files, and web pages.\n\ndiagram 5: the permanence pie\n\nar.io is a global network, protocol, and currency built on top of arweave that enables the permaweb.\n\n\n# references and further reading\n\nthe following resources were used as reference material for this section and can provide the interested reader with additional information:\n\n * the arwiki\n\n * arweave github repository\n\n * aocomputer',charsets:{}},{title:"ARCSS",frontmatter:{permalink:"/arcss",prev:!1},regularPath:"/concepts/arcss.html",relativePath:"concepts/arcss.md",key:"v-1ba5eb6a",path:"/arcss/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:12},{level:2,title:"Browser Integration",slug:"browser-integration",normalizedTitle:"browser integration",charIndex:572},{level:2,title:"Internal Application Integration",slug:"internal-application-integration",normalizedTitle:"internal application integration",charIndex:1002},{level:2,title:"Benefits of ARCSS Over Hardcoded Gateway Links",slug:"benefits-of-arcss-over-hardcoded-gateway-links",normalizedTitle:"benefits of arcss over hardcoded gateway links",charIndex:1889},{level:2,title:"Use Cases",slug:"use-cases",normalizedTitle:"use cases",charIndex:2660},{level:3,title:"Decentralized Web Hosting with Flexible Access",slug:"decentralized-web-hosting-with-flexible-access",normalizedTitle:"decentralized web hosting with flexible access",charIndex:2674},{level:3,title:"Digital Archives and Preservation with Enhanced Sharing",slug:"digital-archives-and-preservation-with-enhanced-sharing",normalizedTitle:"digital archives and preservation with enhanced sharing",charIndex:3035},{level:3,title:"Media Sharing Platforms with Consistent Content Delivery",slug:"media-sharing-platforms-with-consistent-content-delivery",normalizedTitle:"media sharing platforms with consistent content delivery",charIndex:3469},{level:3,title:"Decentralized Applications (DApps) with Reliable Front-End Accessibility",slug:"decentralized-applications-dapps-with-reliable-front-end-accessibility",normalizedTitle:"decentralized applications (dapps) with reliable front-end accessibility",charIndex:3847},{level:2,title:"How it Works",slug:"how-it-works",normalizedTitle:"how it works",charIndex:4243},{level:3,title:"Transaction ID",slug:"transaction-id",normalizedTitle:"transaction id",charIndex:1089},{level:3,title:"ArNS",slug:"arns",normalizedTitle:"arns",charIndex:4583},{level:2,title:"Wayfinder",slug:"wayfinder",normalizedTitle:"wayfinder",charIndex:4949},{level:3,title:"v0.0.10",slug:"v0-0-10",normalizedTitle:"v0.0.10",charIndex:5077},{level:3,title:"Key Features",slug:"key-features",normalizedTitle:"key features",charIndex:6346},{level:3,title:"Use Cases",slug:"use-cases-2",normalizedTitle:"use cases",charIndex:2660}],headersStr:"Overview Browser Integration Internal Application Integration Benefits of ARCSS Over Hardcoded Gateway Links Use Cases Decentralized Web Hosting with Flexible Access Digital Archives and Preservation with Enhanced Sharing Media Sharing Platforms with Consistent Content Delivery Decentralized Applications (DApps) with Reliable Front-End Accessibility How it Works Transaction ID ArNS Wayfinder v0.0.10 Key Features Use Cases",content:"# ARCSS\n\n\n# Overview\n\nThe ARCSS protocol is a URI scheme designed to translate requests for Arweave content into an https:// request. Essentially, ARCSS allows for transforming traditional Arweave URLs like https://arweave.net/long-txid into more concise and user-friendly forms such as ar://txid or ar://arns-name. When combined with the AR.IO WayFinder browser extension, the request can be directed to any number of functional AR.IO Gateways to serve the content.\n\nAn early technical breakdown of ARCSS, created by Arweave community member DMac, can be found here.\n\n\n# Browser Integration\n\nARCSS is currently facilitated via the WayFinder browser extension or internal application integration. The intention is to lead popular web browsers like Chrome and Brave towards a direct integration of ARCSS, similar to recent integrations of the ipfs:// protocol. Such integration would remove the need for a client-side extension and boost developers' confidence in embedding ARCSS in their websites.\n\n\n# Internal Application Integration\n\nCertain websites or apps may want to resolve Arweave Transaction ID's (TxId) internally. In these scenarios, they can process ARCSS internally without depending on browser support or WayFinder. A prime example is opensea.io. Opensea, an NFT marketplace, frequently imports NFT metadata from external sources. If metadata employs ARCSS, Opensea internally resolves these, presenting content without redirecting users through an https:// link.\n\nThere are two main approaches to resolving ARCSS:\n\n 1. Convert ARCSS into a request directed at a predefined Arweave gateway.\n 2. Retrieve a list of active AR.IO Gateways from the GAR by reading the contract state, or other available resources, and then fetch content from a gateway on the list.\n\nEach strategy has its benefits and challenges, necessitating careful evaluation based on specific use cases.\n\n\n# Benefits of ARCSS Over Hardcoded Gateway Links\n\nUsing ARCSS offers several advantages over hardcoded links to a specific gateway:\n\n 1. Flexibility: ARCSS can be routed through any available AR.IO Gateway, ensuring content remains accessible even if a specific gateway is down or congested.\n 2. Decentralization: By not being tied to a single gateway, ARCSS embodies the decentralized spirit of the web, reducing potential censorship points.\n 3. Ease of Maintenance: Developers and content creators don't need to modify links if a gateway changes its URL or becomes unavailable. The WayFinder extension handles routing to an active gateway.\n 4. Consistency: Users always receive the same content, regardless of the gateway used, ensuring a consistent user experience.\n\n\n# Use Cases\n\n\n# Decentralized Web Hosting with Flexible Access\n\nWith ARCSS, not only can websites be hosted on the Arweave network, but their accessibility is also enhanced. By using ARCSS, web developers can ensure that if a specific AR.IO Gateway is down, the content can still be accessed through another gateway, offering a more reliable and resilient user experience.\n\n\n# Digital Archives and Preservation with Enhanced Sharing\n\nDigitally archiving public domain works, especially in light of events like \"banned books week\", becomes more efficient with ARCSS. Historical institutions or enthusiasts can easily share specific ARCSS links to documents or media. Unlike hardcoded links which might break if a specific gateway goes offline, ARCSS ensures that the content remains consistently accessible.\n\n\n# Media Sharing Platforms with Consistent Content Delivery\n\nFor platforms hosting user-generated content, ARCSS provides not just decentralized hosting but also a guarantee of content delivery. Even if a content piece becomes viral and one gateway gets congested, ARCSS ensures that users can still access the content through another gateway, providing a seamless experience.\n\n\n# Decentralized Applications (DApps) with Reliable Front-End Accessibility\n\nDApps, while benefiting from Arweave's permanent hosting, can further ensure their front-end remains consistently accessible to users by using ARCSS. If a DApp's front-end is accessed frequently, causing strain on one gateway, ARCSS can help ensure the load is distributed, and the DApp remains online and functional.\n\n\n# How it Works\n\n\n# Transaction ID\n\nTo access content tied to an Arweave Transaction ID (TxId), simply append the TxId to ar://:\n\nar://qI19W6spw-kzOGl4qUMNp2gwFH2EBfDXOFsjkcNyK9A\n\n\nInputting this into a WayFinder-equipped browser will route your request through the right AR.IO Gateway, translating it as per your Routing Method settings.\n\n\n# ArNS\n\nFetching content via an Arweave Name System (ArNS) name is straightforward. Attach the ArNS name to ar://:\n\nar://good-morning\n\n\nThe ARCSS protocol, along with the WayFinder extension, discerns between TxIds and ArNS names. Once the suitable https:// request is formulated, the chosen gateway translates the ArNS name based on the ArNS aoComputer contract.\n\n\n# Wayfinder\n\nThe AR.IO WayFinder browser extension is a browser extension designed to facilitate the resolving of ar:// urls.\n\n\n# v0.0.10\n\nAs of v0.0.10, Wayfinder supports the resolution of TXT records to Arwevae content on top level domains. This innovative feature leverages DNS TXT records to associate Arweave transaction IDs with human-readable domain names, facilitating intuitive and memorable access to permaweb content. By simply entering an AR:// URL with a domain name, Wayfinder resolves the corresponding Arweave transaction ID through DNS TXT records, redirecting users directly to the content hosted on the Arweave network.\n\nSetup: Owners of a domain can set a TXT record for that domain following the format ARTX <Arweave TXID>.\n\nAR:// Redirection: With a TXT record set properly, whenever a user (who has Wayfinder installed) enters an AR:// URL containing a domain name (e.g., ar://example.com), Wayfinder performs a DNS lookup for that TXT record in order to redirect to the Arweave content. The lookup is completed through a secure DNS-over-HTTPS query to ensure privacy and integrity.\n\nDynamic Content Resolution: After retrieving the TXT record, Wayfinder extracts that Arweave transaction ID and dynamically redirects the user to the content on the permaweb. This process is transparent to the user, providing a seamless experience as if accessing a traditional website.\n\n\n# Key Features\n\n * Gasless: TXT records can be set without any onchain transactions that would require gas fees.\n * Easy Integration: Domain owners can easily link their permaweb content to their domains, making it accessible through a simple AR:// URL.\n * Dyncamic Content Access: Content links can be updated in real-time through DNS TXT records, without requiring any changes to the AR:// URL itself.\n * Enhanced User Experience: Offers users a familiar and easy-to-remember way to access permaweb content, leveraging standard web domain names.\n * Security and Privacy: Secure DNS-over-HTTPS queries for DNS lookups protect user privacy and enhances security.\n\n\n# Use Cases\n\n * Branded Content Access: Companies and individuals can brand their permaweb content, making it accessible through their domain, enhancing brand visibility and user trust.\n * Dynamic Content Updates: Domain owners can easily update what Permaweb content their AR:// URL resolves to, which is ideal for frequently updated resources like documents, blogs, and application interfaces.\n * Educational and Informational Resources: Educational institutions and information providers can make their resources permanently available on the permaweb, accessible through simple, memorable URLs.\n\nThis feature marks a significant advancement in making decentralized content more accessible and user-friendly, bridging the gap between traditional internet usability and the permaweb’s permanence and censorship-resistant nature.",normalizedContent:"# arcss\n\n\n# overview\n\nthe arcss protocol is a uri scheme designed to translate requests for arweave content into an https:// request. essentially, arcss allows for transforming traditional arweave urls like https://arweave.net/long-txid into more concise and user-friendly forms such as ar://txid or ar://arns-name. when combined with the ar.io wayfinder browser extension, the request can be directed to any number of functional ar.io gateways to serve the content.\n\nan early technical breakdown of arcss, created by arweave community member dmac, can be found here.\n\n\n# browser integration\n\narcss is currently facilitated via the wayfinder browser extension or internal application integration. the intention is to lead popular web browsers like chrome and brave towards a direct integration of arcss, similar to recent integrations of the ipfs:// protocol. such integration would remove the need for a client-side extension and boost developers' confidence in embedding arcss in their websites.\n\n\n# internal application integration\n\ncertain websites or apps may want to resolve arweave transaction id's (txid) internally. in these scenarios, they can process arcss internally without depending on browser support or wayfinder. a prime example is opensea.io. opensea, an nft marketplace, frequently imports nft metadata from external sources. if metadata employs arcss, opensea internally resolves these, presenting content without redirecting users through an https:// link.\n\nthere are two main approaches to resolving arcss:\n\n 1. convert arcss into a request directed at a predefined arweave gateway.\n 2. retrieve a list of active ar.io gateways from the gar by reading the contract state, or other available resources, and then fetch content from a gateway on the list.\n\neach strategy has its benefits and challenges, necessitating careful evaluation based on specific use cases.\n\n\n# benefits of arcss over hardcoded gateway links\n\nusing arcss offers several advantages over hardcoded links to a specific gateway:\n\n 1. flexibility: arcss can be routed through any available ar.io gateway, ensuring content remains accessible even if a specific gateway is down or congested.\n 2. decentralization: by not being tied to a single gateway, arcss embodies the decentralized spirit of the web, reducing potential censorship points.\n 3. ease of maintenance: developers and content creators don't need to modify links if a gateway changes its url or becomes unavailable. the wayfinder extension handles routing to an active gateway.\n 4. consistency: users always receive the same content, regardless of the gateway used, ensuring a consistent user experience.\n\n\n# use cases\n\n\n# decentralized web hosting with flexible access\n\nwith arcss, not only can websites be hosted on the arweave network, but their accessibility is also enhanced. by using arcss, web developers can ensure that if a specific ar.io gateway is down, the content can still be accessed through another gateway, offering a more reliable and resilient user experience.\n\n\n# digital archives and preservation with enhanced sharing\n\ndigitally archiving public domain works, especially in light of events like \"banned books week\", becomes more efficient with arcss. historical institutions or enthusiasts can easily share specific arcss links to documents or media. unlike hardcoded links which might break if a specific gateway goes offline, arcss ensures that the content remains consistently accessible.\n\n\n# media sharing platforms with consistent content delivery\n\nfor platforms hosting user-generated content, arcss provides not just decentralized hosting but also a guarantee of content delivery. even if a content piece becomes viral and one gateway gets congested, arcss ensures that users can still access the content through another gateway, providing a seamless experience.\n\n\n# decentralized applications (dapps) with reliable front-end accessibility\n\ndapps, while benefiting from arweave's permanent hosting, can further ensure their front-end remains consistently accessible to users by using arcss. if a dapp's front-end is accessed frequently, causing strain on one gateway, arcss can help ensure the load is distributed, and the dapp remains online and functional.\n\n\n# how it works\n\n\n# transaction id\n\nto access content tied to an arweave transaction id (txid), simply append the txid to ar://:\n\nar://qi19w6spw-kzogl4qumnp2gwfh2ebfdxofsjkcnyk9a\n\n\ninputting this into a wayfinder-equipped browser will route your request through the right ar.io gateway, translating it as per your routing method settings.\n\n\n# arns\n\nfetching content via an arweave name system (arns) name is straightforward. attach the arns name to ar://:\n\nar://good-morning\n\n\nthe arcss protocol, along with the wayfinder extension, discerns between txids and arns names. once the suitable https:// request is formulated, the chosen gateway translates the arns name based on the arns aocomputer contract.\n\n\n# wayfinder\n\nthe ar.io wayfinder browser extension is a browser extension designed to facilitate the resolving of ar:// urls.\n\n\n# v0.0.10\n\nas of v0.0.10, wayfinder supports the resolution of txt records to arwevae content on top level domains. this innovative feature leverages dns txt records to associate arweave transaction ids with human-readable domain names, facilitating intuitive and memorable access to permaweb content. by simply entering an ar:// url with a domain name, wayfinder resolves the corresponding arweave transaction id through dns txt records, redirecting users directly to the content hosted on the arweave network.\n\nsetup: owners of a domain can set a txt record for that domain following the format artx <arweave txid>.\n\nar:// redirection: with a txt record set properly, whenever a user (who has wayfinder installed) enters an ar:// url containing a domain name (e.g., ar://example.com), wayfinder performs a dns lookup for that txt record in order to redirect to the arweave content. the lookup is completed through a secure dns-over-https query to ensure privacy and integrity.\n\ndynamic content resolution: after retrieving the txt record, wayfinder extracts that arweave transaction id and dynamically redirects the user to the content on the permaweb. this process is transparent to the user, providing a seamless experience as if accessing a traditional website.\n\n\n# key features\n\n * gasless: txt records can be set without any onchain transactions that would require gas fees.\n * easy integration: domain owners can easily link their permaweb content to their domains, making it accessible through a simple ar:// url.\n * dyncamic content access: content links can be updated in real-time through dns txt records, without requiring any changes to the ar:// url itself.\n * enhanced user experience: offers users a familiar and easy-to-remember way to access permaweb content, leveraging standard web domain names.\n * security and privacy: secure dns-over-https queries for dns lookups protect user privacy and enhances security.\n\n\n# use cases\n\n * branded content access: companies and individuals can brand their permaweb content, making it accessible through their domain, enhancing brand visibility and user trust.\n * dynamic content updates: domain owners can easily update what permaweb content their ar:// url resolves to, which is ideal for frequently updated resources like documents, blogs, and application interfaces.\n * educational and informational resources: educational institutions and information providers can make their resources permanently available on the permaweb, accessible through simple, memorable urls.\n\nthis feature marks a significant advancement in making decentralized content more accessible and user-friendly, bridging the gap between traditional internet usability and the permaweb’s permanence and censorship-resistant nature.",charsets:{}},{title:"Manifests",frontmatter:{permalink:"/manifests",sidebarDepth:3},regularPath:"/concepts/manifests.html",relativePath:"concepts/manifests.md",key:"v-aaa9b6f4",path:"/manifests/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:16},{level:2,title:"What is a Manifest",slug:"what-is-a-manifest",normalizedTitle:"what is a manifest",charIndex:2339},{level:3,title:"Sample Manifest",slug:"sample-manifest",normalizedTitle:"sample manifest",charIndex:2731},{level:3,title:"How it Works",slug:"how-it-works",normalizedTitle:"how it works",charIndex:3566},{level:3,title:"Example Usage",slug:"example-usage",normalizedTitle:"example usage",charIndex:3832},{level:2,title:"Specifications",slug:"specifications",normalizedTitle:"specifications",charIndex:4872},{level:3,title:"Transaction Tags",slug:"transaction-tags",normalizedTitle:"transaction tags",charIndex:4891},{level:3,title:"Transaction Data",slug:"transaction-data",normalizedTitle:"transaction data",charIndex:5605}],headersStr:"Overview What is a Manifest Sample Manifest How it Works Example Usage Specifications Transaction Tags Transaction Data",content:'# Manifests\n\n\n# Overview\n\nar.io Gateways support friendly-path-name routing for data on Arweave via Manifests. This greatly improves the programmability of data relationships. Consider an illustrative example where data stored on Arweave and accessed like this:\n\nhttp://<gateway domain>/cG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI (txID of a website\'s index.html)\nhttp://<gateway domain>/3zFsd7bkCAUtXUKBQ4XiPiQvpLVKfZ6kiLNt2XVSfoV (txID of its js/style.css)\nhttp://<gateway domain>/or0_fRYFcQYWh-QsozygI5Zoamw_fUsYu2w8_X1RkYZ (txID of its assets/img/logo.png)\n\n\ncan instead be accessed like this:\n\nhttp://<gateway domain>/<txId of manifest> (resolves to the txID of index.html)\nhttp://<gateway domain>/<txId of manifest>/js/style.css\nhttp://<gateway domain>/<txId of manifest>/assets/img/logo.png\n\n\nNFT collections also benefit from manifest-based routing:\n\nhttp://<gateway domain>/<txId of NFT collection image manifest>/0.png\nhttp://<gateway domain>/<txId of NFT collection image manifest>/1.png\nhttp://<gateway domain>/<txId of NFT collection image manifest>/2.png\n... and so on.\n\n\nar.io gateways are capable of resolving manifest paths in a relative manner. An HTML page loading assets from Arweave would be very difficult to develop, maintain, and harden against hosting domains leaving existence if assets had to be linked to by a fully qualified domain name and an Arweave data item ID as the path. For example:\n\n<img src="https://arweave.dev/3zFsd7bkCAUtXUKBQ4XiPiQvpLVKfZ6kiLNt2XVSfoV">\n\n\nManifests allow HTML pages to use relative paths to assets with friendly names so that the document is easy to read, maintain, and host across any ar.io domain. For example:\n\n<img src="./logo.png">\n\n\nRelative routing eliminates the need for every link to contain the full Arweave transaction ID and fully qualified domain name. This makes the HTML more readable and ensures that links remain valid even if the hosting domain changes. If index.html needed to access js/style.css, the relative link ./js/style.css could be used instead of <txId>/js/style.css. This relative routing is incredibly useful for linking together files in a way that allows functional websites to be hosted entirely on Arweave.\n\nLearn more about relative path routing and structuring files into a permanently hosted website in ArDrive\'s decentralized app guide\n\n\n# What is a Manifest\n\nManifests, also known as "Path Manifests" or "Arweave Manifests," are JSON objects that connect various Arweave data items and define relational paths for easy navigation. A common use case for manifests is permanently hosting websites on Arweave by linking all necessary files together. An ar.io gateway can then resolve the manifest into a fully functional website.\n\n\n# Sample Manifest\n\n{\n  "manifest": "arweave/paths",\n  "version": "0.2.0",\n  "index": {\n    "path": "index.html"\n  },\n  "fallback": {\n    "id": "iXo3LSfVKVtXUKBzfZ4d7bkCAp6kiLNt2XVUFsPiQvQ"\n  },\n  "paths": {\n    "index.html": {\n      "id": "cG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI"\n    },\n    "404.html": {\n      "id": "iXo3LSfVKVtXUKBzfZ4d7bkCAp6kiLNt2XVUFsPiQvQ"\n    },\n    "js/style.css": {\n      "id": "3zFsd7bkCAUtXUKBQ4XiPiQvpLVKfZ6kiLNt2XVSfoV"\n    },\n    "css/style.css": {\n      "id": "sPiQvpAUXLVK3zF6iXSfo7bkCVQkiLNt24dVtXUKBfZ"\n    },\n    "css/mobile.css": {\n      "id": "fZ4d7bkCAUiXSfo3zFsPiQvpLVKVtXUKB6kiLNt2XVQ"\n    },\n    "assets/img/logo.png": {\n      "id": "or0_fRYFcQYWh-QsozygI5Zoamw_fUsYu2w8_X1RkYZ"\n    },\n    "assets/img/icon.png": {\n      "id": "0543SMRGYuGKTaqLzmpOyK4AxAB96Fra2guHzYxjRGo"\n    }\n  }\n}\n\n\n\n# How it Works\n\nA resolver, typically an ar.io gateway, resolves URLs requesting content based on a manifest transaction ID to the corresponding path key in the paths object. The URL schema for this type of request is https://<gateway url>/<manifest TxId>/<path>.\n\n\n# Example Usage\n\nAssume the manifest above is uploaded to Arweave with the transaction ID UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk. The below table shows https requests to the ar.io gateway arweave.dev requesting various endpoints on the manifest transaction Id, the manifest path where the gateway will find the data to return, and the resulting Arweave txId.\n\nREQUEST PATH                                                                   MANIFEST PATH   DATA SERVED FROM TXID\nhttps://arweave.dev/UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk                index           cG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI\nhttps://arweave.dev/UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk/index.html     index.html      cG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI\nhttps://arweave.dev/UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk/js/style.css   js/style.css    3zFsd7bkCAUtXUKBQ4XiPiQvpLVKfZ6kiLNt2XVSfoV\nhttps://arweave.dev/UyC5P5qKPZaltMmmZAWdakhlDXsBF6qmyrbWYFchRTk/foobar         fallback        iXo3LSfVKVtXUKBzfZ4d7bkCAp6kiLNt2XVUFsPiQvQ\n\n\n# Specifications\n\n\n# Transaction Tags\n\nManifest are uploaded to Arweave in the same manner as any other data item. A specific content type tag must be added while uploading so that resolvers like the ar.io gateways can recognize a manifest and properly resolve the paths. Tags must be attached to the manifest at the time of upload. They cannot be added later without uploading a new manifest, and they must be attached to the upload transaction, NOT placed inside the json object.\n\nFailure to provide this tag will result in resolvers not recognizing the manifest, so they will only return the raw json instead of the linked data items.\n\n# Content-Type\n\n{ "name": "Content-Type", "value": "application/x.arweave-manifest+json" }\n\n\n\n# Transaction Data\n\nBeing a json object, there are several attributes that make up the structure of a manifest. The json object must be fully defined and uploaded to Arweave as a data item.\n\n# manifest\n\n"manifest": "arweave/paths"\n\n\nThe manifest attribute serves as an additional validation layer. It must have the value arweave/paths in order for a gateway to resolve the manifest.\n\n# version\n\n"version": "0.2.0"\n\n\nThe version attribute defines the version of manifest schema a manifest is using.\n\n# index\n\n"index": {\n    "id": "cG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI"\n  }\n\n\nor\n\n"index": {\n    "path": "index.html",\n  }\n\n\nThe index attribute is an object that defines the base, or \'starting\' data item. It is similar to the / endpoint on a website. When resolving the manifest with no additional path definition, this is the data item that will be returned.\n\nindex accepts either path or id as sub attributes. path represents the key of a defined path in the manifest, while id represents a specific Arweave data item transaction Id.\n\nIf both path and id are defined in index, id will override path.\n\n# fallback\n\n"fallback": {\n    "id": "iXo3LSfVKVtXUKBzfZ4d7bkCAp6kiLNt2XVUFsPiQvQ"\n  }\n\n\nThe fallback attribute is an object that defines an Arweave data item transaction Id for the resolver to fall back to if it fails to correctly resolve a requested path. For example, it can act as a 404 page if a user requests manifest/non-existent-page\n\nfallback accepts id as a sub attribute, representing an Arweave data item transaction Id.\n\n# paths\n\n"paths": {\n    "index.html": {\n      "id": "cG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI"\n    },\n    "404.html": {\n      "id": "iXo3LSfVKVtXUKBzfZ4d7bkCAp6kiLNt2XVUFsPiQvQ"\n    },\n    "js/style.css": {\n      "id": "3zFsd7bkCAUtXUKBQ4XiPiQvpLVKfZ6kiLNt2XVSfoV"\n    },\n    "css/style.css": {\n      "id": "sPiQvpAUXLVK3zF6iXSfo7bkCVQkiLNt24dVtXUKBfZ"\n    },\n    "css/mobile.css": {\n      "id": "fZ4d7bkCAUiXSfo3zFsPiQvpLVKVtXUKB6kiLNt2XVQ"\n    },\n    "assets/img/logo.png": {\n      "id": "or0_fRYFcQYWh-QsozygI5Zoamw_fUsYu2w8_X1RkYZ"\n    },\n    "assets/img/icon.png": {\n      "id": "0543SMRGYuGKTaqLzmpOyK4AxAB96Fra2guHzYxjRGo"\n    }\n  }\n\n\nThe paths attribute is an object that defines the url paths that a manifest can resolve to. If a user navigates to manifest/index.html the resolver will look for index.html as a key in the paths object and return the corresponding id. (cG7Hdi_iTQPoEYgQJFqJ8NMpN4KoZ-vH_j7pG4iP7NI)',normalizedContent:'# manifests\n\n\n# overview\n\nar.io gateways support friendly-path-name routing for data on arweave via manifests. this greatly improves the programmability of data relationships. consider an illustrative example where data stored on arweave and accessed like this:\n\nhttp://<gateway domain>/cg7hdi_itqpoeygqjfqj8nmpn4koz-vh_j7pg4ip7ni (txid of a website\'s index.html)\nhttp://<gateway domain>/3zfsd7bkcautxukbq4xipiqvplvkfz6kilnt2xvsfov (txid of its js/style.css)\nhttp://<gateway domain>/or0_fryfcqywh-qsozygi5zoamw_fusyu2w8_x1rkyz (txid of its assets/img/logo.png)\n\n\ncan instead be accessed like this:\n\nhttp://<gateway domain>/<txid of manifest> (resolves to the txid of index.html)\nhttp://<gateway domain>/<txid of manifest>/js/style.css\nhttp://<gateway domain>/<txid of manifest>/assets/img/logo.png\n\n\nnft collections also benefit from manifest-based routing:\n\nhttp://<gateway domain>/<txid of nft collection image manifest>/0.png\nhttp://<gateway domain>/<txid of nft collection image manifest>/1.png\nhttp://<gateway domain>/<txid of nft collection image manifest>/2.png\n... and so on.\n\n\nar.io gateways are capable of resolving manifest paths in a relative manner. an html page loading assets from arweave would be very difficult to develop, maintain, and harden against hosting domains leaving existence if assets had to be linked to by a fully qualified domain name and an arweave data item id as the path. for example:\n\n<img src="https://arweave.dev/3zfsd7bkcautxukbq4xipiqvplvkfz6kilnt2xvsfov">\n\n\nmanifests allow html pages to use relative paths to assets with friendly names so that the document is easy to read, maintain, and host across any ar.io domain. for example:\n\n<img src="./logo.png">\n\n\nrelative routing eliminates the need for every link to contain the full arweave transaction id and fully qualified domain name. this makes the html more readable and ensures that links remain valid even if the hosting domain changes. if index.html needed to access js/style.css, the relative link ./js/style.css could be used instead of <txid>/js/style.css. this relative routing is incredibly useful for linking together files in a way that allows functional websites to be hosted entirely on arweave.\n\nlearn more about relative path routing and structuring files into a permanently hosted website in ardrive\'s decentralized app guide\n\n\n# what is a manifest\n\nmanifests, also known as "path manifests" or "arweave manifests," are json objects that connect various arweave data items and define relational paths for easy navigation. a common use case for manifests is permanently hosting websites on arweave by linking all necessary files together. an ar.io gateway can then resolve the manifest into a fully functional website.\n\n\n# sample manifest\n\n{\n  "manifest": "arweave/paths",\n  "version": "0.2.0",\n  "index": {\n    "path": "index.html"\n  },\n  "fallback": {\n    "id": "ixo3lsfvkvtxukbzfz4d7bkcap6kilnt2xvufspiqvq"\n  },\n  "paths": {\n    "index.html": {\n      "id": "cg7hdi_itqpoeygqjfqj8nmpn4koz-vh_j7pg4ip7ni"\n    },\n    "404.html": {\n      "id": "ixo3lsfvkvtxukbzfz4d7bkcap6kilnt2xvufspiqvq"\n    },\n    "js/style.css": {\n      "id": "3zfsd7bkcautxukbq4xipiqvplvkfz6kilnt2xvsfov"\n    },\n    "css/style.css": {\n      "id": "spiqvpauxlvk3zf6ixsfo7bkcvqkilnt24dvtxukbfz"\n    },\n    "css/mobile.css": {\n      "id": "fz4d7bkcauixsfo3zfspiqvplvkvtxukb6kilnt2xvq"\n    },\n    "assets/img/logo.png": {\n      "id": "or0_fryfcqywh-qsozygi5zoamw_fusyu2w8_x1rkyz"\n    },\n    "assets/img/icon.png": {\n      "id": "0543smrgyugktaqlzmpoyk4axab96fra2guhzyxjrgo"\n    }\n  }\n}\n\n\n\n# how it works\n\na resolver, typically an ar.io gateway, resolves urls requesting content based on a manifest transaction id to the corresponding path key in the paths object. the url schema for this type of request is https://<gateway url>/<manifest txid>/<path>.\n\n\n# example usage\n\nassume the manifest above is uploaded to arweave with the transaction id uyc5p5qkpzaltmmmzawdakhldxsbf6qmyrbwyfchrtk. the below table shows https requests to the ar.io gateway arweave.dev requesting various endpoints on the manifest transaction id, the manifest path where the gateway will find the data to return, and the resulting arweave txid.\n\nrequest path                                                                   manifest path   data served from txid\nhttps://arweave.dev/uyc5p5qkpzaltmmmzawdakhldxsbf6qmyrbwyfchrtk                index           cg7hdi_itqpoeygqjfqj8nmpn4koz-vh_j7pg4ip7ni\nhttps://arweave.dev/uyc5p5qkpzaltmmmzawdakhldxsbf6qmyrbwyfchrtk/index.html     index.html      cg7hdi_itqpoeygqjfqj8nmpn4koz-vh_j7pg4ip7ni\nhttps://arweave.dev/uyc5p5qkpzaltmmmzawdakhldxsbf6qmyrbwyfchrtk/js/style.css   js/style.css    3zfsd7bkcautxukbq4xipiqvplvkfz6kilnt2xvsfov\nhttps://arweave.dev/uyc5p5qkpzaltmmmzawdakhldxsbf6qmyrbwyfchrtk/foobar         fallback        ixo3lsfvkvtxukbzfz4d7bkcap6kilnt2xvufspiqvq\n\n\n# specifications\n\n\n# transaction tags\n\nmanifest are uploaded to arweave in the same manner as any other data item. a specific content type tag must be added while uploading so that resolvers like the ar.io gateways can recognize a manifest and properly resolve the paths. tags must be attached to the manifest at the time of upload. they cannot be added later without uploading a new manifest, and they must be attached to the upload transaction, not placed inside the json object.\n\nfailure to provide this tag will result in resolvers not recognizing the manifest, so they will only return the raw json instead of the linked data items.\n\n# content-type\n\n{ "name": "content-type", "value": "application/x.arweave-manifest+json" }\n\n\n\n# transaction data\n\nbeing a json object, there are several attributes that make up the structure of a manifest. the json object must be fully defined and uploaded to arweave as a data item.\n\n# manifest\n\n"manifest": "arweave/paths"\n\n\nthe manifest attribute serves as an additional validation layer. it must have the value arweave/paths in order for a gateway to resolve the manifest.\n\n# version\n\n"version": "0.2.0"\n\n\nthe version attribute defines the version of manifest schema a manifest is using.\n\n# index\n\n"index": {\n    "id": "cg7hdi_itqpoeygqjfqj8nmpn4koz-vh_j7pg4ip7ni"\n  }\n\n\nor\n\n"index": {\n    "path": "index.html",\n  }\n\n\nthe index attribute is an object that defines the base, or \'starting\' data item. it is similar to the / endpoint on a website. when resolving the manifest with no additional path definition, this is the data item that will be returned.\n\nindex accepts either path or id as sub attributes. path represents the key of a defined path in the manifest, while id represents a specific arweave data item transaction id.\n\nif both path and id are defined in index, id will override path.\n\n# fallback\n\n"fallback": {\n    "id": "ixo3lsfvkvtxukbzfz4d7bkcap6kilnt2xvufspiqvq"\n  }\n\n\nthe fallback attribute is an object that defines an arweave data item transaction id for the resolver to fall back to if it fails to correctly resolve a requested path. for example, it can act as a 404 page if a user requests manifest/non-existent-page\n\nfallback accepts id as a sub attribute, representing an arweave data item transaction id.\n\n# paths\n\n"paths": {\n    "index.html": {\n      "id": "cg7hdi_itqpoeygqjfqj8nmpn4koz-vh_j7pg4ip7ni"\n    },\n    "404.html": {\n      "id": "ixo3lsfvkvtxukbzfz4d7bkcap6kilnt2xvufspiqvq"\n    },\n    "js/style.css": {\n      "id": "3zfsd7bkcautxukbq4xipiqvplvkfz6kilnt2xvsfov"\n    },\n    "css/style.css": {\n      "id": "spiqvpauxlvk3zf6ixsfo7bkcvqkilnt24dvtxukbfz"\n    },\n    "css/mobile.css": {\n      "id": "fz4d7bkcauixsfo3zfspiqvplvkvtxukb6kilnt2xvq"\n    },\n    "assets/img/logo.png": {\n      "id": "or0_fryfcqywh-qsozygi5zoamw_fusyu2w8_x1rkyz"\n    },\n    "assets/img/icon.png": {\n      "id": "0543smrgyugktaqlzmpoyk4axab96fra2guhzyxjrgo"\n    }\n  }\n\n\nthe paths attribute is an object that defines the url paths that a manifest can resolve to. if a user navigates to manifest/index.html the resolver will look for index.html as a key in the paths object and return the corresponding id. (cg7hdi_itqpoeygqjfqj8nmpn4koz-vh_j7pg4ip7ni)',charsets:{}},{title:"Browser Sandboxing",frontmatter:{next:!1},regularPath:"/concepts/sandboxing.html",relativePath:"concepts/sandboxing.md",key:"v-0a39d43a",path:"/concepts/sandboxing.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:25},{level:2,title:"TLS and its Role in Browser Sandboxing",slug:"tls-and-its-role-in-browser-sandboxing",normalizedTitle:"tls and its role in browser sandboxing",charIndex:1362},{level:2,title:"Deriving Sandbox Value",slug:"deriving-sandbox-value",normalizedTitle:"deriving sandbox value",charIndex:3477}],headersStr:"Overview TLS and its Role in Browser Sandboxing Deriving Sandbox Value",content:"# Browser Sandboxing\n\n\n# Overview\n\nBrowser sandboxing allows data requests to a gateway node to benefit from the security advantages of using a browser's same-origin policy by redirecting the requests to a pseudo-unique subdomain of the gateway's apex domain. For example, an attempt to access https://arweave.net/gnWKBqFXMJrrksEWrXLQRUQQQeFhv4uVxesHBcT8i6o would redirect to https://qj2yubvbk4yjv24syelk24wqivcbaqpbmg7yxfof5mdqlrh4rova.arweave.net/gnWKBqFXMJrrksEWrXLQRUQQQeFhv4uVxesHBcT8i6o\n\nTwo DNS records are required to link a domain to an Arweave transaction on a gateway node. For example, www.mycustomsite.com would need the following records to link it to www.arweave-gateway.net:\n\n * A DNS CNAME record pointing to an Arweave gateway: www CNAME arweave-gateway.net,\n * A DNS TXT record linking the domain with a specific transaction ID: arweavetx TXT kTv4OkVtmc0NAsqIcnHfudKjykJeQ83qXXrxf8hrh0S\n\nWhen a browser requests www.mycustomsite.com the user's machine will (through the usual DNS processes) resolve this to the IP address for the gateway node arweave-gateway.net. When the gateway receives an HTTP request with a non-default hostname, e.g. www.mycustomsite.com instead of www.arweave-gateway.net, the gateway will query the DNS records for www.mycustomsite.com and the 'arweavetx' TXT record will tell the node which transaction to serve.\n\n\n# TLS and its Role in Browser Sandboxing\n\nTransport Layer Security (TLS) is a cryptographic protocol designed to provide communications security over a computer network. In the context of Arweave applications and browser sandboxing, TLS plays a critical role in ensuring secure data transmission and enabling the effective use of browser security features.\n\nWhen Arweave applications are accessed without TLS, most browsers restrict the use of native cryptographic functions. These functions, which include hashing, signing, and verification, are essential for the secure operation of Arweave permaweb apps. Without TLS, not only are these functions unavailable, but the applications also become susceptible to various security threats, notably man-in-the-middle (MITM) attacks. Although Arweave transactions are signed, making direct MITM attacks challenging, the absence of encryption can expose other vulnerabilities. For instance, attackers could intercept and alter the /price endpoint, potentially causing transaction failures or leading to overcharging.\n\nTo address these concerns, gateway operators are responsible for generating and maintaining TLS certificates for their gateways. This can be achieved through various systems, such as ACME for Let's Encrypt. An important step in setting up a gateway is obtaining a wildcard TLS certificate for the gateway's domain. This certificate secures traffic on both the apex domain and its single-level subdomains (e.g., gateway.com and subdomain.gateway.com).\n\nThe integration of TLS is crucial for the implementation of browser sandboxing. When a browser requests a transaction from a gateway, the gateway issues a 301 redirect to a subdomain of the gateway, using a Base32 pseudo-unique address derived from the transaction ID. This redirection, secured by TLS, invokes the browser's same-origin policy. As a result, the requested web page is confined within a secure sandbox environment, isolated from other domains. This isolation is vital for maintaining the integrity and security of transactions and interactions within Arweave's permaweb applications.\n\n\n# Deriving Sandbox Value\n\nar.io nodes generate browser sandbox values deterministically. Because of this, it is possible to calculate ahead of time what that value will be for a particular transaction id.\n\nSandbox values are a Base32 encoding of the transaction ID. ar.io gateways use the following code snippet to accomplish the encoding:\n\nconst expectedTxSandbox = (id: string): string => {\n  return toB32(fromB64Url(id));\n};\n\n\nExample:\n\nconst id = 'gnWKBqFXMJrrksEWrXLQRUQQQeFhv4uVxesHBcT8i6o';\nconst expectedTxSandbox = (id): string => {\n  return toB32(fromB64Url(id));\n};\nconsole.log(expectedTxSandbox);\n\n\nExample Output:\n\nqj2yubvbk4yjv24syelk24wqivcbaqpbmg7yxfof5mdqlrh4rova\n\n\nView the full code for generating browser sandbox values here.",normalizedContent:"# browser sandboxing\n\n\n# overview\n\nbrowser sandboxing allows data requests to a gateway node to benefit from the security advantages of using a browser's same-origin policy by redirecting the requests to a pseudo-unique subdomain of the gateway's apex domain. for example, an attempt to access https://arweave.net/gnwkbqfxmjrrksewrxlqruqqqefhv4uvxeshbct8i6o would redirect to https://qj2yubvbk4yjv24syelk24wqivcbaqpbmg7yxfof5mdqlrh4rova.arweave.net/gnwkbqfxmjrrksewrxlqruqqqefhv4uvxeshbct8i6o\n\ntwo dns records are required to link a domain to an arweave transaction on a gateway node. for example, www.mycustomsite.com would need the following records to link it to www.arweave-gateway.net:\n\n * a dns cname record pointing to an arweave gateway: www cname arweave-gateway.net,\n * a dns txt record linking the domain with a specific transaction id: arweavetx txt ktv4okvtmc0nasqicnhfudkjykjeq83qxxrxf8hrh0s\n\nwhen a browser requests www.mycustomsite.com the user's machine will (through the usual dns processes) resolve this to the ip address for the gateway node arweave-gateway.net. when the gateway receives an http request with a non-default hostname, e.g. www.mycustomsite.com instead of www.arweave-gateway.net, the gateway will query the dns records for www.mycustomsite.com and the 'arweavetx' txt record will tell the node which transaction to serve.\n\n\n# tls and its role in browser sandboxing\n\ntransport layer security (tls) is a cryptographic protocol designed to provide communications security over a computer network. in the context of arweave applications and browser sandboxing, tls plays a critical role in ensuring secure data transmission and enabling the effective use of browser security features.\n\nwhen arweave applications are accessed without tls, most browsers restrict the use of native cryptographic functions. these functions, which include hashing, signing, and verification, are essential for the secure operation of arweave permaweb apps. without tls, not only are these functions unavailable, but the applications also become susceptible to various security threats, notably man-in-the-middle (mitm) attacks. although arweave transactions are signed, making direct mitm attacks challenging, the absence of encryption can expose other vulnerabilities. for instance, attackers could intercept and alter the /price endpoint, potentially causing transaction failures or leading to overcharging.\n\nto address these concerns, gateway operators are responsible for generating and maintaining tls certificates for their gateways. this can be achieved through various systems, such as acme for let's encrypt. an important step in setting up a gateway is obtaining a wildcard tls certificate for the gateway's domain. this certificate secures traffic on both the apex domain and its single-level subdomains (e.g., gateway.com and subdomain.gateway.com).\n\nthe integration of tls is crucial for the implementation of browser sandboxing. when a browser requests a transaction from a gateway, the gateway issues a 301 redirect to a subdomain of the gateway, using a base32 pseudo-unique address derived from the transaction id. this redirection, secured by tls, invokes the browser's same-origin policy. as a result, the requested web page is confined within a secure sandbox environment, isolated from other domains. this isolation is vital for maintaining the integrity and security of transactions and interactions within arweave's permaweb applications.\n\n\n# deriving sandbox value\n\nar.io nodes generate browser sandbox values deterministically. because of this, it is possible to calculate ahead of time what that value will be for a particular transaction id.\n\nsandbox values are a base32 encoding of the transaction id. ar.io gateways use the following code snippet to accomplish the encoding:\n\nconst expectedtxsandbox = (id: string): string => {\n  return tob32(fromb64url(id));\n};\n\n\nexample:\n\nconst id = 'gnwkbqfxmjrrksewrxlqruqqqefhv4uvxeshbct8i6o';\nconst expectedtxsandbox = (id): string => {\n  return tob32(fromb64url(id));\n};\nconsole.log(expectedtxsandbox);\n\n\nexample output:\n\nqj2yubvbk4yjv24syelk24wqivcbaqpbmg7yxfof5mdqlrh4rova\n\n\nview the full code for generating browser sandbox values here.",charsets:{}},{title:"Contributing to AR.IO Docs",frontmatter:{next:!1},regularPath:"/contribute.html",relativePath:"contribute.md",key:"v-c0082a28",path:"/contribute.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:33},{level:2,title:"Prerequisites",slug:"prerequisites",normalizedTitle:"prerequisites",charIndex:1183},{level:2,title:"Initial Setup",slug:"initial-setup",normalizedTitle:"initial setup",charIndex:1315},{level:3,title:"Fork the Repository",slug:"fork-the-repository",normalizedTitle:"fork the repository",charIndex:1333},{level:3,title:"Clone your Fork",slug:"clone-your-fork",normalizedTitle:"clone your fork",charIndex:1859},{level:3,title:"Link Upstream",slug:"link-upstream",normalizedTitle:"link upstream",charIndex:2252},{level:3,title:"Install Dependencies for Docs Portal",slug:"install-dependencies-for-docs-portal",normalizedTitle:"install dependencies for docs portal",charIndex:3069},{level:2,title:"Editing",slug:"editing",normalizedTitle:"editing",charIndex:3754},{level:3,title:"Branches",slug:"branches",normalizedTitle:"branches",charIndex:4237},{level:3,title:"What is Markdown?",slug:"what-is-markdown",normalizedTitle:"what is markdown?",charIndex:4800},{level:3,title:"Frontmatter",slug:"frontmatter",normalizedTitle:"frontmatter",charIndex:6493},{level:3,title:"CSS",slug:"css",normalizedTitle:"css",charIndex:7817},{level:3,title:"Adding to the Sidebar",slug:"adding-to-the-sidebar",normalizedTitle:"adding to the sidebar",charIndex:8279},{level:2,title:"Development and Deployment",slug:"development-and-deployment",normalizedTitle:"development and deployment",charIndex:11564},{level:3,title:"Launching Development Server",slug:"launching-development-server",normalizedTitle:"launching development server",charIndex:11595},{level:3,title:"Building Static Files",slug:"building-static-files",normalizedTitle:"building static files",charIndex:12275},{level:3,title:"Creating Your Pull Request",slug:"creating-your-pull-request",normalizedTitle:"creating your pull request",charIndex:12732}],headersStr:"Overview Prerequisites Initial Setup Fork the Repository Clone your Fork Link Upstream Install Dependencies for Docs Portal Editing Branches What is Markdown? Frontmatter CSS Adding to the Sidebar Development and Deployment Launching Development Server Building Static Files Creating Your Pull Request",content:'# Contributing to AR.IO Docs\n\n\n# Overview\n\nThe AR.IO Docs serve as a primary source of information and guidance for users, developers, and contributors interacting with the AR.IO platform. As such, maintaining its clarity, accuracy, and comprehensiveness is paramount. This document outlines the standardized procedures and best practices for contributing to these docs. By following this guide, contributors can ensure that their additions and modifications align with the established documentation structure and conventions.\n\nContributions can range from minor typographical corrections to the addition of entire new sections. Regardless of the scale, every contribution is valuable. Proper setup, understanding the file structure, and familiarity with the submission process are essential components of effective contribution. The sections that follow delve into each stage of the contribution process, from initial setup and local development to the submission of changes for review.\n\nBy adhering to this guide, contributors can streamline the review and integration of their changes, ensuring that the AR.IO Docs remain a reliable and up-to-date resource for all its users.\n\n\n# Prerequisites\n\n * Github account\n * Git installed on your computer\n * Nodejs version 16.15.1\n * Yarn installed on your computer\n\n\n# Initial Setup\n\n\n# Fork the Repository\n\nWhile logged into your Github account, visit the repository for the AR.IO public site\n\nNear the top right of the page, there will be a button labeled "fork".\n\nClicking this will begin the process of making a copy of the public-site repo under your own account.\n\nOn the next screen, make sure the box labeled "copy the main branch only" is NOT checked, then click "create fork"\n\nThis process only needs to be completed once, you will not need to create a new fork each time you want to submit an edit.\n\n\n# Clone your Fork\n\nOnce you have your fork created, you\'ll need to clone it onto your computer in order to make your edits.\n\nNavigate the the location you want to clone the repo and open a terminal (or command prompt/powershell on Windows)\n\nrun the command:\n\ngit clone -b main https://github.com/yourusernamehere/public-site\n\n\nBe sure to replace "yourusernamehere" with your Github username\n\n\n# Link Upstream\n\nThe AR.IO Public Site, and especially the docs portal, is constantly evolving. You are going to want to be able to pull updates from the AR.IO repo into your fork without having to delete it and create a new fork. To do this, you can link the original repo to your fork as "upstream".\n\nFrom inside the fork on your computer, run the command:\n\ngit remote add upstream https://github.com/ar-io/public-site\n\n\nYou can then check to make sure the upstream source was added with:\n\ngit remote -v\n\n\n# Pull updates\n\nPeriodically, you should check if there have been updates to the original repo by using"\n\ngit fetch upstream\n\n\nIf changes show up, you can merge them into your own repo by ensuring you are on the "main" branch, and then running the merge command:\n\ngit checkout main\ngit merge upstream/main\n\n\n\n# Install Dependencies for Docs Portal\n\nThe AR.IO Public Site is primarily a static html website. There are no dependencies that need to be installed in order to launch and view the site as a whole. However, the docs portal is a Vuepress app nested inside that html website. In order to launch the docs portal for review, or to build it into static html, you are going to need to install its dependencies.\n\nFrom in the root directory of the Public Site, navigate into the docs portal and run the install command:\n\ncd docsGenerator/docs\nyarn install\n\n\nNOTE: This repository uses yarn to manage dependency versions, installing dependencies with npm instead of yarn can lead to errors.\n\n\n# Editing\n\nVuepress generates content using markdown (.md) files. Each markdown file can be displayed as its own content page. The location (url) of each page is generally determined by the file\'s location in the file-structure of the vuepress app, though this can be overridden by using frontmatter. Adding a new content page can be as simple as dropping a new file in the appropriate location in the file-structure and adding a reference to it in the sidebar configuration file.\n\n\n# Branches\n\nYou should always ensure that you are starting from an up to date version of the main branch. See Pull Updates for instructions.\n\nOnce you are up to date and on the main branch, you should always create a new branch specific to the changes you are making. This can be done with the command:\n\ngit checkout -b <new-branch-name>\n\n\nReplace <new-branch-name> with a short, descriptive name for what you are changing. Do not reuse branches for future edits, you should always create a fresh branch based on the most up to date version of the main branch.\n\n\n# What is Markdown?\n\nMarkdown is a lightweight markup language that allows you to format plain text documents with simple syntax. It\'s commonly used for creating documentation, README files, and web content. Markdown files are easy to read, write, and convert into various formats, such as HTML.\n\nHere are some commonly used Markdown syntax elements:\n\n 1. Headings: Use hash symbols (#) to denote headings. The number of hashes determines the heading level (e.g., # Heading 1, ## Heading 2).\n\n 2. Emphasis: Surround text with asterisks (*) or underscores (_) for emphasis. For example, *italic\\*or_italic_renders as italic, and**bold**or**bold** renders as bold.\n\n 3. Lists: Create unordered lists by starting lines with hyphens (-), plus signs (+), or asterisks (*). Ordered lists use numbers (1., 2., etc.).\n\n 4. Links: Enclose the linked text in square brackets [] and the URL in parentheses (). For example, AR.IO creates a link to AR.IO\'s Public website.\n\n 5. Images: Similar to links, but with an exclamation mark (!) at the beginning. For example, ![Alt Text](image.jpg) embeds an image.\n\n 6. Code: Use backticks ( ` ) to denote inline code . For code blocks, indent each line with four spaces or use triple backticks (```) before and after the code block.\n\n 7. Horizontal Rule: To create a horizontal rule, use three or more hyphens (-), asterisks (*), or underscores (_).\n\nTo denote a Markdown file, save it with the .md extension (e.g., document.md).\n\nWhen used in a VuePress app, Markdown files are rendered into HTML by VuePress\'s built-in Markdown compiler, which supports most standard html tags as well. This includes the ability to assign css classes for additional styling.\n\n\n# Frontmatter\n\nVuepress supports injecting certain options into your markdown files. These options, collectively, are known as frontmatter. There are 5 items that you will primarily use for these docs. All of them may be omitted without issue, or included for additional customization. These are:\n\n 1. title: This sets the title for the page. It will be displayed on the left side of the browser tab when a user accesses that page. If omitted, the title will be pulled from the sidebar for that page.\n\n 2. permalink: Vuepress sets urls based on the filestructure of the project. This can be overridden using permalink, and a custom url can be assigned to a specific page.\n\n 3. prev: Sets the value for the “previous page” button that appears at the bottom of the page. If omitted, this will be pulled from the sidebar. The button can be removed from the page by setting the value to “false”.\n\n 4. next: Similar to prev, this sets the “next page” button value.\n\n 5. tags: accepts a list of key words that can be accessed by the “search” function, as well as helping with SEO.\n\nFrontmatter uses YAML syntax, sandwiched inside two lines of three dashes --- , like so:\n\n---\ntitle: Frontmatter Instructions\npermalink: "/frontmatter/"\nprev: "./what-is-markdown"\nnext: false\ntags: ["frontmatter", "permalink", "other tags"]\n---\n\n\n\n# CSS\n\nIf you add html elements into your markdown file, you can assign custom css classes to them. The easiest way to customize a class is to add it to the primary global css file located at /docsGenerator/docs/src/.vuepress/theme/styles/index.styl\n\nThe file is written in stylus, but supports standard css syntax.\n\nNOTE: It is a good idea to be overly specific with your class names, as the content of the index.styl file will affect the entire docs portal.\n\n\n# Adding to the Sidebar\n\nThe sidebar is rendered from a JavaScript array of objects. It is possible to configure multiple different sidebars, and have them display depending on the filepath a user is currently viewing. The docs portal only uses a single default sidebar at the moment. The configuration file for the sidebar is located at /docs/src/.vuepress/theme/configs/default_sidebar_config.js\n\nTo add a new item to the sidebar, simply choose where you want the item to appear, and insert an object with the following format:\n\n{\ntitle: "Text you want to display",\npath: "Filepath to new file"\n}\n\n\nThe sidebar, when rendered, will find all the H2 tags (##) in the file, and automatically display them as sub-headers in the sidebar, which work as links to that specific section of the page.\n\nYou can also make a sidebar item into an expandable menu by adding a children attribute, which will be an array of objects similar to the parent:\n\n{\ntitle: "Label",\nchildren: [\n    {\n    title: "First Subtext",\n    path: "Filepath to file"\n    },\n    {\n    title: "Second Subtext",\n    path: "Filepath to second file"\n    }\n  ]\n}\n\n\nChildren can be nested for several layers if desired.\n\nBelow is the current sidebar configuration to serve as an example:\n\nmodule.exports = [\n  {\n    title: "Welcome",\n    path: "/",\n  },\n  {\n    title: "Network Overview",\n    children: [\n      {\n        title: "Introduction",\n        path: "/introduction",\n      },\n      {\n        title: "Arweave and the Permaweb",\n        path: "/arweave",\n      },\n      {\n        title: "The IO Token",\n        path: "/token.md",\n      },\n      {\n        title: "Gateway Architecture",\n        path: "/gateways/gateways",\n      },\n      {\n        title: "Network Protocols",\n        path: "/network-protocols"\n      },\n      {\n        title: "Arweave name System (ArNS)",\n        path: "/arns.md",\n      },\n    ],\n  },\n  {\n    title: "Gateway Operators",\n    children: [\n      {\n        title: "Getting Started",\n        children: [\n          {\n            title: "Overview",\n            path: "/gateways/ar-io-node/overview"\n          },\n          {\n            title: "Setting up on Windows",\n            path: "/gateways/ar-io-node/windows-setup",\n          },\n          {\n            title: "Setting up on Linux",\n            path: "/gateways/ar-io-node/linux-setup",\n          },\n          {\n            title: "Join the Network",\n            path: "/gateways/ar-io-node/testnet"\n          },\n          {\n            title: "Upgrading",\n            path: "/gateways/ar-io-node/upgrading"\n          }\n\n        ],\n      },\n      {\n        title: "Advanced Configurations",\n        path: "/gateways/ar-io-node/advanced-config"\n      },\n      {\n        title: "AR.IO HTTP API",\n        path: "/gateways/ar-io-node/api",\n      },\n      {\n        title: "AR.IO Admin API",\n        path: "/gateways/ar-io-node/admin/admin-api"\n      }\n    ],\n  },\n  {\n    title: "Ecosystem and Community",\n    children: [\n      {\n        title: "AR.IO Foundation",\n        path: "/foundation",\n      },\n      {\n        title: "AR.IO Labs",\n        path: "/labs",\n      },\n      {\n        title: "Community Resources",\n        path: "/community-resources",\n      },\n    ],\n  },\n  {\n    title: "Glossary",\n    path: "/glossary",\n  },\n];\n\n\n\n# Development and Deployment\n\n\n# Launching Development Server\n\nFrom inside the docsGenerator/docs directory in your terminal, you can launch a development server in order to preview your edits. This will automatically update as you are making edits, but if some changes do not immediately appear you can shut the server down and restart it for a hard refresh:\n\nyarn dev\n\n\nThe development server will, by default, launch at localhost:8080. The server can be shut down with ctrl+c or by killing the terminal used to start it.\n\nThe most common error when attempting to launch the development server comes from not having a compatible version of Nodejs. If you get an error, try switching to Node version 16.15.1\n\n\n# Building Static Files\n\nThe Vuepress docs portal is nested inside a static html website. For ease of deployment, Vuepress can build the docs portal into static html files and place them in the docs/ folder in the root of the website. This is not necessary for submitting a pr, but it may be useful for local testing. You can do this by navigating your terminal inside the docs portal Vuepress app docsGenerator/docs and running the command:\n\nyarn build\n\n\n\n# Creating Your Pull Request\n\nOnce you have all of your local changes committed and synced to your github account, you can create a Pull Request and have the team review the changes for integration into the public site.\n\n 1. Ensure that all of your changes are committed to your own repository. All commits should follow the Conventional Commits standards.\n\n 2. Navigate to your forked repository\'s page on GitHub.\n\n 3. Switch to the branch you created for your changes.\n\n 4. You should see a banner indicating that you recently pushed a new branch. Click on the "Compare & pull request" button on that banner.\n\n 5. Make sure the base repository is set to the original AR.IO repository and the base branch is set to "staging".\n\n 6. Provide a brief description of your changes in the pull request form. Ensure your title adheres to the Conventional Commits standards.\n\n 7. Review the changes and confirm they appear as expected.\n\n 8. Once you\'re ready, click on the "Create pull request" button. The AR.IO team will review the request and, if approved, merge your changes into the staging branch of the repository. The changes will later be merged into the main branch for production deployment.',normalizedContent:'# contributing to ar.io docs\n\n\n# overview\n\nthe ar.io docs serve as a primary source of information and guidance for users, developers, and contributors interacting with the ar.io platform. as such, maintaining its clarity, accuracy, and comprehensiveness is paramount. this document outlines the standardized procedures and best practices for contributing to these docs. by following this guide, contributors can ensure that their additions and modifications align with the established documentation structure and conventions.\n\ncontributions can range from minor typographical corrections to the addition of entire new sections. regardless of the scale, every contribution is valuable. proper setup, understanding the file structure, and familiarity with the submission process are essential components of effective contribution. the sections that follow delve into each stage of the contribution process, from initial setup and local development to the submission of changes for review.\n\nby adhering to this guide, contributors can streamline the review and integration of their changes, ensuring that the ar.io docs remain a reliable and up-to-date resource for all its users.\n\n\n# prerequisites\n\n * github account\n * git installed on your computer\n * nodejs version 16.15.1\n * yarn installed on your computer\n\n\n# initial setup\n\n\n# fork the repository\n\nwhile logged into your github account, visit the repository for the ar.io public site\n\nnear the top right of the page, there will be a button labeled "fork".\n\nclicking this will begin the process of making a copy of the public-site repo under your own account.\n\non the next screen, make sure the box labeled "copy the main branch only" is not checked, then click "create fork"\n\nthis process only needs to be completed once, you will not need to create a new fork each time you want to submit an edit.\n\n\n# clone your fork\n\nonce you have your fork created, you\'ll need to clone it onto your computer in order to make your edits.\n\nnavigate the the location you want to clone the repo and open a terminal (or command prompt/powershell on windows)\n\nrun the command:\n\ngit clone -b main https://github.com/yourusernamehere/public-site\n\n\nbe sure to replace "yourusernamehere" with your github username\n\n\n# link upstream\n\nthe ar.io public site, and especially the docs portal, is constantly evolving. you are going to want to be able to pull updates from the ar.io repo into your fork without having to delete it and create a new fork. to do this, you can link the original repo to your fork as "upstream".\n\nfrom inside the fork on your computer, run the command:\n\ngit remote add upstream https://github.com/ar-io/public-site\n\n\nyou can then check to make sure the upstream source was added with:\n\ngit remote -v\n\n\n# pull updates\n\nperiodically, you should check if there have been updates to the original repo by using"\n\ngit fetch upstream\n\n\nif changes show up, you can merge them into your own repo by ensuring you are on the "main" branch, and then running the merge command:\n\ngit checkout main\ngit merge upstream/main\n\n\n\n# install dependencies for docs portal\n\nthe ar.io public site is primarily a static html website. there are no dependencies that need to be installed in order to launch and view the site as a whole. however, the docs portal is a vuepress app nested inside that html website. in order to launch the docs portal for review, or to build it into static html, you are going to need to install its dependencies.\n\nfrom in the root directory of the public site, navigate into the docs portal and run the install command:\n\ncd docsgenerator/docs\nyarn install\n\n\nnote: this repository uses yarn to manage dependency versions, installing dependencies with npm instead of yarn can lead to errors.\n\n\n# editing\n\nvuepress generates content using markdown (.md) files. each markdown file can be displayed as its own content page. the location (url) of each page is generally determined by the file\'s location in the file-structure of the vuepress app, though this can be overridden by using frontmatter. adding a new content page can be as simple as dropping a new file in the appropriate location in the file-structure and adding a reference to it in the sidebar configuration file.\n\n\n# branches\n\nyou should always ensure that you are starting from an up to date version of the main branch. see pull updates for instructions.\n\nonce you are up to date and on the main branch, you should always create a new branch specific to the changes you are making. this can be done with the command:\n\ngit checkout -b <new-branch-name>\n\n\nreplace <new-branch-name> with a short, descriptive name for what you are changing. do not reuse branches for future edits, you should always create a fresh branch based on the most up to date version of the main branch.\n\n\n# what is markdown?\n\nmarkdown is a lightweight markup language that allows you to format plain text documents with simple syntax. it\'s commonly used for creating documentation, readme files, and web content. markdown files are easy to read, write, and convert into various formats, such as html.\n\nhere are some commonly used markdown syntax elements:\n\n 1. headings: use hash symbols (#) to denote headings. the number of hashes determines the heading level (e.g., # heading 1, ## heading 2).\n\n 2. emphasis: surround text with asterisks (*) or underscores (_) for emphasis. for example, *italic\\*or_italic_renders as italic, and**bold**or**bold** renders as bold.\n\n 3. lists: create unordered lists by starting lines with hyphens (-), plus signs (+), or asterisks (*). ordered lists use numbers (1., 2., etc.).\n\n 4. links: enclose the linked text in square brackets [] and the url in parentheses (). for example, ar.io creates a link to ar.io\'s public website.\n\n 5. images: similar to links, but with an exclamation mark (!) at the beginning. for example, ![alt text](image.jpg) embeds an image.\n\n 6. code: use backticks ( ` ) to denote inline code . for code blocks, indent each line with four spaces or use triple backticks (```) before and after the code block.\n\n 7. horizontal rule: to create a horizontal rule, use three or more hyphens (-), asterisks (*), or underscores (_).\n\nto denote a markdown file, save it with the .md extension (e.g., document.md).\n\nwhen used in a vuepress app, markdown files are rendered into html by vuepress\'s built-in markdown compiler, which supports most standard html tags as well. this includes the ability to assign css classes for additional styling.\n\n\n# frontmatter\n\nvuepress supports injecting certain options into your markdown files. these options, collectively, are known as frontmatter. there are 5 items that you will primarily use for these docs. all of them may be omitted without issue, or included for additional customization. these are:\n\n 1. title: this sets the title for the page. it will be displayed on the left side of the browser tab when a user accesses that page. if omitted, the title will be pulled from the sidebar for that page.\n\n 2. permalink: vuepress sets urls based on the filestructure of the project. this can be overridden using permalink, and a custom url can be assigned to a specific page.\n\n 3. prev: sets the value for the “previous page” button that appears at the bottom of the page. if omitted, this will be pulled from the sidebar. the button can be removed from the page by setting the value to “false”.\n\n 4. next: similar to prev, this sets the “next page” button value.\n\n 5. tags: accepts a list of key words that can be accessed by the “search” function, as well as helping with seo.\n\nfrontmatter uses yaml syntax, sandwiched inside two lines of three dashes --- , like so:\n\n---\ntitle: frontmatter instructions\npermalink: "/frontmatter/"\nprev: "./what-is-markdown"\nnext: false\ntags: ["frontmatter", "permalink", "other tags"]\n---\n\n\n\n# css\n\nif you add html elements into your markdown file, you can assign custom css classes to them. the easiest way to customize a class is to add it to the primary global css file located at /docsgenerator/docs/src/.vuepress/theme/styles/index.styl\n\nthe file is written in stylus, but supports standard css syntax.\n\nnote: it is a good idea to be overly specific with your class names, as the content of the index.styl file will affect the entire docs portal.\n\n\n# adding to the sidebar\n\nthe sidebar is rendered from a javascript array of objects. it is possible to configure multiple different sidebars, and have them display depending on the filepath a user is currently viewing. the docs portal only uses a single default sidebar at the moment. the configuration file for the sidebar is located at /docs/src/.vuepress/theme/configs/default_sidebar_config.js\n\nto add a new item to the sidebar, simply choose where you want the item to appear, and insert an object with the following format:\n\n{\ntitle: "text you want to display",\npath: "filepath to new file"\n}\n\n\nthe sidebar, when rendered, will find all the h2 tags (##) in the file, and automatically display them as sub-headers in the sidebar, which work as links to that specific section of the page.\n\nyou can also make a sidebar item into an expandable menu by adding a children attribute, which will be an array of objects similar to the parent:\n\n{\ntitle: "label",\nchildren: [\n    {\n    title: "first subtext",\n    path: "filepath to file"\n    },\n    {\n    title: "second subtext",\n    path: "filepath to second file"\n    }\n  ]\n}\n\n\nchildren can be nested for several layers if desired.\n\nbelow is the current sidebar configuration to serve as an example:\n\nmodule.exports = [\n  {\n    title: "welcome",\n    path: "/",\n  },\n  {\n    title: "network overview",\n    children: [\n      {\n        title: "introduction",\n        path: "/introduction",\n      },\n      {\n        title: "arweave and the permaweb",\n        path: "/arweave",\n      },\n      {\n        title: "the io token",\n        path: "/token.md",\n      },\n      {\n        title: "gateway architecture",\n        path: "/gateways/gateways",\n      },\n      {\n        title: "network protocols",\n        path: "/network-protocols"\n      },\n      {\n        title: "arweave name system (arns)",\n        path: "/arns.md",\n      },\n    ],\n  },\n  {\n    title: "gateway operators",\n    children: [\n      {\n        title: "getting started",\n        children: [\n          {\n            title: "overview",\n            path: "/gateways/ar-io-node/overview"\n          },\n          {\n            title: "setting up on windows",\n            path: "/gateways/ar-io-node/windows-setup",\n          },\n          {\n            title: "setting up on linux",\n            path: "/gateways/ar-io-node/linux-setup",\n          },\n          {\n            title: "join the network",\n            path: "/gateways/ar-io-node/testnet"\n          },\n          {\n            title: "upgrading",\n            path: "/gateways/ar-io-node/upgrading"\n          }\n\n        ],\n      },\n      {\n        title: "advanced configurations",\n        path: "/gateways/ar-io-node/advanced-config"\n      },\n      {\n        title: "ar.io http api",\n        path: "/gateways/ar-io-node/api",\n      },\n      {\n        title: "ar.io admin api",\n        path: "/gateways/ar-io-node/admin/admin-api"\n      }\n    ],\n  },\n  {\n    title: "ecosystem and community",\n    children: [\n      {\n        title: "ar.io foundation",\n        path: "/foundation",\n      },\n      {\n        title: "ar.io labs",\n        path: "/labs",\n      },\n      {\n        title: "community resources",\n        path: "/community-resources",\n      },\n    ],\n  },\n  {\n    title: "glossary",\n    path: "/glossary",\n  },\n];\n\n\n\n# development and deployment\n\n\n# launching development server\n\nfrom inside the docsgenerator/docs directory in your terminal, you can launch a development server in order to preview your edits. this will automatically update as you are making edits, but if some changes do not immediately appear you can shut the server down and restart it for a hard refresh:\n\nyarn dev\n\n\nthe development server will, by default, launch at localhost:8080. the server can be shut down with ctrl+c or by killing the terminal used to start it.\n\nthe most common error when attempting to launch the development server comes from not having a compatible version of nodejs. if you get an error, try switching to node version 16.15.1\n\n\n# building static files\n\nthe vuepress docs portal is nested inside a static html website. for ease of deployment, vuepress can build the docs portal into static html files and place them in the docs/ folder in the root of the website. this is not necessary for submitting a pr, but it may be useful for local testing. you can do this by navigating your terminal inside the docs portal vuepress app docsgenerator/docs and running the command:\n\nyarn build\n\n\n\n# creating your pull request\n\nonce you have all of your local changes committed and synced to your github account, you can create a pull request and have the team review the changes for integration into the public site.\n\n 1. ensure that all of your changes are committed to your own repository. all commits should follow the conventional commits standards.\n\n 2. navigate to your forked repository\'s page on github.\n\n 3. switch to the branch you created for your changes.\n\n 4. you should see a banner indicating that you recently pushed a new branch. click on the "compare & pull request" button on that banner.\n\n 5. make sure the base repository is set to the original ar.io repository and the base branch is set to "staging".\n\n 6. provide a brief description of your changes in the pull request form. ensure your title adheres to the conventional commits standards.\n\n 7. review the changes and confirm they appear as expected.\n\n 8. once you\'re ready, click on the "create pull request" button. the ar.io team will review the request and, if approved, merge your changes into the staging branch of the repository. the changes will later be merged into the main branch for production deployment.',charsets:{}},{title:"AO ANT",frontmatter:{permalink:"/guides/experimental/ao-ant",next:!1},regularPath:"/experimental/ao-ant.html",relativePath:"experimental/ao-ant.md",key:"v-4c2c563a",path:"/guides/experimental/ao-ant/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:13},{level:2,title:"Installation",slug:"installation",normalizedTitle:"installation",charIndex:256},{level:2,title:"Usage",slug:"usage",normalizedTitle:"usage",charIndex:882},{level:3,title:"Set Controller",slug:"set-controller",normalizedTitle:"set controller",charIndex:1109},{level:3,title:"Initiate Record Sync and Update",slug:"initiate-record-sync-and-update",normalizedTitle:"initiate record sync and update",charIndex:1363}],headersStr:"Overview Installation Usage Set Controller Initiate Record Sync and Update",content:'# AO ANT\n\n\n# Overview\n\nArweave Name Tokens, or ANTs, are the aoComputer contracts that control each ArNS name. You can easily set up an ao process to function as an ANT by loading the ant.lua file from the ao-pilot github repository into your process.\n\n\n# Installation\n\nThe ao ANT code is a single file within the ao-pilot Github repository from ar.io. The specific file is located here.\n\nYou can install the ao-pilot repo on your computer with\n\ngit clone https://github.com/ar-io/ao-pilot\n\nNavigating the file system inside of ao is not as straightforward as it is in a regular terminal, so opening ao directly in the same folder as the file you are going to load can make things significantly easier.\n\ncd ao-pilot/src\naos\n\n\nFrom here, simply load the arns-resolver file into your process.\n\n.load ant.lua\n\nIf things work successfully, your aos terminal will print "undefined".\n\n\n# Usage\n\nSimply loading the script into your process will set variables and handlers to make your process conform to the ant standard, but you will still need to send an initiate request to add your ANT into the ao registry.\n\n\n# Set Controller\n\nOnly authorized people can make updates to your ArNS name. Because of this, you will need to add your process ID as a \'controller\' under your ArNS name at arns.app. This will give your process permissions needed to make these updates\n\n\n# Initiate Record Sync and Update\n\nWhen you purchase an ArNS name on arns.app, that name is not automatically synced to the ao-ArNS registry. Anyone can initiate a sync, which loads the data of an ArNS name from the aoComputer contract into the ao-ArNS registry:\n\nSend({ Target = "TyduW6spZTr3gkdIsdktduJhgtilaR_ex5JukK8gI9o", Tags = { Action = "Initiate-Record-Sync", Name = "<ArNS-name-to-sync>" }})\n\n\nBe sure to replace <ArNS-name-to-sync> with the correct ArNS name.\n\nOnce your process is a controller, and you have loaded the ANT script, you can initiate an update to the ao-ArNS registry by running the following command:\n\nSend({ Target = ARNS_PROCESS_ID, Tags = { Action = "Initiate-Record-Update", Name = "<your-arns-name>", ProcessId = ao.id }})\n\n\nMake sure to change <your-arns-name to the ArNS name you are trying to update. When you load the arns.lua script, the variable ARNS_PROCESS_ID is set to TyduW6spZTr3gkdIsdktduJhgtilaR_ex5JukK8gI9o, which is the process id of the ao-ArNS registry.\n\nOnce this is done, anyone will be able to resolve your ArNS name from inside ao and have easy access to your process Id.',normalizedContent:'# ao ant\n\n\n# overview\n\narweave name tokens, or ants, are the aocomputer contracts that control each arns name. you can easily set up an ao process to function as an ant by loading the ant.lua file from the ao-pilot github repository into your process.\n\n\n# installation\n\nthe ao ant code is a single file within the ao-pilot github repository from ar.io. the specific file is located here.\n\nyou can install the ao-pilot repo on your computer with\n\ngit clone https://github.com/ar-io/ao-pilot\n\nnavigating the file system inside of ao is not as straightforward as it is in a regular terminal, so opening ao directly in the same folder as the file you are going to load can make things significantly easier.\n\ncd ao-pilot/src\naos\n\n\nfrom here, simply load the arns-resolver file into your process.\n\n.load ant.lua\n\nif things work successfully, your aos terminal will print "undefined".\n\n\n# usage\n\nsimply loading the script into your process will set variables and handlers to make your process conform to the ant standard, but you will still need to send an initiate request to add your ant into the ao registry.\n\n\n# set controller\n\nonly authorized people can make updates to your arns name. because of this, you will need to add your process id as a \'controller\' under your arns name at arns.app. this will give your process permissions needed to make these updates\n\n\n# initiate record sync and update\n\nwhen you purchase an arns name on arns.app, that name is not automatically synced to the ao-arns registry. anyone can initiate a sync, which loads the data of an arns name from the aocomputer contract into the ao-arns registry:\n\nsend({ target = "tyduw6spztr3gkdisdktdujhgtilar_ex5jukk8gi9o", tags = { action = "initiate-record-sync", name = "<arns-name-to-sync>" }})\n\n\nbe sure to replace <arns-name-to-sync> with the correct arns name.\n\nonce your process is a controller, and you have loaded the ant script, you can initiate an update to the ao-arns registry by running the following command:\n\nsend({ target = arns_process_id, tags = { action = "initiate-record-update", name = "<your-arns-name>", processid = ao.id }})\n\n\nmake sure to change <your-arns-name to the arns name you are trying to update. when you load the arns.lua script, the variable arns_process_id is set to tyduw6spztr3gkdisdktdujhgtilar_ex5jukk8gi9o, which is the process id of the ao-arns registry.\n\nonce this is done, anyone will be able to resolve your arns name from inside ao and have easy access to your process id.',charsets:{}},{title:"AO ArNS Resolver",frontmatter:{permalink:"/guides/experimental/ao-resolver",prev:!1},regularPath:"/experimental/ao-resolver.html",relativePath:"experimental/ao-resolver.md",key:"v-db3ac7ec",path:"/guides/experimental/ao-resolver/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:23},{level:2,title:"Installation",slug:"installation",normalizedTitle:"installation",charIndex:560},{level:3,title:"From Blueprint",slug:"from-blueprint",normalizedTitle:"from blueprint",charIndex:577},{level:3,title:"From Source",slug:"from-source",normalizedTitle:"from source",charIndex:696},{level:2,title:"Usage",slug:"usage",normalizedTitle:"usage",charIndex:1430},{level:3,title:"Resolve",slug:"resolve",normalizedTitle:"resolve",charIndex:10},{level:3,title:"Data",slug:"data",normalizedTitle:"data",charIndex:5785},{level:3,title:"Owner",slug:"owner",normalizedTitle:"owner",charIndex:6961},{level:3,title:"ID",slug:"id",normalizedTitle:"id",charIndex:7141},{level:3,title:"Clear",slug:"clear",normalizedTitle:"clear",charIndex:8098},{level:3,title:"Sync",slug:"sync",normalizedTitle:"sync",charIndex:5620}],headersStr:"Overview Installation From Blueprint From Source Usage Resolve Data Owner ID Clear Sync",content:'# AO ArNS Resolver\n\n\n# Overview\n\nAO is in the early stages of development, with its infrastructure evolving quickly. Among the developments is the ArNS-resolver, a set of rules and commands that facilitate the integration of ArNS names from the ArNS registry contract into your ao process. Currently, the interaction with the ArNS registry contract is unidirectional; ao can receive updates but cannot modify the contract. As this feature is experimental, it is expected to undergo significant changes, but users are welcome to test the current iteration.\n\n\n# Installation\n\n\n# From Blueprint\n\nFrom inside aos, simply type .load-blueprint arns to load the ArNS resolver into your aos process.\n\n\n# From Source\n\nTo get access to the latest development version, you can install directly from the source code.\n\nThe ArNS-resolver is a single file within the ao-pilot Github repository from ar.io. The specific file is located here.\n\nYou can install the ao-pilot repo on your computer with\n\ngit clone https://github.com/ar-io/ao-pilot\n\nNavigating the file system inside of ao is not as straightforward as it is in a regular terminal, so opening ao directly in the same folder as the file you are going to load can make things significantly easier.\n\ncd ao-pilot/src\naos\n\n\nFrom here, simply load the arns-resolver file into your process.\n\n.load arns-resolver.lua\n\nIf things work successfully, your aos terminal will print "undefined".\n\n\n# Usage\n\n\n# Resolve\n\nYou can resolve an ArNS name with the ARNS.resolve command.\n\nARNS.resolve(\'ardrive\')\n\n\nThis will fetch all of the data related to the ArNS name ardrive and store it locally in your NAMES table. You can print that data by typing\n\nNAMES[\'ardrive\']\n\n\nand use that variable in other commands that need to reference any of the data.\n\nThe resolve command will first check the ao-ArNS registry for any information on the name. If there is a contractTxId field present, it will then make a request to the ArNS smartweave contract, using the Orbit Oracle, in order to try and get more information about the contract state for the underlying ANT. Then, if there is a processId field, a request will be made to that process to try and get ao specific information. This loads information into your local process at each step. For example, The first bit of information coming from the ao-Arns registry will look like this:\n\n   ardrive = {\n     contractTxId = "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n     lastUpdated = 1710951400626,\n     record = {\n       type = "lease",\n       contractTxId = "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n       undernames = 100,\n       startTimestamp = 1694101828,\n       endTimestamp = 1711122739,\n       purchasePrice = 0\n    }\n  }\n\n\nAfter Orbit returns the information from the ArNS smartweave contract, that data will be added under a contract key:\n\nardrive = {\n     contractTxId = "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n     contract = {\n       controller = "6Z-ifqgVi1jOwMvSNwKWs6ewUEQ0gU9eo4aHYC3rN1M",\n       ticker = "ANT-ARDRIVE",\n       name = "ArDrive.io",\n       lastUpdated = 1711118753890,\n       owner = "QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ",\n       balances = {\n         QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ = 1\n      },\n       records = {\n         @ = {\n           ttlSeconds = 3600,\n           transactionId = "nOXJjj_vk0Dc1yCgdWD8kti_1iHruGzLQLNNBHVpN0Y"\n        },\n         cn = {\n           ttlSeconds = 3300,\n           transactionId = "_HquerT6pfGFXrVxRxQTkJ7PV5RciZCqvMjLtUY0C1k"\n        },\n         og = {\n           ttlSeconds = 3600,\n           transactionId = "YzD_Pm5VAfYpMD3zQCgMUcKKuleGhEH7axlrnrDCKBo"\n        },\n         logo = {\n           ttlSeconds = 3600,\n           transactionId = "KKmRbIfrc7wiLcG0zvY1etlO0NBx1926dSCksxCIN3A"\n        },\n         og_logo = {\n           ttlSeconds = 3600,\n           transactionId = "TB2wJyKrPnkAW79DAwlJYwpgdHKpijEJWQfcwX715Co"\n        },\n         dapp = {\n           ttlSeconds = 3600,\n           transactionId = "qrWdhy_PxrniBUlYn0macF-YbNgbmnmV5OVSrVRxxV8"\n        },\n         og_dapp = {\n           ttlSeconds = 3600,\n           transactionId = "5iR4wBu4KUV1pUz1YpYE1ARXSRHUT5G2ptMuoN2JDlI"\n        }\n      }\n    },\n     lastUpdated = 1711118166407,\n     record = {\n       type = "lease",\n       contractTxId = "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n       undernames = 100,\n       startTimestamp = 1694101828,\n       endTimestamp = 1711122739,\n       purchasePrice = 0\n    }\n  }\n\n\nand an ArNS name with ao process information could look like this:\n\nblackjack = {\n     contractTxId = "ydbc4JLjKeurnbTBp15vlZX1Zz9StgfpZ7prVZOGA3I",\n     process = {\n       denomination = "1",\n       lastUpdated = 1711049563689,\n       ticker = "ANT-BlackJack",\n       name = "BlackJack",\n       logo = "Sie_26dvgyok0PZD_-iQAFOhOd5YxDTkczOLoqTTL_A",\n       owner = "cF0H0SKdnaDTqWKY9iJKBktTpdEWgb3GnlndE7ABv0Q",\n       controllers = "["iKryOeZQMONi2965nKz528htMMN_sBcjlhc-VncoRjA","w4AORX9fhPbICNgbgTzq-uLyAsut4pKw_TJSFS-K3Tc","oEy0Wkxod2DAngJby28dhyiaD150SAJLqAfFNrbbEbY"]",\n       records = {\n         @ = {\n           ttlSeconds = 3600,\n           transactionId = "Lt3pyCXSdM9R2_lxhnqj3rzzhuLszT8s-p8vM1fpeJc"\n        }\n      }\n    },\n     lastUpdated = 1711049561377,\n     processId = "Vo7O7WJ2OPlKBtudjfeOdzjcjpi_-V_RLE27VpZP8jA",\n     record = {\n       type = "lease",\n       contractTxId = "ydbc4JLjKeurnbTBp15vlZX1Zz9StgfpZ7prVZOGA3I",\n       undernames = 10,\n       processId = "Vo7O7WJ2OPlKBtudjfeOdzjcjpi_-V_RLE27VpZP8jA",\n       startTimestamp = 1710964910,\n       endTimestamp = 1742500910,\n       purchasePrice = 875\n    }\n  }\n\n\nNOTE: Syncing data from the ArNS smartweave contract relies on the Orbit Oracle. ao and Orbit are still in early development, and may not perform exactly as expected.\n\n\n# Data\n\nThe data command ARNS.data will search through the names you have already resolved and try to find the process Id or transaction Id that the name has in its records. If the specified name isn\'t in your resolved list already, a request to resolve it will be sent.\n\nFor example:\n\nARNS.data(\'blackjack\')\n\n\nwould give the output Vo7O7WJ2OPlKBtudjfeOdzjcjpi_-V_RLE27VpZP8jA, which is the process id of an ao black jack game. The command ARNS.data(\'blackjack\') can be used in place of anywhere that you would normally have to input that process id.\n\nProcess Id information will be prioritized over contract information, so if an ArNS name has both, the process id will be returned instead of the contract id.\n\n# Undernames\n\nArNS supports undernames, which are subdomains that exist on an ArNS name. They are separated by underscores (_) instead of dots (.) like a subdomain on a traditional domain would be. the data method can return information about a specific undername on an ArNS name if you specify it.\n\nARNS.data(\'dapp_ardrive\')\n\n\nwill return qrWdhy_PxrniBUlYn0macF-YbNgbmnmV5OVSrVRxxV8, which is the transaction id for the dapp undername on the ardrive ArNS name.\n\n\n# Owner\n\nOwner will, as its name indicates, return the Arweave wallet address that owns an ArNS name. It also uses the same syntax as the other commands:\n\nARNS.owner(\'ardrive\')\n\n\n\n# ID\n\nID is another method of getting a processId or transactionId from an ArNS name. Unlike ARNS.data, ARNS.id doesn\'t rely on the "contract" or "process" fields of the name. Instead, it grabs the processId or ContractId from the top level. For example, the ardrive example shown above:\n\n   ardrive = {\n     contractTxId = "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n     lastUpdated = 1710951400626,\n     record = {\n       type = "lease",\n       contractTxId = "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n       undernames = 100,\n       startTimestamp = 1694101828,\n       endTimestamp = 1711122739,\n       purchasePrice = 0\n    }\n  }\n\n\ndoes not have the fields "contract" or "process", so if you tried to get ARNS.data(\'ardrive\') it would return nil (or undefined). Using\n\nARNS.id(\'ardrive\')\n\n\ninstead will get the contractTxId value from the top level, and return that value. Just like with data, a process id is prioritized over a contract id.\n\n\n# Clear\n\nARNS.clear will reset your NAMES table, emptying your locally saved cache of ARNS data.\n\n\n# Sync\n\nWhen someone purchases an ArNS name on arns.app, that name is not automatically synced to the ao-ArNS registry. Anyone can initiate a sync, which loads the data of an ArNS name from the smartweave contract into the ao-ArNS registry:\n\nSend({ Target = "TyduW6spZTr3gkdIsdktduJhgtilaR_ex5JukK8gI9o", Tags = { Action = "Initiate-Record-Sync", Name = "<ArNS-name-to-sync>" }})\n\n\nBe sure to replace <ArNS-name-to-sync> with the correct ArNS name.\n\nNOTE: Syncing data from the ArNS smartweave contract relies on the Orbit Oracle. ao and Orbit are still in early development, and may not perform exactly as expected.',normalizedContent:'# ao arns resolver\n\n\n# overview\n\nao is in the early stages of development, with its infrastructure evolving quickly. among the developments is the arns-resolver, a set of rules and commands that facilitate the integration of arns names from the arns registry contract into your ao process. currently, the interaction with the arns registry contract is unidirectional; ao can receive updates but cannot modify the contract. as this feature is experimental, it is expected to undergo significant changes, but users are welcome to test the current iteration.\n\n\n# installation\n\n\n# from blueprint\n\nfrom inside aos, simply type .load-blueprint arns to load the arns resolver into your aos process.\n\n\n# from source\n\nto get access to the latest development version, you can install directly from the source code.\n\nthe arns-resolver is a single file within the ao-pilot github repository from ar.io. the specific file is located here.\n\nyou can install the ao-pilot repo on your computer with\n\ngit clone https://github.com/ar-io/ao-pilot\n\nnavigating the file system inside of ao is not as straightforward as it is in a regular terminal, so opening ao directly in the same folder as the file you are going to load can make things significantly easier.\n\ncd ao-pilot/src\naos\n\n\nfrom here, simply load the arns-resolver file into your process.\n\n.load arns-resolver.lua\n\nif things work successfully, your aos terminal will print "undefined".\n\n\n# usage\n\n\n# resolve\n\nyou can resolve an arns name with the arns.resolve command.\n\narns.resolve(\'ardrive\')\n\n\nthis will fetch all of the data related to the arns name ardrive and store it locally in your names table. you can print that data by typing\n\nnames[\'ardrive\']\n\n\nand use that variable in other commands that need to reference any of the data.\n\nthe resolve command will first check the ao-arns registry for any information on the name. if there is a contracttxid field present, it will then make a request to the arns smartweave contract, using the orbit oracle, in order to try and get more information about the contract state for the underlying ant. then, if there is a processid field, a request will be made to that process to try and get ao specific information. this loads information into your local process at each step. for example, the first bit of information coming from the ao-arns registry will look like this:\n\n   ardrive = {\n     contracttxid = "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n     lastupdated = 1710951400626,\n     record = {\n       type = "lease",\n       contracttxid = "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n       undernames = 100,\n       starttimestamp = 1694101828,\n       endtimestamp = 1711122739,\n       purchaseprice = 0\n    }\n  }\n\n\nafter orbit returns the information from the arns smartweave contract, that data will be added under a contract key:\n\nardrive = {\n     contracttxid = "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n     contract = {\n       controller = "6z-ifqgvi1jowmvsnwkws6ewueq0gu9eo4ahyc3rn1m",\n       ticker = "ant-ardrive",\n       name = "ardrive.io",\n       lastupdated = 1711118753890,\n       owner = "qgwqtjdllgm2ehfwiipzmaofld50cnguzzipedodrgq",\n       balances = {\n         qgwqtjdllgm2ehfwiipzmaofld50cnguzzipedodrgq = 1\n      },\n       records = {\n         @ = {\n           ttlseconds = 3600,\n           transactionid = "noxjjj_vk0dc1ycgdwd8kti_1ihrugzlqlnnbhvpn0y"\n        },\n         cn = {\n           ttlseconds = 3300,\n           transactionid = "_hquert6pfgfxrvxrxqtkj7pv5rcizcqvmjltuy0c1k"\n        },\n         og = {\n           ttlseconds = 3600,\n           transactionid = "yzd_pm5vafypmd3zqcgmuckkulegheh7axlrnrdckbo"\n        },\n         logo = {\n           ttlseconds = 3600,\n           transactionid = "kkmrbifrc7wilcg0zvy1etlo0nbx1926dscksxcin3a"\n        },\n         og_logo = {\n           ttlseconds = 3600,\n           transactionid = "tb2wjykrpnkaw79dawljywpgdhkpijejwqfcwx715co"\n        },\n         dapp = {\n           ttlseconds = 3600,\n           transactionid = "qrwdhy_pxrnibulyn0macf-ybngbmnmv5ovsrvrxxv8"\n        },\n         og_dapp = {\n           ttlseconds = 3600,\n           transactionid = "5ir4wbu4kuv1puz1ypye1arxsrhut5g2ptmuon2jdli"\n        }\n      }\n    },\n     lastupdated = 1711118166407,\n     record = {\n       type = "lease",\n       contracttxid = "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n       undernames = 100,\n       starttimestamp = 1694101828,\n       endtimestamp = 1711122739,\n       purchaseprice = 0\n    }\n  }\n\n\nand an arns name with ao process information could look like this:\n\nblackjack = {\n     contracttxid = "ydbc4jljkeurnbtbp15vlzx1zz9stgfpz7prvzoga3i",\n     process = {\n       denomination = "1",\n       lastupdated = 1711049563689,\n       ticker = "ant-blackjack",\n       name = "blackjack",\n       logo = "sie_26dvgyok0pzd_-iqafohod5yxdtkczoloqttl_a",\n       owner = "cf0h0skdnadtqwky9ijkbkttpdewgb3gnlnde7abv0q",\n       controllers = "["ikryoezqmoni2965nkz528htmmn_sbcjlhc-vncorja","w4aorx9fhpbicngbgtzq-ulyasut4pkw_tjsfs-k3tc","oey0wkxod2dangjby28dhyiad150sajlqaffnrbbeby"]",\n       records = {\n         @ = {\n           ttlseconds = 3600,\n           transactionid = "lt3pycxsdm9r2_lxhnqj3rzzhulszt8s-p8vm1fpejc"\n        }\n      }\n    },\n     lastupdated = 1711049561377,\n     processid = "vo7o7wj2oplkbtudjfeodzjcjpi_-v_rle27vpzp8ja",\n     record = {\n       type = "lease",\n       contracttxid = "ydbc4jljkeurnbtbp15vlzx1zz9stgfpz7prvzoga3i",\n       undernames = 10,\n       processid = "vo7o7wj2oplkbtudjfeodzjcjpi_-v_rle27vpzp8ja",\n       starttimestamp = 1710964910,\n       endtimestamp = 1742500910,\n       purchaseprice = 875\n    }\n  }\n\n\nnote: syncing data from the arns smartweave contract relies on the orbit oracle. ao and orbit are still in early development, and may not perform exactly as expected.\n\n\n# data\n\nthe data command arns.data will search through the names you have already resolved and try to find the process id or transaction id that the name has in its records. if the specified name isn\'t in your resolved list already, a request to resolve it will be sent.\n\nfor example:\n\narns.data(\'blackjack\')\n\n\nwould give the output vo7o7wj2oplkbtudjfeodzjcjpi_-v_rle27vpzp8ja, which is the process id of an ao black jack game. the command arns.data(\'blackjack\') can be used in place of anywhere that you would normally have to input that process id.\n\nprocess id information will be prioritized over contract information, so if an arns name has both, the process id will be returned instead of the contract id.\n\n# undernames\n\narns supports undernames, which are subdomains that exist on an arns name. they are separated by underscores (_) instead of dots (.) like a subdomain on a traditional domain would be. the data method can return information about a specific undername on an arns name if you specify it.\n\narns.data(\'dapp_ardrive\')\n\n\nwill return qrwdhy_pxrnibulyn0macf-ybngbmnmv5ovsrvrxxv8, which is the transaction id for the dapp undername on the ardrive arns name.\n\n\n# owner\n\nowner will, as its name indicates, return the arweave wallet address that owns an arns name. it also uses the same syntax as the other commands:\n\narns.owner(\'ardrive\')\n\n\n\n# id\n\nid is another method of getting a processid or transactionid from an arns name. unlike arns.data, arns.id doesn\'t rely on the "contract" or "process" fields of the name. instead, it grabs the processid or contractid from the top level. for example, the ardrive example shown above:\n\n   ardrive = {\n     contracttxid = "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n     lastupdated = 1710951400626,\n     record = {\n       type = "lease",\n       contracttxid = "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n       undernames = 100,\n       starttimestamp = 1694101828,\n       endtimestamp = 1711122739,\n       purchaseprice = 0\n    }\n  }\n\n\ndoes not have the fields "contract" or "process", so if you tried to get arns.data(\'ardrive\') it would return nil (or undefined). using\n\narns.id(\'ardrive\')\n\n\ninstead will get the contracttxid value from the top level, and return that value. just like with data, a process id is prioritized over a contract id.\n\n\n# clear\n\narns.clear will reset your names table, emptying your locally saved cache of arns data.\n\n\n# sync\n\nwhen someone purchases an arns name on arns.app, that name is not automatically synced to the ao-arns registry. anyone can initiate a sync, which loads the data of an arns name from the smartweave contract into the ao-arns registry:\n\nsend({ target = "tyduw6spztr3gkdisdktdujhgtilar_ex5jukk8gi9o", tags = { action = "initiate-record-sync", name = "<arns-name-to-sync>" }})\n\n\nbe sure to replace <arns-name-to-sync> with the correct arns name.\n\nnote: syncing data from the arns smartweave contract relies on the orbit oracle. ao and orbit are still in early development, and may not perform exactly as expected.',charsets:{}},{title:"AR.IO Foundation",frontmatter:{permalink:"/foundation",prev:!1},regularPath:"/foundation.html",relativePath:"foundation.md",key:"v-ecd6cf40",path:"/foundation/",headers:[{level:2,title:"What is the AR.IO Foundation?",slug:"what-is-the-ar-io-foundation",normalizedTitle:"what is the ar.io foundation?",charIndex:23},{level:2,title:"Guiding Philosophy",slug:"guiding-philosophy",normalizedTitle:"guiding philosophy",charIndex:686}],headersStr:"What is the AR.IO Foundation? Guiding Philosophy",content:"# AR.IO Foundation\n\n\n# What is the AR.IO Foundation?\n\nThe AR.IO Foundation is dedicated to the stewardship and prosperity of The AR.IO Network and its associated token ecosystem. It holds a non-revocable, exclusive license to promote the development of the network, prioritizing the ecosystem's wellbeing, particularly the users.\n\nKey strategies employed by the Foundation (with the assistance of third-party teams) in support of the network include:\n\n * Providing grants and incentive programs\n\n * Making strategic investments\n\n * Engaging in direct software development\n\n * Producing educational content\n\n * Conducting publicity and marketing initiatives\n\n * Forming partnerships\n\n\n# Guiding Philosophy\n\nThe AR.IO Foundation serves as a unifying force within the ecosystem, facilitating communication, fostering innovation, and driving overall progress. Its primary aim is to function as a supportive entity rather than exerting excessive control over the network or disrupting its economic processes.\n\nThe key objectives of the AR.IO Foundation are as follows:\n\n * Sustaining and advancing the AR.IO Network: The Foundation takes responsibility for the continued development and enhancement of the AR.IO Network. It works collaboratively with developers, contributors, and stakeholders to ensure the network remains robust, secure, and adaptable to evolving technological landscapes.\n\n * Allocating resources to promote ecosystem and community growth: The Foundation is entrusted with managing and allocating resources to fuel the growth and expansion of the AR.IO ecosystem. This includes funding research initiatives, supporting innovative projects, and encouraging community-driven initiatives that contribute to the network's overall health and vitality.\n\n * Managing the core development of the AR.IO Network: The Foundation oversees and coordinates the core development efforts of the AR.IO Network. This involves coordinating with developers and technical teams to implement upgrades, address vulnerabilities, and introduce new features that align with the network's vision and community consensus.\n\n * Fostering collaboration and inclusivity: The Foundation actively fosters a culture of collaboration and inclusivity within the AR.IO ecosystem. It encourages diverse perspectives and welcomes contributions from individuals and organizations, fostering an environment where all participants can thrive and collectively shape the network's future.\n\nBy diligently pursuing these objectives, the AR.IO Foundation aims to create an environment where the AR.IO Network can flourish as a decentralized, secure, and resilient platform, contributing positively to the broader permaweb and decentralized storage landscape.",normalizedContent:"# ar.io foundation\n\n\n# what is the ar.io foundation?\n\nthe ar.io foundation is dedicated to the stewardship and prosperity of the ar.io network and its associated token ecosystem. it holds a non-revocable, exclusive license to promote the development of the network, prioritizing the ecosystem's wellbeing, particularly the users.\n\nkey strategies employed by the foundation (with the assistance of third-party teams) in support of the network include:\n\n * providing grants and incentive programs\n\n * making strategic investments\n\n * engaging in direct software development\n\n * producing educational content\n\n * conducting publicity and marketing initiatives\n\n * forming partnerships\n\n\n# guiding philosophy\n\nthe ar.io foundation serves as a unifying force within the ecosystem, facilitating communication, fostering innovation, and driving overall progress. its primary aim is to function as a supportive entity rather than exerting excessive control over the network or disrupting its economic processes.\n\nthe key objectives of the ar.io foundation are as follows:\n\n * sustaining and advancing the ar.io network: the foundation takes responsibility for the continued development and enhancement of the ar.io network. it works collaboratively with developers, contributors, and stakeholders to ensure the network remains robust, secure, and adaptable to evolving technological landscapes.\n\n * allocating resources to promote ecosystem and community growth: the foundation is entrusted with managing and allocating resources to fuel the growth and expansion of the ar.io ecosystem. this includes funding research initiatives, supporting innovative projects, and encouraging community-driven initiatives that contribute to the network's overall health and vitality.\n\n * managing the core development of the ar.io network: the foundation oversees and coordinates the core development efforts of the ar.io network. this involves coordinating with developers and technical teams to implement upgrades, address vulnerabilities, and introduce new features that align with the network's vision and community consensus.\n\n * fostering collaboration and inclusivity: the foundation actively fosters a culture of collaboration and inclusivity within the ar.io ecosystem. it encourages diverse perspectives and welcomes contributions from individuals and organizations, fostering an environment where all participants can thrive and collectively shape the network's future.\n\nby diligently pursuing these objectives, the ar.io foundation aims to create an environment where the ar.io network can flourish as a decentralized, secure, and resilient platform, contributing positively to the broader permaweb and decentralized storage landscape.",charsets:{}},{title:"Gateway network",frontmatter:{permalink:"/gateway-network/"},regularPath:"/gateway-network.html",relativePath:"gateway-network.md",key:"v-90d4f50c",path:"/gateway-network/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:22},{level:2,title:"Gateway Address Registry (GAR)",slug:"gateway-address-registry-gar",normalizedTitle:"gateway address registry (gar)",charIndex:235},{level:2,title:"Staking",slug:"staking",normalizedTitle:"staking",charIndex:2650},{level:2,title:"Schema",slug:"schema",normalizedTitle:"schema",charIndex:3834},{level:3,title:"Gateway Schema",slug:"gateway-schema",normalizedTitle:"gateway schema",charIndex:3845},{level:3,title:"Token Vault",slug:"token-vault",normalizedTitle:"token vault",charIndex:5414},{level:3,title:"Gateway Settings",slug:"gateway-settings",normalizedTitle:"gateway settings",charIndex:5706}],headersStr:"Overview Gateway Address Registry (GAR) Staking Schema Gateway Schema Token Vault Gateway Settings",content:'# Gateway network\n\n\n# Overview\n\nThe AR.IO Network consists of AR.IO Gateway nodes, which are identified by their registered Arweave wallet addresses and either their IP addresses or hostnames, as stored in the network\'s smart contract Gateway Address Registry (GAR).\n\nThese nodes adhere to the AR.IO Network Protocols, creating a collaborative environment of Gateway nodes that vary in scale and specialization. The network ensures a fundamental level of service quality and trust minimization among its participants.\n\nBeing part of the network grants AR.IO Gateways an array of advantages, such as:\n\n * Simplified advertising of services and end user discovery via the Gateway Address Registry.\n\n * More rapid bootstrapping of key Gateway operational data due to prioritized data request fulfillment among Gateways joined to the network.\n\n * Sharing of data processing results.\n\n * Access to support channels tailored for operators.\n\n * Enhanced trust and transparency through the use of AGPL-3 licenses, which mandate public disclosure of any software changes, thereby reinforcing the network\'s integrity and reliability.\n\n * Improved network reliability and performance through an incentive protocol, which uses a system of rewards and evaluations to encourage high-quality service from Gateways.\n\n\n# Gateway Address Registry (GAR)\n\nAny Gateway operator that whishes to join the AR.IO Network must register their node in the AR.IO smart contract\'s "Gateway Address Registry", known as the GAR. Registration involves staking a minimum amount of IO tokens and providing additional metadata describing the Gateway service offered.\n\nAfter joining the network, the operator\'s Gateway can be easily discovered by permaweb apps, its health can be observed, and it can participate in the AR.IO data sharing protocol.\n\nThe Gateway operator can modify their Gateway\'s GAR configuration as needed, which includes adding more tokens to their stake or removing them. Operators can completely remove their stake and leave the AR.IO Network following a minimum network exit wait time. This exit time ensures that Gateways cannot quickly escape from an anticipated penalty.\n\nThe GAR advertises the specific attributes of each Gateway including its stake and settings. This enables permaweb apps and users to discover which Gateways are currently available and meet their needs. Apps that read the GAR can sort and filter it using the Gateway metadata, for example, ranking Gateways with the highest stake at the top of the list. This would allow users to prefer the lower-trust, higher staked Gateways before settling on a higher-trust, lower staked Gateway.\n\n\n# Staking\n\nStaking tokens serves a dual purpose in the AR.IO Network:\n\n * It acts as a method of public commitment, and\n\n * It qualifies participants for reward distribution.\n\nIn the AR.IO Network, "staking" designates the act of locking a specified amount of IO tokens into a protocol-controlled vault. These tokens act as a form of collateral and public commitment, encouraging network participants to act in the network\'s best interests. Once tokens are deposited in the vault, they remain locked until either the participant triggers the "unstake" function or the vault\'s predetermined lock period expires.\n\nIt is important to note that unlike other protocols, the IO token is non-inflationary. Therefore, the staking mechanism in the AR.IO Network is not designed to function as a yield-generation tool. By staking their tokens, participants become eligible for potential rewards, fostering an atmosphere of mutual trust within the network. Specifically, Gateway operators stake tokens to facilitate their Gateway integration and establish public trust. Once connected, they become eligible for rewards driven by the protocol and gain access to the network\'s shared resources.\n\n\n# Schema\n\n\n# Gateway Schema\n\nGATEWAY\nNAME                  TYPE               DESCRIPTION\nOPERATORSTAKE         number             The total stake of the Gateway\'s operator.\nSTART                 number             Block number in which the Gateway joined the network.\nEND                   number             Block number in which the Gateway can leave the network,\n                                         setting to 0 means no end date.\nSTATUS                string             Participation status of the Gateway, "joined" -\n                                         participating in the network, "hidden" - not leaving, but\n                                         not participating, "leaving" - in the process of withdrawing\n                                         from the network.\nVAULTS                array of objects   The locked tokens staked by the Gateway operator, view\n                                         schema.\nSETTINGS              object             Additional configuration settings for the Gateway, view\n                                         schema.\nDELEGATES             object             Wallets that have delegated a stake of IO tokens to the\n                                         Gateway.\nTOTALDELEGATEDSTAKE   number             The total number of IO tokens delegated to the Gateway\nOBSERVERWALLET        string             The public address for the wallet being used to sign and\n                                         upload Observer reports\nSTATS                 object             Information about the Gateways Network performance\n\n\n# Token Vault\n\nTOKEN VAULT\nNAME      TYPE     DESCRIPTION\nBALANCE   number   Positive integer, the number of IO tokens locked.\nSTART     number   Block number in which locking starts.\nEND       number   Block number in which locking ends. Setting to 0 means no\n                   end date.\n\n\n# Gateway Settings\n\nGATEWAY SETTINGS\nNAME                        TYPE      REQUIRED   DESCRIPTION\nLABEL                       string    yes        The friendly name used to label the Gateway.\nFQDN                        string    yes        The fully qualified domain name at which the Gateway can be\n                                                 reached. e.g. arweave.net\nPORT                        number    yes        The port used by the Gateway. e.g. 443\nPROTOCOL                    string    yes        Web protocol used by this Gateway "https", or "http"\nPROPERTIES                  string    no         An Arweave transaction ID containing additional properties\n                                                 of the Gateway.\nNOTE                        string    no         An Arweave transaction ID containing additional notes the\n                                                 Gateway operator can set to include things like\n                                                 announcements, maintenance, or other operational updates.\nALLOWDELEGATEDSTAKING       boolean   no         The Gateway Operator can allow or disallow other wallets to\n                                                 stake IO tokens on the Gateway.\nDELEGATEDREWARDSHARERATIO   number    no         The percentage of Gateway rewards given to delegated stakers\nAUTOSTAKE                   boolean   no         If true, Gateway rewards will automatically be added to the\n                                                 Gateway\'s Operator stake',normalizedContent:'# gateway network\n\n\n# overview\n\nthe ar.io network consists of ar.io gateway nodes, which are identified by their registered arweave wallet addresses and either their ip addresses or hostnames, as stored in the network\'s smart contract gateway address registry (gar).\n\nthese nodes adhere to the ar.io network protocols, creating a collaborative environment of gateway nodes that vary in scale and specialization. the network ensures a fundamental level of service quality and trust minimization among its participants.\n\nbeing part of the network grants ar.io gateways an array of advantages, such as:\n\n * simplified advertising of services and end user discovery via the gateway address registry.\n\n * more rapid bootstrapping of key gateway operational data due to prioritized data request fulfillment among gateways joined to the network.\n\n * sharing of data processing results.\n\n * access to support channels tailored for operators.\n\n * enhanced trust and transparency through the use of agpl-3 licenses, which mandate public disclosure of any software changes, thereby reinforcing the network\'s integrity and reliability.\n\n * improved network reliability and performance through an incentive protocol, which uses a system of rewards and evaluations to encourage high-quality service from gateways.\n\n\n# gateway address registry (gar)\n\nany gateway operator that whishes to join the ar.io network must register their node in the ar.io smart contract\'s "gateway address registry", known as the gar. registration involves staking a minimum amount of io tokens and providing additional metadata describing the gateway service offered.\n\nafter joining the network, the operator\'s gateway can be easily discovered by permaweb apps, its health can be observed, and it can participate in the ar.io data sharing protocol.\n\nthe gateway operator can modify their gateway\'s gar configuration as needed, which includes adding more tokens to their stake or removing them. operators can completely remove their stake and leave the ar.io network following a minimum network exit wait time. this exit time ensures that gateways cannot quickly escape from an anticipated penalty.\n\nthe gar advertises the specific attributes of each gateway including its stake and settings. this enables permaweb apps and users to discover which gateways are currently available and meet their needs. apps that read the gar can sort and filter it using the gateway metadata, for example, ranking gateways with the highest stake at the top of the list. this would allow users to prefer the lower-trust, higher staked gateways before settling on a higher-trust, lower staked gateway.\n\n\n# staking\n\nstaking tokens serves a dual purpose in the ar.io network:\n\n * it acts as a method of public commitment, and\n\n * it qualifies participants for reward distribution.\n\nin the ar.io network, "staking" designates the act of locking a specified amount of io tokens into a protocol-controlled vault. these tokens act as a form of collateral and public commitment, encouraging network participants to act in the network\'s best interests. once tokens are deposited in the vault, they remain locked until either the participant triggers the "unstake" function or the vault\'s predetermined lock period expires.\n\nit is important to note that unlike other protocols, the io token is non-inflationary. therefore, the staking mechanism in the ar.io network is not designed to function as a yield-generation tool. by staking their tokens, participants become eligible for potential rewards, fostering an atmosphere of mutual trust within the network. specifically, gateway operators stake tokens to facilitate their gateway integration and establish public trust. once connected, they become eligible for rewards driven by the protocol and gain access to the network\'s shared resources.\n\n\n# schema\n\n\n# gateway schema\n\ngateway\nname                  type               description\noperatorstake         number             the total stake of the gateway\'s operator.\nstart                 number             block number in which the gateway joined the network.\nend                   number             block number in which the gateway can leave the network,\n                                         setting to 0 means no end date.\nstatus                string             participation status of the gateway, "joined" -\n                                         participating in the network, "hidden" - not leaving, but\n                                         not participating, "leaving" - in the process of withdrawing\n                                         from the network.\nvaults                array of objects   the locked tokens staked by the gateway operator, view\n                                         schema.\nsettings              object             additional configuration settings for the gateway, view\n                                         schema.\ndelegates             object             wallets that have delegated a stake of io tokens to the\n                                         gateway.\ntotaldelegatedstake   number             the total number of io tokens delegated to the gateway\nobserverwallet        string             the public address for the wallet being used to sign and\n                                         upload observer reports\nstats                 object             information about the gateways network performance\n\n\n# token vault\n\ntoken vault\nname      type     description\nbalance   number   positive integer, the number of io tokens locked.\nstart     number   block number in which locking starts.\nend       number   block number in which locking ends. setting to 0 means no\n                   end date.\n\n\n# gateway settings\n\ngateway settings\nname                        type      required   description\nlabel                       string    yes        the friendly name used to label the gateway.\nfqdn                        string    yes        the fully qualified domain name at which the gateway can be\n                                                 reached. e.g. arweave.net\nport                        number    yes        the port used by the gateway. e.g. 443\nprotocol                    string    yes        web protocol used by this gateway "https", or "http"\nproperties                  string    no         an arweave transaction id containing additional properties\n                                                 of the gateway.\nnote                        string    no         an arweave transaction id containing additional notes the\n                                                 gateway operator can set to include things like\n                                                 announcements, maintenance, or other operational updates.\nallowdelegatedstaking       boolean   no         the gateway operator can allow or disallow other wallets to\n                                                 stake io tokens on the gateway.\ndelegatedrewardshareratio   number    no         the percentage of gateway rewards given to delegated stakers\nautostake                   boolean   no         if true, gateway rewards will automatically be added to the\n                                                 gateway\'s operator stake',charsets:{}},{title:"AR.IO HTTP API Admin Endpoints",frontmatter:{},regularPath:"/gateways/ar-io-node/admin/admin-api.html",relativePath:"gateways/ar-io-node/admin/admin-api.md",key:"v-48851acc",path:"/gateways/ar-io-node/admin/admin-api.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:37},{level:2,title:"Debug",slug:"debug",normalizedTitle:"debug",charIndex:648},{level:2,title:"Queue Transaction",slug:"queue-transaction",normalizedTitle:"queue transaction",charIndex:1756},{level:2,title:"Block Data",slug:"block-data",normalizedTitle:"block data",charIndex:2297}],headersStr:"Overview Debug Queue Transaction Block Data",content:'# AR.IO HTTP API Admin Endpoints\n\n\n# Overview\n\nThe AR.IO HTTP API offers several endpoints that allow access to internal information and the ability to make adjustments without restarting your Gateway. Each of these endpoints behind /ar-io/admin/ have access restricted, so you will need to have set up your ADMIN_API_KEY variable and include "Authorization: "Bearer ${ADMIN_API_KEY}" in the header of your request.\n\nWhen testing endpoints at <your-Gateway>/api-docs, you can enter your ADMIN_API_KEY using the green "Authorize" button near the top of the page, or by clicking any of the open lock icons next to a password protected end point.\n\n\n# Debug\n\nThe ar-io/admin/debug endpoint provides a comprehensive view of the current state of your Gateway. This endpoint has been designed to offer developers and administrators insights into the operational status of the gateway, including any errors or warnings that have occurred since the last startup.\n\nExample response\n\n{\n  db: {\n    counts: {\n      wallets: 137,\n      tagNames: 61,\n      tagValues: 892,\n      stableTxs: 0,\n      stableBlocks: 0,\n      stableBlockTxs: 0,\n      missingStableBlocks: 0,\n      missingStableTxs: 0,\n      missingTxs: 0,\n      newBlocks: 32,\n      newTxs: 4436,\n      bundleCount: 159,\n      bundleDataItems: 0,\n      matcheDataItems: 0,\n      dataItems: 0,\n      nestedDataItems: null\n    },\n    heights: { minStable: -1, maxStable: -1, minNew: 1000000, maxNew: 1000031 },\n    timestamps: {\n      now: 1692230403,\n      maxBundleQueuedAt: -1,\n      maxBundleSkippedAt: 1692230390,\n      maxBundleUnbundledAt: -1,\n      maxBundleFullyIndexedAt: -1,\n      maxNewDataItemIndexedAt: -1,\n      maxStableDataItemIndexedAt: -1\n    },\n    errors: [],\n    warnings: []\n  }\n}\n\n\n\n# Queue Transaction\n\nThe ar-io/admin/queue-tx endpoint allows you to prioritize processing of a specific transaction, based on that transaction\'s ID. The id key must be set in the body of your request, and a POST request should be used.\n\nThis endpoint will also enable you to prioritize opening and indexing bundles by providing the L1 TX ID for the bundle, but only if your Gateway is operating with the ANS104_UNBUNDLE_FILTER and ANS104_INDEX_FILTER keys set.\n\nYour Gateway will either respond with an error, or { message: \'TX queued\' }\n\n\n# Block Data\n\nThe ar-io/admin/block-data endpoint allows you to tell your Gateway to refuse to serve certain data. In order to add to this block list, make a PUT request to this endpoint with the following in the body:\n\n{\n    "id": "<TX ID you want to block>",\n    "notes": "Example notes",\n    "source": "Example source"\n}\n\n\n * id: This should be the transaction id of the content you want to block.\n * notes: Notes regarding the reason this content was blocked. For documentation purposes only.\n * source: Identifier for the source of TX IDs you are blocking. For example, the name of a public block list. For documentation purposes only.\n\nYour Gateway will either respond with an error, or { message: \'Content blocked\' }',normalizedContent:'# ar.io http api admin endpoints\n\n\n# overview\n\nthe ar.io http api offers several endpoints that allow access to internal information and the ability to make adjustments without restarting your gateway. each of these endpoints behind /ar-io/admin/ have access restricted, so you will need to have set up your admin_api_key variable and include "authorization: "bearer ${admin_api_key}" in the header of your request.\n\nwhen testing endpoints at <your-gateway>/api-docs, you can enter your admin_api_key using the green "authorize" button near the top of the page, or by clicking any of the open lock icons next to a password protected end point.\n\n\n# debug\n\nthe ar-io/admin/debug endpoint provides a comprehensive view of the current state of your gateway. this endpoint has been designed to offer developers and administrators insights into the operational status of the gateway, including any errors or warnings that have occurred since the last startup.\n\nexample response\n\n{\n  db: {\n    counts: {\n      wallets: 137,\n      tagnames: 61,\n      tagvalues: 892,\n      stabletxs: 0,\n      stableblocks: 0,\n      stableblocktxs: 0,\n      missingstableblocks: 0,\n      missingstabletxs: 0,\n      missingtxs: 0,\n      newblocks: 32,\n      newtxs: 4436,\n      bundlecount: 159,\n      bundledataitems: 0,\n      matchedataitems: 0,\n      dataitems: 0,\n      nesteddataitems: null\n    },\n    heights: { minstable: -1, maxstable: -1, minnew: 1000000, maxnew: 1000031 },\n    timestamps: {\n      now: 1692230403,\n      maxbundlequeuedat: -1,\n      maxbundleskippedat: 1692230390,\n      maxbundleunbundledat: -1,\n      maxbundlefullyindexedat: -1,\n      maxnewdataitemindexedat: -1,\n      maxstabledataitemindexedat: -1\n    },\n    errors: [],\n    warnings: []\n  }\n}\n\n\n\n# queue transaction\n\nthe ar-io/admin/queue-tx endpoint allows you to prioritize processing of a specific transaction, based on that transaction\'s id. the id key must be set in the body of your request, and a post request should be used.\n\nthis endpoint will also enable you to prioritize opening and indexing bundles by providing the l1 tx id for the bundle, but only if your gateway is operating with the ans104_unbundle_filter and ans104_index_filter keys set.\n\nyour gateway will either respond with an error, or { message: \'tx queued\' }\n\n\n# block data\n\nthe ar-io/admin/block-data endpoint allows you to tell your gateway to refuse to serve certain data. in order to add to this block list, make a put request to this endpoint with the following in the body:\n\n{\n    "id": "<tx id you want to block>",\n    "notes": "example notes",\n    "source": "example source"\n}\n\n\n * id: this should be the transaction id of the content you want to block.\n * notes: notes regarding the reason this content was blocked. for documentation purposes only.\n * source: identifier for the source of tx ids you are blocking. for example, the name of a public block list. for documentation purposes only.\n\nyour gateway will either respond with an error, or { message: \'content blocked\' }',charsets:{}},{title:"Advanced Configuration",frontmatter:{},regularPath:"/gateways/ar-io-node/advanced-config.html",relativePath:"gateways/ar-io-node/advanced-config.md",key:"v-9172688c",path:"/gateways/ar-io-node/advanced-config.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:29},{level:2,title:"Data Storage Location",slug:"data-storage-location",normalizedTitle:"data storage location",charIndex:685},{level:2,title:"Admin API Key",slug:"admin-api-key",normalizedTitle:"admin api key",charIndex:1390},{level:2,title:"Wallet Association",slug:"wallet-association",normalizedTitle:"wallet association",charIndex:1867},{level:2,title:"Unbundling",slug:"unbundling",normalizedTitle:"unbundling",charIndex:2151},{level:2,title:"Content Moderation",slug:"content-moderation",normalizedTitle:"content moderation",charIndex:2814},{level:2,title:"Contiguous Data Cleanup",slug:"contiguous-data-cleanup",normalizedTitle:"contiguous data cleanup",charIndex:3918},{level:2,title:"ArNS Resolver",slug:"arns-resolver",normalizedTitle:"arns resolver",charIndex:4949}],headersStr:"Overview Data Storage Location Admin API Key Wallet Association Unbundling Content Moderation Contiguous Data Cleanup ArNS Resolver",content:'# Advanced Configuration\n\n\n# Overview\n\nThe Getting Started guides for windows and linux contain all the information needed to start your ar.io Gateway node successfully with basic configurations. There are also ever expanding advanced configuration options that allow you to run your node in a way that is customized to your specific use case.\n\nMost of the below options can be added to your .env file in order to customize its operation. Any changes made to your .env require you to stop the docker containers running your node, and restarting them with the --build flag in order for the changes to take effect. See ENV for a complete list of environmental variables you can set.\n\n\n# Data Storage Location\n\nYou can set a custom location for your AR.IO Gateway to save the data it pulls from the Arweave network. There are three primary types of data stored, and you can set a unique storage location for each of these independently. These are "chunks data", "contiguous data", and "headers data". The custom location for each of these can be set in your .env file like this:\n\nCHUNKS_DATA_PATH=<file path>\nCONTIGUOUS_DATA_PATH=<file path>\nHEADERS_DATA_PATH=<file path>\n\n\nBe sure to replace "<file path>" with the path to the location where you would like the data stored. If these values are omitted, the data will be stored in the "data" directory inside your Gateway code repository.\n\n\n# Admin API Key\n\nHTTP endpoints under "/ar-io/admin" are protected by an admin API key. These endpoints allow you to get certain analytics data or make adjustments to your node as it\'s running. When your node starts, it reads your environmental variables to see if a key is set. If not, a random key is generated. The key name is ADMIN_API_KEY and it should be set in your .env file like this:\n\nADMIN_API_KEY=SUPER_SECRET_PASSWORD\n\n\nView examples of the admin endpoints here\n\n\n# Wallet Association\n\nIn order to participate in the greater ar.io network, Gateway nodes need to associate themselves with an Arweave wallet. This can be configured by setting the AR_IO_WALLET key value in your .env file.\n\nAR_IO_WALLET=1seRanklLU_1VTGowDZdD7s_-7k1qowT6oeFZHUZiZo\n\n\n\n# Unbundling\n\nAR.IO Gateway nodes support unbundling and indexing ANS-104 bundle data. This is disabled by default, but can be turned on with several different configuration options. You can set these configurations with the ANS104_UNBUNDLE_FILTER and ANS104_INDEX_FILTER keys in your .env:\n\nANS104_UNBUNDLE_FILTER="<filter string>"\nANS104_INDEX_FILTER="<filter string>"\n\n\nThe following types of filters are supported:\n\n{ "never": true } # the default\n{ "always": true }\n{ "attributes": { "owner": <owner key>, ... }}\n{ "tags": [{ "name": <utf8 tag name>, "value": <utf8 tag value> }, ...]}\n{ "and": [ <nested filter>, ... ]}\n{ "or": [ <nested filter>, ... ]}\n\n\n\n# Content Moderation\n\nYou are able to set your Gateway to block specific transactions or data-items you don\'t want to serve. Unlike previous configuration options in this list, blocking content can be achieved without the need to add to your .env file and rebuild your Gateway. Instead, make a PUT request to your Gateway at /ar-io/admin/block-data. As this is an admin endpoint, you will need to have configured your ADMIN_API_KEY. Using curl as an example, the request should be formatted as follows:\n\ncurl -X PUT -H "Authorization: Bearer <ADMIN_KEY>" \\\n  -H "Content-Type: application/json" \\\n  "http://<HOST>:<PORT>/ar-io/admin/block-data" \\\n  -d \'{ "id": "<ID>", "notes": "Example notes", "source": "Example source" }\'\n\n\n * id (string): This will be the transaction ID of the content you want to add to your block list.\n * notes (string): Internal notes regarding why a particular ID is blocked.\n * source (string): Identifier of a particular source of IDs to block. (e.g. the name of a block list)\n\nnotes and source are used for documentation only, and have no effect on your block list itself.\n\n\n# Contiguous Data Cleanup\n\nTransaction data on Arweave is stored in a chunked manner. It is commonly retrieved, however, in the the transaction data\'s original, contiguous form with all of its component chunks assembled end-to-end. Gateways cache contiguous representations of the transaction data to assist in various workloads, including serving transaction data to clients, allowing for efficient utilization of valuable system resources. Gateway operators will need to determine for themselves the best balance between disk space and other resource usage based on the size of their gateway and their particular use case.\n\nContiguous data cache cleanup can be enabled using the CONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD environmental variable. This variable sets the number of seconds from the creation of a file in the contiguous data cache after which that file will be deleted. For example:\n\nCONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD=10000\n\n\nwill clear items from the contiguous data cache after ten thousand (10,000) seconds.\n\n\n# ArNS Resolver\n\nGateways, by default, forward requests to resolve ArNS names to arweave.dev. Starting with Release 9 gateways can instead build and maintain their own local cache. Doing so removes external dependencies and allows faster resolution.\n\nView the code for the ArNS resolver service here: https://github.com/ar-io/arns-resolver\n\nNOTE: The ArNS resolver is still an experimental feature. It is possible it may behave in unexpected ways when presented with rare edge case scenarios.\n\nIn order to enable the local ArNS resolver, three environmental variables will need to be set:\n\nRUN_RESOLVER=true\nTRUSTED_ARNS_RESOLVER_TYPE=resolver\nTRUSTED_ARNS_RESOLVER_URL=http://resolver:6000\n\n\n * RUN_RESOLVER is a boolean representing an on/off switch for the local resolver.\n * TRUSTED_ARNS_RESOLVER_TYPE sets the method the gateway uses for resolving ArNS names. Use resolver for the local resolver, or gateway for default functionality.\n * TRUSTED_ARNS_RESOLVER_URL is the url a gateway will use to request ArNS name resolution.',normalizedContent:'# advanced configuration\n\n\n# overview\n\nthe getting started guides for windows and linux contain all the information needed to start your ar.io gateway node successfully with basic configurations. there are also ever expanding advanced configuration options that allow you to run your node in a way that is customized to your specific use case.\n\nmost of the below options can be added to your .env file in order to customize its operation. any changes made to your .env require you to stop the docker containers running your node, and restarting them with the --build flag in order for the changes to take effect. see env for a complete list of environmental variables you can set.\n\n\n# data storage location\n\nyou can set a custom location for your ar.io gateway to save the data it pulls from the arweave network. there are three primary types of data stored, and you can set a unique storage location for each of these independently. these are "chunks data", "contiguous data", and "headers data". the custom location for each of these can be set in your .env file like this:\n\nchunks_data_path=<file path>\ncontiguous_data_path=<file path>\nheaders_data_path=<file path>\n\n\nbe sure to replace "<file path>" with the path to the location where you would like the data stored. if these values are omitted, the data will be stored in the "data" directory inside your gateway code repository.\n\n\n# admin api key\n\nhttp endpoints under "/ar-io/admin" are protected by an admin api key. these endpoints allow you to get certain analytics data or make adjustments to your node as it\'s running. when your node starts, it reads your environmental variables to see if a key is set. if not, a random key is generated. the key name is admin_api_key and it should be set in your .env file like this:\n\nadmin_api_key=super_secret_password\n\n\nview examples of the admin endpoints here\n\n\n# wallet association\n\nin order to participate in the greater ar.io network, gateway nodes need to associate themselves with an arweave wallet. this can be configured by setting the ar_io_wallet key value in your .env file.\n\nar_io_wallet=1serankllu_1vtgowdzdd7s_-7k1qowt6oefzhuzizo\n\n\n\n# unbundling\n\nar.io gateway nodes support unbundling and indexing ans-104 bundle data. this is disabled by default, but can be turned on with several different configuration options. you can set these configurations with the ans104_unbundle_filter and ans104_index_filter keys in your .env:\n\nans104_unbundle_filter="<filter string>"\nans104_index_filter="<filter string>"\n\n\nthe following types of filters are supported:\n\n{ "never": true } # the default\n{ "always": true }\n{ "attributes": { "owner": <owner key>, ... }}\n{ "tags": [{ "name": <utf8 tag name>, "value": <utf8 tag value> }, ...]}\n{ "and": [ <nested filter>, ... ]}\n{ "or": [ <nested filter>, ... ]}\n\n\n\n# content moderation\n\nyou are able to set your gateway to block specific transactions or data-items you don\'t want to serve. unlike previous configuration options in this list, blocking content can be achieved without the need to add to your .env file and rebuild your gateway. instead, make a put request to your gateway at /ar-io/admin/block-data. as this is an admin endpoint, you will need to have configured your admin_api_key. using curl as an example, the request should be formatted as follows:\n\ncurl -x put -h "authorization: bearer <admin_key>" \\\n  -h "content-type: application/json" \\\n  "http://<host>:<port>/ar-io/admin/block-data" \\\n  -d \'{ "id": "<id>", "notes": "example notes", "source": "example source" }\'\n\n\n * id (string): this will be the transaction id of the content you want to add to your block list.\n * notes (string): internal notes regarding why a particular id is blocked.\n * source (string): identifier of a particular source of ids to block. (e.g. the name of a block list)\n\nnotes and source are used for documentation only, and have no effect on your block list itself.\n\n\n# contiguous data cleanup\n\ntransaction data on arweave is stored in a chunked manner. it is commonly retrieved, however, in the the transaction data\'s original, contiguous form with all of its component chunks assembled end-to-end. gateways cache contiguous representations of the transaction data to assist in various workloads, including serving transaction data to clients, allowing for efficient utilization of valuable system resources. gateway operators will need to determine for themselves the best balance between disk space and other resource usage based on the size of their gateway and their particular use case.\n\ncontiguous data cache cleanup can be enabled using the contiguous_data_cache_cleanup_threshold environmental variable. this variable sets the number of seconds from the creation of a file in the contiguous data cache after which that file will be deleted. for example:\n\ncontiguous_data_cache_cleanup_threshold=10000\n\n\nwill clear items from the contiguous data cache after ten thousand (10,000) seconds.\n\n\n# arns resolver\n\ngateways, by default, forward requests to resolve arns names to arweave.dev. starting with release 9 gateways can instead build and maintain their own local cache. doing so removes external dependencies and allows faster resolution.\n\nview the code for the arns resolver service here: https://github.com/ar-io/arns-resolver\n\nnote: the arns resolver is still an experimental feature. it is possible it may behave in unexpected ways when presented with rare edge case scenarios.\n\nin order to enable the local arns resolver, three environmental variables will need to be set:\n\nrun_resolver=true\ntrusted_arns_resolver_type=resolver\ntrusted_arns_resolver_url=http://resolver:6000\n\n\n * run_resolver is a boolean representing an on/off switch for the local resolver.\n * trusted_arns_resolver_type sets the method the gateway uses for resolving arns names. use resolver for the local resolver, or gateway for default functionality.\n * trusted_arns_resolver_url is the url a gateway will use to request arns name resolution.',charsets:{}},{title:"AR.IO HTTP API",frontmatter:{},regularPath:"/gateways/ar-io-node/api.html",relativePath:"gateways/ar-io-node/api.md",key:"v-172dfc5a",path:"/gateways/ar-io-node/api.html",headersStr:null,content:"# AR.IO HTTP API\n\nUp to date documentation of endpoints for the AR.IO HTTP API used to access your Gateway can be found here.\n\nYou can also view endpoint documentation and test the endpoints against your own Gateway by going to <your-Gateway>/api-docs",normalizedContent:"# ar.io http api\n\nup to date documentation of endpoints for the ar.io http api used to access your gateway can be found here.\n\nyou can also view endpoint documentation and test the endpoints against your own gateway by going to <your-gateway>/api-docs",charsets:{}},{title:"Observation and Incentives",frontmatter:{next:!1},regularPath:"/gateways/ar-io-node/arnsoip/observer.html",relativePath:"gateways/ar-io-node/arnsoip/observer.md",key:"v-30ab1e90",path:"/gateways/ar-io-node/arnsoip/observer.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:33},{level:2,title:"Observation Protocol",slug:"observation-protocol",normalizedTitle:"observation protocol",charIndex:1637},{level:2,title:"Onchain Reports",slug:"onchain-reports",normalizedTitle:"onchain reports",charIndex:3280},{level:2,title:"Selection of Observers",slug:"selection-of-observers",normalizedTitle:"selection of observers",charIndex:4861},{level:3,title:"Criteria for Selection",slug:"criteria-for-selection",normalizedTitle:"criteria for selection",charIndex:5247},{level:3,title:"Weight Calculation and Normalization",slug:"weight-calculation-and-normalization",normalizedTitle:"weight calculation and normalization",charIndex:6711},{level:3,title:"Random Selection Process",slug:"random-selection-process",normalizedTitle:"random selection process",charIndex:7303},{level:2,title:"Performance Evaluation",slug:"performance-evaluation",normalizedTitle:"performance evaluation",charIndex:7827},{level:2,title:"Reward Distribution",slug:"reward-distribution",normalizedTitle:"reward distribution",charIndex:9101},{level:3,title:"Distribution Based on Performance",slug:"distribution-based-on-performance",normalizedTitle:"distribution based on performance",charIndex:9712},{level:3,title:"Undistributed Rewards",slug:"undistributed-rewards",normalizedTitle:"undistributed rewards",charIndex:10433},{level:2,title:"Handling Inactive Gateways",slug:"handling-inactive-gateways",normalizedTitle:"handling inactive gateways",charIndex:10826},{level:2,title:"Observer Report Details",slug:"observer-report-details",normalizedTitle:"observer report details",charIndex:11196},{level:2,title:"General Information",slug:"general-information",normalizedTitle:"general information",charIndex:3904},{level:2,title:"Overall Gateway Operator Assessment",slug:"overall-gateway-operator-assessment",normalizedTitle:"overall gateway operator assessment",charIndex:11551},{level:2,title:"ArNS Assessments",slug:"arns-assessments",normalizedTitle:"arns assessments",charIndex:11877},{level:2,title:"Example Observation Report",slug:"example-observation-report",normalizedTitle:"example observation report",charIndex:12679},{level:2,title:"Viewing Observation Reports",slug:"viewing-observation-reports",normalizedTitle:"viewing observation reports",charIndex:12775},{level:3,title:"example",slug:"example",normalizedTitle:"example",charIndex:13051}],headersStr:"Overview Observation Protocol Onchain Reports Selection of Observers Criteria for Selection Weight Calculation and Normalization Random Selection Process Performance Evaluation Reward Distribution Distribution Based on Performance Undistributed Rewards Handling Inactive Gateways Observer Report Details General Information Overall Gateway Operator Assessment ArNS Assessments Example Observation Report Viewing Observation Reports example",content:"# Observation and Incentives\n\n\n# Overview\n\nThe Observation and Incentive Protocol is designed to maintain and enhance the operational integrity of gateways on the AR.IO Network. It achieves this through a combination of incentivizing gateways for good performance and tasking those gateways to fulfill the role of \"observers\". The protocol is intentionally simple and adaptable, employing a smart contract-based method for onchain “voting” to assess peer performance while being flexible on how that performance is measured. This setup permits gateway and observer nodes to experiment and evolve best practices for performance evaluation, all while operating within the bounds of the network's immutable smart contract, thus eliminating the need for frequent contract updates (forks).\n\nIn this protocol, observers evaluate their gateway peers' performance to resolve ArNS names. Their aim is to ensure each gateway in the network accurately resolves a subset of names and assigning a pass / fail score based on their findings.\n\nA key component of the protocol is its reward mechanism. This system is predicated on gateway performance and compliance with observation duties. Gateways that excel are tagged as \"Functional Gateways\" and earn rewards, while those that do not meet the criteria, “Deficient Gateways” risk facing penalties – namely, the lack of rewards.\n\nFunds for incentive rewards are derived from the protocol balance, which consists of IO tokens collected from ArNS asset purchases. Every epoch, this balance is utilized to distribute rewards to qualifying gateways and observers based on certain performance metrics.\n\n\n# Observation Protocol\n\nThe Observation protocol is organized around epochs, periods of time that are broken into an observation reporting and tallying phase. The protocol is followed across each epoch, promoting consistent healthy network activity that can form pro-social behaviors and react to malicious circumstances.\n\nObservation and Incentive Protocol\n * To participate in the epoch, a gateway must have already staked IO tokens and joined the network before it starts.\n * Each epoch (approximately 7 block-days), a random pool of active gateways will be selected (prescribed) to perform observation duties.\n * Within the epoch, observers are tasked with evaluating a subset of ArNS names for each gateway in the network.\n * By the end of the epoch’s observation reporting period, the observer must upload its standardized health observation report to Arweave.\n * The observer must also submit an interaction to the AR.IO contract to save its report transaction ID and a summary of all failed gateways for tallying by the incentive protocol.\n * After the observation reporting period and tallying periods have closed, the payout is performed on the next contract state tick.\n   * This payout rewards gateways and observers who have performed their duties.\n   * Gateways that did not meet the performance threshold will not receive rewards.\n   * Observers that did not perform their duties are not rewarded and in addition, are penalized on any gateway rewards received.\n * Community builders and application users can verify and leverage the report and distribution information to make more informed decisions on which gateway to use.\n\n\n# Onchain Reports\n\nThe to-be-evaluated ArNS names include a set of names randomly determined by the protocol, known as “prescribed names”, which are common across all observers within the epoch, as well as a set of “chosen names” picked at the discretion of each individual observer. “Prescribed names” are assigned to act as a common denominator / baseline while “chosen names” allow each observer to evaluate names that may be important to their operation.\n\nEach observer shall assess the performance of the selected ArNS names (across all gateways) and summarize those findings in a report which details the following:\n\n * General Information: Observer's Arweave address, starting and concluding block heights for the epoch.\n\n * Gateway Operator Assessment: The expected and actual Arweave addresses of observed gateways, along with a summary verdict (pass or fail), and accompanying reasons for failure.\n\n * Detailed ArNS Evaluations: For each gateway, it includes the domain name, evaluated ArNS names, the associated block height, transaction IDs, data hashes, a \"pass or fail\" score, reasons for failure (if any), and performance metrics like time to the first byte.\n\nA comprehensive list of report criteria can be found in the Appendix.\n\nObservers shall upload their completed reports (in JSON format) to the Arweave network as an onchain audit trail. In addition, observers shall submit an interaction to the AR.IO smart contact detailing each gateway that they observed to have “failed” their assessments. This is tallied and used to determine the reward distribution.\n\n\n# Selection of Observers\n\nThe observer selection process employs a random-weighted selection method. By combining random selection with weighted criteria like stake, tenure, and past rewards, the process aims to ensure both fairness and acknowledgment of consistent performance. This method allows for a systematic yet randomized approach to selecting gateways for observation tasks.\n\n\n# Criteria for Selection\n\nUp to 50 gateways can be chosen as observers per epoch. If the GAR contains 50 or fewer gateways, then every gateway is designated as an observer for that epoch. If there are greater than 50, then randomized selection shall be utilized.\n\nThe weighted selection criteria will consider the following for each gateway:\n\n * Stake Weight (SW): This factor considers how financially committed a gateway is to the network. It is the ratio of the amount of IO tokens staked by the gateway relative to the network minimum and is expressed as SW = Gateway Stake / Minimum Stake.\n\n * Tenure Weight (TW): This factor considers how long a gateway has been part of the network, with a maximum value capped at 4. It is calculated as TW = Gateway Network Tenure / 6 block-months. This means that the maximum value is achieved after 2 block-years of participation in the network.\n\n * Gateway Reward Ratio Weight (GRRW): This factor is a proxy for a gateway’s performance at resolving ArNS names. The weight represents the ratio of epochs in which a gateway received rewards for correctly resolving names relative to their total time on the network.\n\n * Observer Reward Ratio Weight (ORRW): This factor is a proxy for a gateway’s performance at fulfilling observation duties. The weight reflects the ratio of epochs in which a gateway, as an observer, successfully submitted observation reports relative to their total periods of service as an observer.\n\n\n# Weight Calculation and Normalization\n\nFor each gateway, a composite weight (CW) is computed, combining the Stake Weight, Tenure Weight, Gateway Reward Ratio Weight, and Observer Reward Ratio Weight.\n\nThe formula used is: CW = SW x TW x GRRW x ORRW.\n\nThese weights are then normalized across the network to create a continuous range, allowing for proportional random selection based on the weighted scores. The normalized composite weight (N_CW) for each gateway indicates its likelihood of being chosen as an observer and is calculated by dividing the gateway's CW by the sum of all CWs.\n\n\n# Random Selection Process\n\nThe selection of observers is randomized within the framework of these weights. A set of unique random numbers is generated within the total range of normalized weights. For each random number, the gateway whose normalized weight range encompasses this number is selected. This system ensures that while gateways with higher weights are more likely to be chosen, all gateways maintain a non-zero chance of selection, preserving both fairness and meritocracy in the observer assignment process.\n\n\n# Performance Evaluation\n\nConsider the following classifications:\n\n * Functional or Passed Gateways: are gateways that meet or surpass the network’s performance and quality standards.\n\n * Deficient or Failed Gateways: are gateways that fall short of the network's performance expectations.\n\n * Functional or Submitted Observers: are selected observers who diligently perform their duties and submit observation reports and contract interactions.\n\n * Deficient or Failed Observers: are selected observers who do not fulfill their duty of submitting observation reports and contract interactions.\n\nAt the end of an epoch, the smart contract will assess the results from the observers during a “tallying period” and determine a pass / fail score for each gateway:\n\n * If greater than or equal to 50% of submitted observer contract interactions indicate a PASS score, then that gateway is considered Functional and eligible for gateway rewards.\n\n * Else, if greater than 50% of submitted observer contract interactions indicate a FAIL score, then that gateway is considered Deficient and ineligible for gateway rewards.\n\nThese results will determine how reward distributions are made for that epoch. Rewards shall be distributed after the epoch’s tallying period is complete.\n\n\n# Reward Distribution\n\nEach epoch, a defined portion of the protocol balance (e.g., 0.25%) is earmarked for distribution as rewards. From this allocation, two distinct reward categories are derived:\n\n 1. Base Gateway Reward: This is the portion of the reward allocated to each Functional Gateway within the network and is calculated as:\n    \n    [Epoch Reward Allocation x 95% / Total Gateways in the Network]\n\n 2. Base Observer Reward: Observers, due to their additional responsibilities, have a separate reward calculated as:\n    \n    [Epoch Reward Allocation x 5% / Total Selected Observers for the Epoch]\n\n\n# Distribution Based on Performance\n\nThe reward distribution is contingent on the performance classifications derived from the Performance Evaluation:\n\n * Functional Gateways: Gateways that meet the performance criteria receive the Base Gateway Reward.\n\n * Deficient Gateways: Gateways falling short in performance do not receive any gateway rewards.\n\n * Functional Observers: Observers that fulfilled their duty receive the Base Observer Reward.\n\n * Deficient Observers: Observers failing to meet their responsibilities do not receive observer rewards. Furthermore, if they are also Functional Gateways, their gateway reward is reduced by 25% for that epoch as a consequence for not performing their observation duty.\n\n\n# Undistributed Rewards\n\nIn cases where rewards are not distributed, either due to the inactivity or deficiency of gateways or observers, the allocated tokens shall remain in the protocol balance and carry forward to the next epoch. This mechanism is in place to discourage observers from frivolously marking their peers as offline in hopes of attaining a higher portion of the reward pool.\n\n\n# Handling Inactive Gateways\n\nTo maintain network efficiency and reduce contract state bloat, gateways that are consistently offline, specifically for six (6) consecutive epochs, and thus fail to receive rewards, will be automatically removed from the Gateway Active Registry (GAR) as well as have their staked IO tokens unlocked and returned to the gateway operator.\n\n\n# Observer Report Details\n\nEach observer shall assess the performance of the selected ArNS names (across all AR.IO gateways) and summarize those findings in a report which details the following:\n\n\n# General Information\n\n * The observer's Arweave address.\n * The starting block height of the epoch.\n * The block height at which the report was generated.\n\n\n# Overall Gateway Operator Assessment\n\n * Gateway FQDN.\n * The Arweave address that the observer expects to be the owner / operator of the gateway.\n * The Arweave address that the observed gateway actually reports.\n * A final “pass or fail” rollup determination for each observed gateway.\n * Failure reason (if applicable).\n\n\n# ArNS Assessments\n\n * Observed ArNS name (for all prescribed and chosen names).\n * The block height at which the name was assessed.\n * The expected status code.\n * The resolved status code.\n * The transaction ID that the observer expects the associated name to resolve to.\n * The transaction ID that the gateway actually resolves to.\n * The data hash that the observer expects the associated name to resolve to.\n * The data hash that the gateway actually resolves to.\n * The “pass or fail” score associated with the observed name, at the observer’s discretion.\n * Failure reason (if applicable).\n * Timing / performance information associated with the name resolution such as time to first byte and total duration.\n\nThe above is repeated for the entire name pool and across each gateway in the GAR.\n\n\n# Example Observation Report\n\nhttps://arweave.net/GG1YCFc7wQxKvQ1qD1lTEp2OAMBs4VzrpfdmeeLyjDI\n\n\n# Viewing Observation Reports\n\nYou can easily view an observation report in a human readable format through your terminal with the following command:\n\ncurl -L https://arweave.net/<txId> | zcat | jq .\n\n\nBe sure to replace <txId> with the txId of the report you want to view.\n\n\n# example\n\ncurl -L https://arweave.net/H3zDmoDkpOg0U95rejBEq6gUnww_CEVscTuQVqfSbxk | zcat | jq .\n",normalizedContent:"# observation and incentives\n\n\n# overview\n\nthe observation and incentive protocol is designed to maintain and enhance the operational integrity of gateways on the ar.io network. it achieves this through a combination of incentivizing gateways for good performance and tasking those gateways to fulfill the role of \"observers\". the protocol is intentionally simple and adaptable, employing a smart contract-based method for onchain “voting” to assess peer performance while being flexible on how that performance is measured. this setup permits gateway and observer nodes to experiment and evolve best practices for performance evaluation, all while operating within the bounds of the network's immutable smart contract, thus eliminating the need for frequent contract updates (forks).\n\nin this protocol, observers evaluate their gateway peers' performance to resolve arns names. their aim is to ensure each gateway in the network accurately resolves a subset of names and assigning a pass / fail score based on their findings.\n\na key component of the protocol is its reward mechanism. this system is predicated on gateway performance and compliance with observation duties. gateways that excel are tagged as \"functional gateways\" and earn rewards, while those that do not meet the criteria, “deficient gateways” risk facing penalties – namely, the lack of rewards.\n\nfunds for incentive rewards are derived from the protocol balance, which consists of io tokens collected from arns asset purchases. every epoch, this balance is utilized to distribute rewards to qualifying gateways and observers based on certain performance metrics.\n\n\n# observation protocol\n\nthe observation protocol is organized around epochs, periods of time that are broken into an observation reporting and tallying phase. the protocol is followed across each epoch, promoting consistent healthy network activity that can form pro-social behaviors and react to malicious circumstances.\n\nobservation and incentive protocol\n * to participate in the epoch, a gateway must have already staked io tokens and joined the network before it starts.\n * each epoch (approximately 7 block-days), a random pool of active gateways will be selected (prescribed) to perform observation duties.\n * within the epoch, observers are tasked with evaluating a subset of arns names for each gateway in the network.\n * by the end of the epoch’s observation reporting period, the observer must upload its standardized health observation report to arweave.\n * the observer must also submit an interaction to the ar.io contract to save its report transaction id and a summary of all failed gateways for tallying by the incentive protocol.\n * after the observation reporting period and tallying periods have closed, the payout is performed on the next contract state tick.\n   * this payout rewards gateways and observers who have performed their duties.\n   * gateways that did not meet the performance threshold will not receive rewards.\n   * observers that did not perform their duties are not rewarded and in addition, are penalized on any gateway rewards received.\n * community builders and application users can verify and leverage the report and distribution information to make more informed decisions on which gateway to use.\n\n\n# onchain reports\n\nthe to-be-evaluated arns names include a set of names randomly determined by the protocol, known as “prescribed names”, which are common across all observers within the epoch, as well as a set of “chosen names” picked at the discretion of each individual observer. “prescribed names” are assigned to act as a common denominator / baseline while “chosen names” allow each observer to evaluate names that may be important to their operation.\n\neach observer shall assess the performance of the selected arns names (across all gateways) and summarize those findings in a report which details the following:\n\n * general information: observer's arweave address, starting and concluding block heights for the epoch.\n\n * gateway operator assessment: the expected and actual arweave addresses of observed gateways, along with a summary verdict (pass or fail), and accompanying reasons for failure.\n\n * detailed arns evaluations: for each gateway, it includes the domain name, evaluated arns names, the associated block height, transaction ids, data hashes, a \"pass or fail\" score, reasons for failure (if any), and performance metrics like time to the first byte.\n\na comprehensive list of report criteria can be found in the appendix.\n\nobservers shall upload their completed reports (in json format) to the arweave network as an onchain audit trail. in addition, observers shall submit an interaction to the ar.io smart contact detailing each gateway that they observed to have “failed” their assessments. this is tallied and used to determine the reward distribution.\n\n\n# selection of observers\n\nthe observer selection process employs a random-weighted selection method. by combining random selection with weighted criteria like stake, tenure, and past rewards, the process aims to ensure both fairness and acknowledgment of consistent performance. this method allows for a systematic yet randomized approach to selecting gateways for observation tasks.\n\n\n# criteria for selection\n\nup to 50 gateways can be chosen as observers per epoch. if the gar contains 50 or fewer gateways, then every gateway is designated as an observer for that epoch. if there are greater than 50, then randomized selection shall be utilized.\n\nthe weighted selection criteria will consider the following for each gateway:\n\n * stake weight (sw): this factor considers how financially committed a gateway is to the network. it is the ratio of the amount of io tokens staked by the gateway relative to the network minimum and is expressed as sw = gateway stake / minimum stake.\n\n * tenure weight (tw): this factor considers how long a gateway has been part of the network, with a maximum value capped at 4. it is calculated as tw = gateway network tenure / 6 block-months. this means that the maximum value is achieved after 2 block-years of participation in the network.\n\n * gateway reward ratio weight (grrw): this factor is a proxy for a gateway’s performance at resolving arns names. the weight represents the ratio of epochs in which a gateway received rewards for correctly resolving names relative to their total time on the network.\n\n * observer reward ratio weight (orrw): this factor is a proxy for a gateway’s performance at fulfilling observation duties. the weight reflects the ratio of epochs in which a gateway, as an observer, successfully submitted observation reports relative to their total periods of service as an observer.\n\n\n# weight calculation and normalization\n\nfor each gateway, a composite weight (cw) is computed, combining the stake weight, tenure weight, gateway reward ratio weight, and observer reward ratio weight.\n\nthe formula used is: cw = sw x tw x grrw x orrw.\n\nthese weights are then normalized across the network to create a continuous range, allowing for proportional random selection based on the weighted scores. the normalized composite weight (n_cw) for each gateway indicates its likelihood of being chosen as an observer and is calculated by dividing the gateway's cw by the sum of all cws.\n\n\n# random selection process\n\nthe selection of observers is randomized within the framework of these weights. a set of unique random numbers is generated within the total range of normalized weights. for each random number, the gateway whose normalized weight range encompasses this number is selected. this system ensures that while gateways with higher weights are more likely to be chosen, all gateways maintain a non-zero chance of selection, preserving both fairness and meritocracy in the observer assignment process.\n\n\n# performance evaluation\n\nconsider the following classifications:\n\n * functional or passed gateways: are gateways that meet or surpass the network’s performance and quality standards.\n\n * deficient or failed gateways: are gateways that fall short of the network's performance expectations.\n\n * functional or submitted observers: are selected observers who diligently perform their duties and submit observation reports and contract interactions.\n\n * deficient or failed observers: are selected observers who do not fulfill their duty of submitting observation reports and contract interactions.\n\nat the end of an epoch, the smart contract will assess the results from the observers during a “tallying period” and determine a pass / fail score for each gateway:\n\n * if greater than or equal to 50% of submitted observer contract interactions indicate a pass score, then that gateway is considered functional and eligible for gateway rewards.\n\n * else, if greater than 50% of submitted observer contract interactions indicate a fail score, then that gateway is considered deficient and ineligible for gateway rewards.\n\nthese results will determine how reward distributions are made for that epoch. rewards shall be distributed after the epoch’s tallying period is complete.\n\n\n# reward distribution\n\neach epoch, a defined portion of the protocol balance (e.g., 0.25%) is earmarked for distribution as rewards. from this allocation, two distinct reward categories are derived:\n\n 1. base gateway reward: this is the portion of the reward allocated to each functional gateway within the network and is calculated as:\n    \n    [epoch reward allocation x 95% / total gateways in the network]\n\n 2. base observer reward: observers, due to their additional responsibilities, have a separate reward calculated as:\n    \n    [epoch reward allocation x 5% / total selected observers for the epoch]\n\n\n# distribution based on performance\n\nthe reward distribution is contingent on the performance classifications derived from the performance evaluation:\n\n * functional gateways: gateways that meet the performance criteria receive the base gateway reward.\n\n * deficient gateways: gateways falling short in performance do not receive any gateway rewards.\n\n * functional observers: observers that fulfilled their duty receive the base observer reward.\n\n * deficient observers: observers failing to meet their responsibilities do not receive observer rewards. furthermore, if they are also functional gateways, their gateway reward is reduced by 25% for that epoch as a consequence for not performing their observation duty.\n\n\n# undistributed rewards\n\nin cases where rewards are not distributed, either due to the inactivity or deficiency of gateways or observers, the allocated tokens shall remain in the protocol balance and carry forward to the next epoch. this mechanism is in place to discourage observers from frivolously marking their peers as offline in hopes of attaining a higher portion of the reward pool.\n\n\n# handling inactive gateways\n\nto maintain network efficiency and reduce contract state bloat, gateways that are consistently offline, specifically for six (6) consecutive epochs, and thus fail to receive rewards, will be automatically removed from the gateway active registry (gar) as well as have their staked io tokens unlocked and returned to the gateway operator.\n\n\n# observer report details\n\neach observer shall assess the performance of the selected arns names (across all ar.io gateways) and summarize those findings in a report which details the following:\n\n\n# general information\n\n * the observer's arweave address.\n * the starting block height of the epoch.\n * the block height at which the report was generated.\n\n\n# overall gateway operator assessment\n\n * gateway fqdn.\n * the arweave address that the observer expects to be the owner / operator of the gateway.\n * the arweave address that the observed gateway actually reports.\n * a final “pass or fail” rollup determination for each observed gateway.\n * failure reason (if applicable).\n\n\n# arns assessments\n\n * observed arns name (for all prescribed and chosen names).\n * the block height at which the name was assessed.\n * the expected status code.\n * the resolved status code.\n * the transaction id that the observer expects the associated name to resolve to.\n * the transaction id that the gateway actually resolves to.\n * the data hash that the observer expects the associated name to resolve to.\n * the data hash that the gateway actually resolves to.\n * the “pass or fail” score associated with the observed name, at the observer’s discretion.\n * failure reason (if applicable).\n * timing / performance information associated with the name resolution such as time to first byte and total duration.\n\nthe above is repeated for the entire name pool and across each gateway in the gar.\n\n\n# example observation report\n\nhttps://arweave.net/gg1ycfc7wqxkvq1qd1ltep2oambs4vzrpfdmeelyjdi\n\n\n# viewing observation reports\n\nyou can easily view an observation report in a human readable format through your terminal with the following command:\n\ncurl -l https://arweave.net/<txid> | zcat | jq .\n\n\nbe sure to replace <txid> with the txid of the report you want to view.\n\n\n# example\n\ncurl -l https://arweave.net/h3zdmodkpog0u95rejbeq6gunww_cevsctuqvqfsbxk | zcat | jq .\n",charsets:{cjk:!0}},{title:"Environmental Variables",frontmatter:{},regularPath:"/gateways/ar-io-node/env.html",relativePath:"gateways/ar-io-node/env.md",key:"v-2fa5878c",path:"/gateways/ar-io-node/env.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:30},{level:2,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:16}],headersStr:"Overview Variables",content:'# Environmental Variables\n\n\n# Overview\n\nThe AR.IO Gateway allows configuration customization through environmental variables. These variables dictate the gateway\'s behavior, from block synchronization settings to log formatting. Detailed below is a table enumerating all available environmental variables, their respective types, default values, and a brief description. Note that certain variables, such as SANDBOX_PROTOCOL, rely on others (e.g., ARNS_ROOT_HOST) to function effectively. Ensure proper understanding of these dependencies when configuring.\n\n\n# Variables\n\nENV NAME                                  TYPE                   DEFAULT VALUE                DESCRIPTION\nSTART_HEIGHT                              Number or "Infinity"   0                            Starting block height for node synchronization (0 = start\n                                                                                              from genesis block)\nSTOP_HEIGHT                               Number or "Infinity"   "Infinity"                   Stop block height for node synchronization (Infinity = keep\n                                                                                              syncing until stopped)\nTRUSTED_NODE_URL                          String                 "https://arweave.net"        Arweave node to use for fetching data\nTRUSTED_GATEWAY_URL                       String                 "https://arweave.net"        Arweave node to use for proxying reqeusts\nTRUSTED_ARNS_GATEWAY_URL                  String                 https://NAME.arweave.dev     ArNS gateway\nINSTANCE_ID                               String                 ""                           Adds an "INSTANCE_ID" field to output logs\nLOG_FORMAT                                String                 "simple"                     Sets the format of output logs, accepts "simple" and "json"\nSKIP_CACHE                                Boolean                false                        If true, skips the local cache and always fetches headers\n                                                                                              from the node\nPORT                                      Number                 4000                         AR.IO node exposed port number\nSIMULATED_REQUEST_FAILURE_RATE            Number                 0                            Number from 0 to 1, representing the probability of a\n                                                                                              request failing\nAR_IO_WALLET                              String                 ""                           Arweave wallet address used for staking and rewards\nADMIN_API_KEY                             String                 Generated                    API key used for admin API requests (if not set, it is\n                                                                                              generated and logged into the console)\nBACKFILL_BUNDLE_RECORDS                   Boolean                false                        If true, AR.IO node will start indexing missing bundles\nFILTER_CHANGE_REPROCESS                   Boolean                false                        If true, all indexed bundles will be reprocessed with the\n                                                                                              new filters (you can use this when you change the filters)\nANS104_UNBUNDLE_FILTER                    String                 {"never": true}              Only bundles compliant with this filter will be unbundled\nANS104_INDEX_FILTER                       String                 {"never": true}              Only bundles compliant with this filter will be indexed\nARNS_ROOT_HOST                            String                 undefined                    Domain name for ArNS host\nSANDBOX_PROTOCOL                          String                 undefined                    Protocol setting in process of creating sandbox domains in\n                                                                                              ArNS (ARNS_ROOT_HOST needs to be set for this env to have\n                                                                                              any effect) accepts "http" or "https"\nSTART_WRITERS                             Boolean                true                         If true, start indexing blocks, tx, ANS104 bundles\nRUN_OBSERVER                              Boolean                true                         If true, runs the Observer alongside the gateway to generate\n                                                                                              Network compliance reports\nMIN_RELEASE_NUMBER                        string                 "0"\nAR_IO_NODE_RELEASE                        string                 "0"\nOBSERVER_WALLET                           String                 undefined\n\nCHUNKS_DATA_PATH                          string                 "data/chunks"\nCONTIGUOUS_DATA_PATH                      string                 "data/contiguous"\nHEADERS_DATA_PATH                         string                 "data/headers"\nSQLITE_DATA_PATH                          string                 "data/sqlite"\nTEMP_DATA_PATH                            string                 "data/tmp"\nLMDB_DATA_PATH                            string                 "data/LMDB"\nCHAIN_CACHE_TYPE                          String                 "redis"\n\n\nREDIS_CACHE_URL                           String (URL)           "redis://localhost:6379"\nREDIS_CACHE_TTL_SECONDS                   Number                 28800\n\nENABLE_FS_HEADER_CACHE_CLEANUP            Boolean                false\nNODE_JS_MAX_OLD_SPACE_SIZE                Number                 system default\n\nSUBMIT_CONTRACT_INTERACTIONS              Boolean                true\n\n\nREDIS_MAX_MEMORY                          String                 256mb\nREDIS_EXTRA_FLAGS                         String                 --save "" --appendonly no\nWEBHOOK_TARGET_SERVERS                    String                 undefined\nWEBHOOK_INDEX_FILTER                      String                 {"never": true}\n\nWEBHOOK_BLOCK_FILTER                      String                 {"never": true}\nCONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD   Number                 undefined\n\nRUN_RESOLVER                              Boolean                false\n\nTRUSTED_ARNS_RESOLVER_TYPE                String                 gateway\n\n\nTRUSTED_ARNS_RESOLVER_URL                 String                 https:__NAME__.arweave.dev\n\nENABLE_MEMPOOL_WATCHER                    Boolean                false\n\nMEMPOOL_POLLING_INTERVAL_MS               Number                 30000',normalizedContent:'# environmental variables\n\n\n# overview\n\nthe ar.io gateway allows configuration customization through environmental variables. these variables dictate the gateway\'s behavior, from block synchronization settings to log formatting. detailed below is a table enumerating all available environmental variables, their respective types, default values, and a brief description. note that certain variables, such as sandbox_protocol, rely on others (e.g., arns_root_host) to function effectively. ensure proper understanding of these dependencies when configuring.\n\n\n# variables\n\nenv name                                  type                   default value                description\nstart_height                              number or "infinity"   0                            starting block height for node synchronization (0 = start\n                                                                                              from genesis block)\nstop_height                               number or "infinity"   "infinity"                   stop block height for node synchronization (infinity = keep\n                                                                                              syncing until stopped)\ntrusted_node_url                          string                 "https://arweave.net"        arweave node to use for fetching data\ntrusted_gateway_url                       string                 "https://arweave.net"        arweave node to use for proxying reqeusts\ntrusted_arns_gateway_url                  string                 https://name.arweave.dev     arns gateway\ninstance_id                               string                 ""                           adds an "instance_id" field to output logs\nlog_format                                string                 "simple"                     sets the format of output logs, accepts "simple" and "json"\nskip_cache                                boolean                false                        if true, skips the local cache and always fetches headers\n                                                                                              from the node\nport                                      number                 4000                         ar.io node exposed port number\nsimulated_request_failure_rate            number                 0                            number from 0 to 1, representing the probability of a\n                                                                                              request failing\nar_io_wallet                              string                 ""                           arweave wallet address used for staking and rewards\nadmin_api_key                             string                 generated                    api key used for admin api requests (if not set, it is\n                                                                                              generated and logged into the console)\nbackfill_bundle_records                   boolean                false                        if true, ar.io node will start indexing missing bundles\nfilter_change_reprocess                   boolean                false                        if true, all indexed bundles will be reprocessed with the\n                                                                                              new filters (you can use this when you change the filters)\nans104_unbundle_filter                    string                 {"never": true}              only bundles compliant with this filter will be unbundled\nans104_index_filter                       string                 {"never": true}              only bundles compliant with this filter will be indexed\narns_root_host                            string                 undefined                    domain name for arns host\nsandbox_protocol                          string                 undefined                    protocol setting in process of creating sandbox domains in\n                                                                                              arns (arns_root_host needs to be set for this env to have\n                                                                                              any effect) accepts "http" or "https"\nstart_writers                             boolean                true                         if true, start indexing blocks, tx, ans104 bundles\nrun_observer                              boolean                true                         if true, runs the observer alongside the gateway to generate\n                                                                                              network compliance reports\nmin_release_number                        string                 "0"\nar_io_node_release                        string                 "0"\nobserver_wallet                           string                 undefined\n\nchunks_data_path                          string                 "data/chunks"\ncontiguous_data_path                      string                 "data/contiguous"\nheaders_data_path                         string                 "data/headers"\nsqlite_data_path                          string                 "data/sqlite"\ntemp_data_path                            string                 "data/tmp"\nlmdb_data_path                            string                 "data/lmdb"\nchain_cache_type                          string                 "redis"\n\n\nredis_cache_url                           string (url)           "redis://localhost:6379"\nredis_cache_ttl_seconds                   number                 28800\n\nenable_fs_header_cache_cleanup            boolean                false\nnode_js_max_old_space_size                number                 system default\n\nsubmit_contract_interactions              boolean                true\n\n\nredis_max_memory                          string                 256mb\nredis_extra_flags                         string                 --save "" --appendonly no\nwebhook_target_servers                    string                 undefined\nwebhook_index_filter                      string                 {"never": true}\n\nwebhook_block_filter                      string                 {"never": true}\ncontiguous_data_cache_cleanup_threshold   number                 undefined\n\nrun_resolver                              boolean                false\n\ntrusted_arns_resolver_type                string                 gateway\n\n\ntrusted_arns_resolver_url                 string                 https:__name__.arweave.dev\n\nenable_mempool_watcher                    boolean                false\n\nmempool_polling_interval_ms               number                 30000',charsets:{}},{title:"Farcaster Frames",frontmatter:{permalink:"/experimental/frames"},regularPath:"/gateways/ar-io-node/experimental/frames.html",relativePath:"gateways/ar-io-node/experimental/frames.md",key:"v-b292638c",path:"/experimental/frames/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:23},{level:2,title:"Experimental Gateway Support",slug:"experimental-gateway-support",normalizedTitle:"experimental gateway support",charIndex:598},{level:2,title:"Using Frames",slug:"using-frames",normalizedTitle:"using frames",charIndex:1056},{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:1546}],headersStr:"Overview Experimental Gateway Support Using Frames Example",content:'# Farcaster Frames\n\n\n# Overview\n\nFrames by Farcaster is a standard for posts, or "casts", that allows them to be interactive and easily authenticated self contained apps. Because the standard relies on HTML Meta tags, they can easily be integrated into dApps hosted permanently on Arweave. Until recently, the full capabilities of Frames hosted on Arweave were not accessible through ar.io gateways. This is because a specific type of interaction between the frame and the hosting server, a POST, is needed to facilitate interactivity, and ar.io gateways did not support this interaction type.\n\n\n# Experimental Gateway Support\n\nWith Release 9 of the ar.io gateways, a new experimental endpoint was added that supports the POST requests needed by frames. The /local endpoint on a gateway is used to facilitate experimental new features, as well as features which may be specific to an individual gateway. Operators and users should be fully aware that all endpoints stemming from /local are experimental, and may not always perform exactly as expected.\n\n\n# Using Frames\n\nThe full path for accessing a frame hosted on Arweave is https://<gateway>/local/farcaster/frame/<ID> where <gateway> represents any ar.io gateway using release 9 or higher, and <ID> represents the txId of the frame on Arweave. Since frames require full, absolute url paths, you will need to choose specific, supported gateway when you are embedding the frame in your cast.\n\nBeyond that, simply embed the url for a frame in a cast and farcaster will be able to render it.\n\n\n# Example\n\nArweave community member K, who is a pioneer in permaweb frames, created the below frame to demonstrate how permaweb frames can be interactive when embedded from ar.io gateways.\n\nThe ID for the frame he uploaded to Arweave is JFfYkpW5--I5UOxnJTYHhY9-F8X6WrvDsXQv8jYr0WE. Using this, He made a Farcaster cast with the embedded url https://erl5reuvxh56eokq5rtsknqhqwhx4f6f7jnlxq5roqx7enrl2fqq.ar-io.dev/local/farcaster/frame/JFfYkpW5--I5UOxnJTYHhY9-F8X6WrvDsXQv8jYr0WE/. This full url includes the sandbox prefix generated by an ar.io gateway when serving content.\n\nWhen embedding this full url in a cast, farcaster will render the content into a frame:\n\nView the original post here to experience the interactivity first hand.',normalizedContent:'# farcaster frames\n\n\n# overview\n\nframes by farcaster is a standard for posts, or "casts", that allows them to be interactive and easily authenticated self contained apps. because the standard relies on html meta tags, they can easily be integrated into dapps hosted permanently on arweave. until recently, the full capabilities of frames hosted on arweave were not accessible through ar.io gateways. this is because a specific type of interaction between the frame and the hosting server, a post, is needed to facilitate interactivity, and ar.io gateways did not support this interaction type.\n\n\n# experimental gateway support\n\nwith release 9 of the ar.io gateways, a new experimental endpoint was added that supports the post requests needed by frames. the /local endpoint on a gateway is used to facilitate experimental new features, as well as features which may be specific to an individual gateway. operators and users should be fully aware that all endpoints stemming from /local are experimental, and may not always perform exactly as expected.\n\n\n# using frames\n\nthe full path for accessing a frame hosted on arweave is https://<gateway>/local/farcaster/frame/<id> where <gateway> represents any ar.io gateway using release 9 or higher, and <id> represents the txid of the frame on arweave. since frames require full, absolute url paths, you will need to choose specific, supported gateway when you are embedding the frame in your cast.\n\nbeyond that, simply embed the url for a frame in a cast and farcaster will be able to render it.\n\n\n# example\n\narweave community member k, who is a pioneer in permaweb frames, created the below frame to demonstrate how permaweb frames can be interactive when embedded from ar.io gateways.\n\nthe id for the frame he uploaded to arweave is jffykpw5--i5uoxnjtyhhy9-f8x6wrvdsxqv8jyr0we. using this, he made a farcaster cast with the embedded url https://erl5reuvxh56eokq5rtsknqhqwhx4f6f7jnlxq5roqx7enrl2fqq.ar-io.dev/local/farcaster/frame/jffykpw5--i5uoxnjtyhhy9-f8x6wrvdsxqv8jyr0we/. this full url includes the sandbox prefix generated by an ar.io gateway when serving content.\n\nwhen embedding this full url in a cast, farcaster will render the content into a frame:\n\nview the original post here to experience the interactivity first hand.',charsets:{}},{title:"Linux Installation Instructions",frontmatter:{prev:!1,next:"./testnet",tags:["domain","url","setup","start","help","how to","ubuntu","testnet"]},regularPath:"/gateways/ar-io-node/linux-setup.html",relativePath:"gateways/ar-io-node/linux-setup.md",key:"v-e0d70ecc",path:"/gateways/ar-io-node/linux-setup.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:38},{level:2,title:"System Requirements",slug:"system-requirements",normalizedTitle:"system requirements",charIndex:482},{level:3,title:"Minimum requirements",slug:"minimum-requirements",normalizedTitle:"minimum requirements",charIndex:683},{level:3,title:"Recommended",slug:"recommended",normalizedTitle:"recommended",charIndex:1145},{level:2,title:"Install Packages",slug:"install-packages",normalizedTitle:"install packages",charIndex:1247},{level:3,title:"Required packages",slug:"required-packages",normalizedTitle:"required packages",charIndex:2030},{level:3,title:"Suggested packages",slug:"suggested-packages",normalizedTitle:"suggested packages",charIndex:2716},{level:2,title:"Install the Node",slug:"install-the-node",normalizedTitle:"install the node",charIndex:3694},{level:2,title:"Set up Networking",slug:"set-up-networking",normalizedTitle:"set up networking",charIndex:7694}],headersStr:"Overview System Requirements Minimum requirements Recommended Install Packages Required packages Suggested packages Install the Node Set up Networking",content:"# Linux Installation Instructions\n\n\n# Overview\n\nThe following instructions will guide you through the process of installing the AR.IO node on a Linux machine, specifically Ubuntu 22.04.3 desktop on a home computer. Actual steps may differ slightly on different versions or distributions. This guide will cover how to set up your node, point a domain name to your home network, and create an nginx server for routing traffic to your node. No prior coding experience is required.\n\n\n# System Requirements\n\nPlease note, The AR.IO Node software is still in development and testing, all system requirements are subject to change.\n\nExternal storage devices should be formatted as ext4.\n\n\n# Minimum requirements\n\nThe hardware specifications listed below represent the minimum system requirements at which the AR.IO Node has been tested. While your Node may still operate on systems with lesser specifications, please note that AR.IO cannot guarantee performance or functionality under those conditions. Use below-minimum hardware at your own risk.\n\n * 4 core CPU\n * 4 GB Ram\n * 500 GB storage (SSD recommended)\n * Stable 50 Mbps internet connection\n\n\n# Recommended\n\n * 12 core CPU\n * 32 GB Ram\n * 2 TB SSD storage\n * Stable 1 Gbps internet connection\n\n\n# Install Packages\n\nIf you would like to quickly install all required and suggested packages, you can run the following 2 commands in your terminal, and skip to installing the Node.\n\nsudo apt update -y && sudo apt upgrade -y && sudo apt install -y curl openssh-server docker-compose git certbot nginx sqlite3 build-essential && sudo systemctl enable ssh && curl -sSL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list && sudo apt-get update -y && sudo apt-get install -y yarn && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash && source ~/.bashrc && sudo ufw allow 22 80 443 && sudo ufw enable\n\n\nnvm install 20.11.1 && nvm use 20.11.1\n\n\n\n# Required packages\n\n 1. Update your software:\n    \n    sudo apt update\n    sudo apt upgrade\n    \n\n 2. Enable your firewall and open necessary ports:\n    \n    sudo ufw enable\n    \n    # Optional: If using SSH, allow port 22\n    sudo ufw allow 22\n    \n    # Allow ports 80 and 443 for HTTP and HTTPS\n    sudo ufw allow 80\n    sudo ufw allow 443\n    \n\n 3. Install nginx:\n    \n    sudo apt install nginx -y\n    \n\n 4. Install git:\n    \n    sudo apt install git -y\n    \n\n 5. Install Docker:\n    \n    sudo apt install docker-compose -y\n    \n    \n    * Test Docker installation:\n      \n      sudo docker run hello-world\n      \n\n 6. Install Certbot:\n    \n    sudo apt install certbot -y\n    \n\n\n# Suggested packages\n\nThese packages are not required to run a node in its basic form. However, they will become necessary for more advanced usage or customization.\n\n 7.  Install ssh (optional, for remote access to your Linux machine):\n     \n     sudo apt install openssh-server -y\n     sudo systemctl enable ssh\n     \n\n 8.  Install Yarn:\n     \n     curl -sSL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n     \n     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n     \n     sudo apt-get update -y\n     \n     sudo apt-get install yarn -y\n     \n\n 9.  Install NVM (Node Version Manager):\n     \n     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\n     source ~/.bashrc\n     \n\n 10. Install Node.js:\n     \n     nvm install 20.11.1\n     \n\n 11. Install build tools\n     \n     sudo apt install build-essential\n     \n\n 12. Install SQLite:\n     \n     sudo apt install sqlite3 -y\n     \n\n\n# Install the Node\n\n * Navigate to the desired installation location:\n   \n   * NOTE: Your database of Arweave Transaction Headers will be created in the project directory, not Docker. So, if you are using an external hard drive to turn an old machine into a node, install the node directly to that external drive.\n\n * Clone the ar-io-node repository and navigate into it:\n   \n   git clone -b main https://github.com/ar-io/ar-io-node\n   cd ar-io-node\n   \n\n * Create an environmental variables file:\n   \n   nano .env\n   \n   \n   Paste the following content into the new file, replacing <your-domain> with the domain address you are using to access the node, and <your-public-wallet-address> with the public address of your Arweave wallet, save, and exit:\n   \n   \n   GRAPHQL_HOST=arweave.net\n   GRAPHQL_PORT=443\n   START_HEIGHT=0\n   RUN_OBSERVER=true\n   ARNS_ROOT_HOST=<your-domain>\n   AR_IO_WALLET=<your-public-wallet-address>\n   OBSERVER_WALLET=<hot-wallet-public-address>\n   \n   \n   * The GRAPHQL values set the proxy for GQL queries to arweave.net, You may use any available gateway that supports GQL queries. If omitted, your node can support GQL queries on locally indexed transactions, but only L1 transactions are indexed by default.\n   * START_HEIGHT is an optional line. It sets the block number where your node will start downloading and indexing transactions headers. Omitting this line will begin indexing at block 0.\n   * RUN_OBSERVER turns on the Observer to generate Network Compliance Reports. This is required for full participation in the AR.IO Network. Set to false to run your gateway without Observer.\n   * ARNS_ROOT_HOST sets the starting point for resolving ARNS names, which are accessed as a subdomain of a gateway. It should be set to the url you are pointing to your node, excluding any protocol prefix. For example, use node-ar.io and not https://node-ar.io. If you are using a subdomain to access your node and do not set this value, the node will not understand incoming requests.\n   * AR_IO_WALLET is optional, and sets the wallet you want associated with your Gateway. An associated wallet is required to join the AR.IO network.\n   * OBSERVER_WALLET is the public address of the wallet used to sign Observer transactions. This is required for Observer to run, but may be omitted if you are running a gateway outside of the AR.IO network and do not plan to run Observer. You will need to supply the keyfile to this wallet in the next step.\n   \n   Advanced configuration options can be found at docs.ar.io\n\n * Supply Your Observer Wallet Keyfile:\n   \n   If you are running Observer, you need to provide a wallet keyfile in order to sign report upload transactions. The keyfile must be saved in the wallets directory in the root of the repository. Name the file <Observer-Wallet-Address>.json, replacing \"<Observer-Wallet-Address>\" with the public address of the wallet. This should match your OBSERVER_WALLET environmental variable.\n   \n   Learn more about creating Arweave wallets and obtaining keyfiles here\n\n * Start the Docker container:\n   \n   sudo docker-compose up -d\n   \n   \n   * Explanation of flags:\n     * up: Start the Docker containers.\n     * -d: Run the containers as background processes (detached mode).\n   \n   NOTE: Effective with Release #3, it is no longer required to include the --build flag when starting your gateway. Docker will automatically build using the image specified in the docker-commpose.yaml file.\n   \n   To shut down your gateway, run the command:\n   \n   sudo docker-compose down\n   \n\nTo ensure your node is running correctly, check the logs for errors:\n\nsudo docker-compose logs -f --tail=0\n\n\n * Explanation of flags:\n   * -f: Follow the logs in real time.\n   * --tail=0: Ignore all logs from before running the command.\n\nNOTE: Previous versions of these instructions advised checking a gateway's ability to fetch content using localhost. Subsequent security updates prevent this without first disabling ARNS_ROOT_HOST in your .env.\n\n\n# Set up Networking\n\nThe following guide assumes you are running your node on a local home computer.\n\n * Register a Domain Name: Choose a domain registrar (e.g., Namecheap) to register a domain name.\n\n * Point the Domain at Your Home Internet:\n   \n   * Obtain your public IP address by visiting https://www.whatsmyip.org/ or running:\n     \n     curl ifconfig.me\n     \n   \n   * Create an A record with your registrar for your domain and wildcard subdomains, using your public IP address. For example, if your domain is \"ar.io,\" create a record for \"ar.io\" and \"*.ar.io.\"\n\n * Set up Port Forwarding:\n   \n   * Obtain the local IP address of the machine where the node is installed by running:\n     \n     ip addr show | grep -w inet | awk '{print $2}' | awk -F'/' '{print $1}'\n     \n     \n     * If there are multiple lines of output, choose the one starting with 192 (usually).\n   * Enter your router's IP address in the address bar of a browser (e.g., 192.168.0.1).\n     * If you're unsure of your router's IP address, consult your router's documentation or contact your Internet Service Provider (ISP).\n   * Navigate to the port forwarding settings in your router configuration.\n     * The exact steps may vary depending on your router model. Consult your router's documentation or support for detailed steps.\n   * Set up port forwarding rules to forward incoming traffic on ports 80 (HTTP) and 443 (HTTPS) to the same ports on the machine running your node. You may also forward port 22 if you want to enable SSH access to your node from outside your home network.\n\n * Create SSL (HTTPS) Certificates for Your Domain:\n   \n   sudo certbot certonly --manual --preferred-challenges dns --email <your-email-address> -d <your-domain>.com -d '*.<your-domain>.com'\n   \n   \n   Follow the instructions to create the required TXT records for your domain in your chosen registrar. Use a DNS checker to verify the propagation of each record. This can take some time.\n   \n   IMPORTANT: Wild card subdomain (*.<your-domain>.com) cannot auto renew without obtaining an API key from your domain registrar. Not all registrars offer this. Certbot certificates expire every 90 days. Be sure to consult with your chosen registrar to see if they offer an API for this purpose, or run the above command again to renew your certificates. You will receive an email warning at the address you provided to remind you when it is time to renew.\n\n * Configure nginx: nginx is a free and open-source web server and reverse proxy server. It will handle incoming traffic, provide SSL certificates, and redirect the traffic to your node.\n   \n   * Open the default configuration file:\n     \n     sudo nano /etc/nginx/sites-available/default\n     \n   \n   * Replace the file's contents with the following configuration (replace \"<your-domain>\" when necessary):\n     \n     # Force redirects from HTTP to HTTPS\n     server {\n         listen 80;\n         listen [::]:80;\n         server_name <your-domain>.com *.<your-domain>.com;\n     \n         location / {\n             return 301 https://$host$request_uri;\n         }\n     }\n     \n     # Forward traffic to your node and provide SSL certificates\n     server {\n         listen 443 ssl;\n         listen [::]:443 ssl;\n         server_name <your-domain>.com *.<your-domain>.com;\n     \n         ssl_certificate /etc/letsencrypt/live/<your-domain>.com/fullchain.pem;\n         ssl_certificate_key /etc/letsencrypt/live/<your-domain>.com/privkey.pem;\n     \n         location / {\n             proxy_pass http://localhost:3000;\n             proxy_set_header Host $host;\n             proxy_set_header X-Real-IP $remote_addr;\n             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n             proxy_http_version 1.1;\n         }\n     }\n     \n   \n   * Save and exit nano.\n   \n   * Test the configuration:\n     \n     sudo nginx -t\n     \n   \n   * If there are no errors, restart nginx:\n     \n     sudo service nginx restart\n     \n\nYour node should now be running and connected to the internet. Test it by entering https://<your-domain>/3lyxgbgEvqNSvJrTX2J7CfRychUD5KClFhhVLyTPNCQ in your browser.\n\nNote: If you encounter any issues during the installation process, please seek assistance from the AR.IO community.",normalizedContent:"# linux installation instructions\n\n\n# overview\n\nthe following instructions will guide you through the process of installing the ar.io node on a linux machine, specifically ubuntu 22.04.3 desktop on a home computer. actual steps may differ slightly on different versions or distributions. this guide will cover how to set up your node, point a domain name to your home network, and create an nginx server for routing traffic to your node. no prior coding experience is required.\n\n\n# system requirements\n\nplease note, the ar.io node software is still in development and testing, all system requirements are subject to change.\n\nexternal storage devices should be formatted as ext4.\n\n\n# minimum requirements\n\nthe hardware specifications listed below represent the minimum system requirements at which the ar.io node has been tested. while your node may still operate on systems with lesser specifications, please note that ar.io cannot guarantee performance or functionality under those conditions. use below-minimum hardware at your own risk.\n\n * 4 core cpu\n * 4 gb ram\n * 500 gb storage (ssd recommended)\n * stable 50 mbps internet connection\n\n\n# recommended\n\n * 12 core cpu\n * 32 gb ram\n * 2 tb ssd storage\n * stable 1 gbps internet connection\n\n\n# install packages\n\nif you would like to quickly install all required and suggested packages, you can run the following 2 commands in your terminal, and skip to installing the node.\n\nsudo apt update -y && sudo apt upgrade -y && sudo apt install -y curl openssh-server docker-compose git certbot nginx sqlite3 build-essential && sudo systemctl enable ssh && curl -ssl https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list && sudo apt-get update -y && sudo apt-get install -y yarn && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash && source ~/.bashrc && sudo ufw allow 22 80 443 && sudo ufw enable\n\n\nnvm install 20.11.1 && nvm use 20.11.1\n\n\n\n# required packages\n\n 1. update your software:\n    \n    sudo apt update\n    sudo apt upgrade\n    \n\n 2. enable your firewall and open necessary ports:\n    \n    sudo ufw enable\n    \n    # optional: if using ssh, allow port 22\n    sudo ufw allow 22\n    \n    # allow ports 80 and 443 for http and https\n    sudo ufw allow 80\n    sudo ufw allow 443\n    \n\n 3. install nginx:\n    \n    sudo apt install nginx -y\n    \n\n 4. install git:\n    \n    sudo apt install git -y\n    \n\n 5. install docker:\n    \n    sudo apt install docker-compose -y\n    \n    \n    * test docker installation:\n      \n      sudo docker run hello-world\n      \n\n 6. install certbot:\n    \n    sudo apt install certbot -y\n    \n\n\n# suggested packages\n\nthese packages are not required to run a node in its basic form. however, they will become necessary for more advanced usage or customization.\n\n 7.  install ssh (optional, for remote access to your linux machine):\n     \n     sudo apt install openssh-server -y\n     sudo systemctl enable ssh\n     \n\n 8.  install yarn:\n     \n     curl -ssl https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n     \n     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n     \n     sudo apt-get update -y\n     \n     sudo apt-get install yarn -y\n     \n\n 9.  install nvm (node version manager):\n     \n     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\n     source ~/.bashrc\n     \n\n 10. install node.js:\n     \n     nvm install 20.11.1\n     \n\n 11. install build tools\n     \n     sudo apt install build-essential\n     \n\n 12. install sqlite:\n     \n     sudo apt install sqlite3 -y\n     \n\n\n# install the node\n\n * navigate to the desired installation location:\n   \n   * note: your database of arweave transaction headers will be created in the project directory, not docker. so, if you are using an external hard drive to turn an old machine into a node, install the node directly to that external drive.\n\n * clone the ar-io-node repository and navigate into it:\n   \n   git clone -b main https://github.com/ar-io/ar-io-node\n   cd ar-io-node\n   \n\n * create an environmental variables file:\n   \n   nano .env\n   \n   \n   paste the following content into the new file, replacing <your-domain> with the domain address you are using to access the node, and <your-public-wallet-address> with the public address of your arweave wallet, save, and exit:\n   \n   \n   graphql_host=arweave.net\n   graphql_port=443\n   start_height=0\n   run_observer=true\n   arns_root_host=<your-domain>\n   ar_io_wallet=<your-public-wallet-address>\n   observer_wallet=<hot-wallet-public-address>\n   \n   \n   * the graphql values set the proxy for gql queries to arweave.net, you may use any available gateway that supports gql queries. if omitted, your node can support gql queries on locally indexed transactions, but only l1 transactions are indexed by default.\n   * start_height is an optional line. it sets the block number where your node will start downloading and indexing transactions headers. omitting this line will begin indexing at block 0.\n   * run_observer turns on the observer to generate network compliance reports. this is required for full participation in the ar.io network. set to false to run your gateway without observer.\n   * arns_root_host sets the starting point for resolving arns names, which are accessed as a subdomain of a gateway. it should be set to the url you are pointing to your node, excluding any protocol prefix. for example, use node-ar.io and not https://node-ar.io. if you are using a subdomain to access your node and do not set this value, the node will not understand incoming requests.\n   * ar_io_wallet is optional, and sets the wallet you want associated with your gateway. an associated wallet is required to join the ar.io network.\n   * observer_wallet is the public address of the wallet used to sign observer transactions. this is required for observer to run, but may be omitted if you are running a gateway outside of the ar.io network and do not plan to run observer. you will need to supply the keyfile to this wallet in the next step.\n   \n   advanced configuration options can be found at docs.ar.io\n\n * supply your observer wallet keyfile:\n   \n   if you are running observer, you need to provide a wallet keyfile in order to sign report upload transactions. the keyfile must be saved in the wallets directory in the root of the repository. name the file <observer-wallet-address>.json, replacing \"<observer-wallet-address>\" with the public address of the wallet. this should match your observer_wallet environmental variable.\n   \n   learn more about creating arweave wallets and obtaining keyfiles here\n\n * start the docker container:\n   \n   sudo docker-compose up -d\n   \n   \n   * explanation of flags:\n     * up: start the docker containers.\n     * -d: run the containers as background processes (detached mode).\n   \n   note: effective with release #3, it is no longer required to include the --build flag when starting your gateway. docker will automatically build using the image specified in the docker-commpose.yaml file.\n   \n   to shut down your gateway, run the command:\n   \n   sudo docker-compose down\n   \n\nto ensure your node is running correctly, check the logs for errors:\n\nsudo docker-compose logs -f --tail=0\n\n\n * explanation of flags:\n   * -f: follow the logs in real time.\n   * --tail=0: ignore all logs from before running the command.\n\nnote: previous versions of these instructions advised checking a gateway's ability to fetch content using localhost. subsequent security updates prevent this without first disabling arns_root_host in your .env.\n\n\n# set up networking\n\nthe following guide assumes you are running your node on a local home computer.\n\n * register a domain name: choose a domain registrar (e.g., namecheap) to register a domain name.\n\n * point the domain at your home internet:\n   \n   * obtain your public ip address by visiting https://www.whatsmyip.org/ or running:\n     \n     curl ifconfig.me\n     \n   \n   * create an a record with your registrar for your domain and wildcard subdomains, using your public ip address. for example, if your domain is \"ar.io,\" create a record for \"ar.io\" and \"*.ar.io.\"\n\n * set up port forwarding:\n   \n   * obtain the local ip address of the machine where the node is installed by running:\n     \n     ip addr show | grep -w inet | awk '{print $2}' | awk -f'/' '{print $1}'\n     \n     \n     * if there are multiple lines of output, choose the one starting with 192 (usually).\n   * enter your router's ip address in the address bar of a browser (e.g., 192.168.0.1).\n     * if you're unsure of your router's ip address, consult your router's documentation or contact your internet service provider (isp).\n   * navigate to the port forwarding settings in your router configuration.\n     * the exact steps may vary depending on your router model. consult your router's documentation or support for detailed steps.\n   * set up port forwarding rules to forward incoming traffic on ports 80 (http) and 443 (https) to the same ports on the machine running your node. you may also forward port 22 if you want to enable ssh access to your node from outside your home network.\n\n * create ssl (https) certificates for your domain:\n   \n   sudo certbot certonly --manual --preferred-challenges dns --email <your-email-address> -d <your-domain>.com -d '*.<your-domain>.com'\n   \n   \n   follow the instructions to create the required txt records for your domain in your chosen registrar. use a dns checker to verify the propagation of each record. this can take some time.\n   \n   important: wild card subdomain (*.<your-domain>.com) cannot auto renew without obtaining an api key from your domain registrar. not all registrars offer this. certbot certificates expire every 90 days. be sure to consult with your chosen registrar to see if they offer an api for this purpose, or run the above command again to renew your certificates. you will receive an email warning at the address you provided to remind you when it is time to renew.\n\n * configure nginx: nginx is a free and open-source web server and reverse proxy server. it will handle incoming traffic, provide ssl certificates, and redirect the traffic to your node.\n   \n   * open the default configuration file:\n     \n     sudo nano /etc/nginx/sites-available/default\n     \n   \n   * replace the file's contents with the following configuration (replace \"<your-domain>\" when necessary):\n     \n     # force redirects from http to https\n     server {\n         listen 80;\n         listen [::]:80;\n         server_name <your-domain>.com *.<your-domain>.com;\n     \n         location / {\n             return 301 https://$host$request_uri;\n         }\n     }\n     \n     # forward traffic to your node and provide ssl certificates\n     server {\n         listen 443 ssl;\n         listen [::]:443 ssl;\n         server_name <your-domain>.com *.<your-domain>.com;\n     \n         ssl_certificate /etc/letsencrypt/live/<your-domain>.com/fullchain.pem;\n         ssl_certificate_key /etc/letsencrypt/live/<your-domain>.com/privkey.pem;\n     \n         location / {\n             proxy_pass http://localhost:3000;\n             proxy_set_header host $host;\n             proxy_set_header x-real-ip $remote_addr;\n             proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n             proxy_http_version 1.1;\n         }\n     }\n     \n   \n   * save and exit nano.\n   \n   * test the configuration:\n     \n     sudo nginx -t\n     \n   \n   * if there are no errors, restart nginx:\n     \n     sudo service nginx restart\n     \n\nyour node should now be running and connected to the internet. test it by entering https://<your-domain>/3lyxgbgevqnsvjrtx2j7cfrychud5kclfhhvlytpncq in your browser.\n\nnote: if you encounter any issues during the installation process, please seek assistance from the ar.io community.",charsets:{cjk:!0}},{title:"Troubleshooting Observer",frontmatter:{permalink:"/troubleshooting-observer",next:!1},regularPath:"/gateways/ar-io-node/observer-troubleshooting.html",relativePath:"gateways/ar-io-node/observer-troubleshooting.md",key:"v-6e1e3488",path:"/troubleshooting-observer/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:31},{level:2,title:"Observer not running and/or unable to connect",slug:"observer-not-running-and-or-unable-to-connect",normalizedTitle:"observer not running and/or unable to connect",charIndex:425},{level:3,title:"",slug:"",normalizedTitle:"",charIndex:0},{level:2,title:"Observer wallet has no AR",slug:"observer-wallet-has-no-ar",normalizedTitle:"observer wallet has no ar",charIndex:2360},{level:3,title:"",slug:"-2",normalizedTitle:"",charIndex:0},{level:2,title:"Observer wallet ... does not match the 'observerWallet' set on the gateway ...",slug:"observer-wallet-does-not-match-the-observerwallet-set-on-the-gateway",normalizedTitle:"observer wallet ... does not match the 'observerwallet' set on the gateway ...",charIndex:2751},{level:3,title:"",slug:"-3",normalizedTitle:"",charIndex:0},{level:2,title:"Uncertain - confirm your OBSERVER_WALLET is set in the .env file and corresponding wallet is located in wallets/.json...",slug:"uncertain-confirm-your-observer-wallet-is-set-in-the-env-file-and-corresponding-wallet-is-located-in-wallets-address-json",normalizedTitle:"uncertain - confirm your observer_wallet is set in the .env file and corresponding wallet is located in wallets/.json...",charIndex:null},{level:3,title:"",slug:"-4",normalizedTitle:"",charIndex:0}],headersStr:"Overview Observer not running and/or unable to connect  Observer wallet has no AR  Observer wallet ... does not match the 'observerWallet' set on the gateway ...  Uncertain - confirm your OBSERVER_WALLET is set in the .env file and corresponding wallet is located in wallets/.json... ",content:'# Troubleshooting Observer\n\n\n# Overview\n\nar.io observer epoch distribution reports include a list of failed observers for the epoch, along with an accounting of the errors which caused the observer to fail. When possible, the error messages will give you a starting point to being the troubleshooting process. Below is a list of possible error messages, along with more detailed information on how to address the issues.\n\n\n# Observer not running and/or unable to connect\n\n\n#\n\nYour observer was not able to connect with the contract at all. The most likely causes for this are internet connection problems, or your observer not running.\n\nVerify your observer is running\n\nsudo docker ps\n\nYour output should look something like this:\n\n    CONTAINER ID   IMAGE                                                                   COMMAND                  CREATED       STATUS                PORTS                                                                                             NAMES\n    264637d3e24d   ghcr.io/ar-io/ar-io-envoy:01952702b78be1e464b9d192e77b38a119bdc4ee      "/docker-entrypoint.…"   2 days ago    Up 2 days             0.0.0.0:3000->3000/tcp, :::3000->3000/tcp, 0.0.0.0:9901->9901/tcp, :::9901->9901/tcp, 10000/tcp   ar-io-node_envoy_1\n    f42a4fbed8c5   ghcr.io/ar-io/ar-io-core:484bd31abb78709e09395f139ca57792bc6c3eb0       "/bin/sh docker-entr…"   2 days ago    Up 2 days (healthy)   0.0.0.0:4000->4000/tcp, :::4000->4000/tcp                                                         ar-io-node_core_1\n    dd2e0b64b0b4   redis:7                                                                 "docker-entrypoint.s…"   10 days ago   Up 2 days             0.0.0.0:6379->6379/tcp, :::6379->6379/tcp                                                         ar-io-node_redis_1\n    ed98aba1c4f6   ghcr.io/ar-io/ar-io-observer:6449bcb6dda778fef68a94bd29343190524439db   "/nodejs/bin/node ./…"   10 days ago   Up 2 days (healthy)   0.0.0.0:5000->5000/tcp, :::5000->5000/tcp                                                         ar-io-node_observer_1\n\n\nIf the line for observer does not say "up", then your observer is not running. You should restart your gateway, and then watch your observer logs to get a better idea of why your observer stopped:\n\nsudo docker-compose down\n\nsudo docker-compose up -d\n\nsudo docker-compose logs -f observer\n\n\n# Observer wallet has no AR\n\n\n#\n\nYour Observer Wallet does not have any AR tokens.\n\nYour observer wallet needs to be able to submit reports to the Arweave blockchain. To do this, it needs to have a small amount of AR tokens in order to pay for the submission. ar.io recommends depositing 1 AR token into your observer wallet to ensure that you remain funded throughout the entire testnet.\n\n\n# Observer wallet ... does not match the \'observerWallet\' set on the gateway ...\n\n\n#\n\nThe observer wallet set locally on your gateway does not match the observer wallet for your gateway in the ar.io network.\n\nCheck to make sure that you have OBSERVER_WALLET set in your .env file, and that the keyfile for your observer wallet is properly provided in the wallets directory in your gateway.\n\nYou will need to restart your gateway if you make any changes to the .env file or your observer wallet keyfile.\n\nThen check to make sure that the value for observerWallet on your gateway in the testnet contract matches that.\n\nThis video shows exactly what should be done to correct it if it does not.\n\n\n# Uncertain - confirm your OBSERVER_WALLET is set in the .env file and corresponding wallet is located in wallets/< address >.json...\n\n\n#\n\nThe cause for the error could not be reliably determined.\n\n"Uncertain" is the default value returned when evaluating a failed observer. It means that none of the above error messages perfectly matched the problems with your gateway.\n\nYou should first ensure that your observer wallet is set correctly locally, and then check your observer logs for any additional error messages.\n\nsudo docker-compose logs -f --tail=50 observer',normalizedContent:'# troubleshooting observer\n\n\n# overview\n\nar.io observer epoch distribution reports include a list of failed observers for the epoch, along with an accounting of the errors which caused the observer to fail. when possible, the error messages will give you a starting point to being the troubleshooting process. below is a list of possible error messages, along with more detailed information on how to address the issues.\n\n\n# observer not running and/or unable to connect\n\n\n#\n\nyour observer was not able to connect with the contract at all. the most likely causes for this are internet connection problems, or your observer not running.\n\nverify your observer is running\n\nsudo docker ps\n\nyour output should look something like this:\n\n    container id   image                                                                   command                  created       status                ports                                                                                             names\n    264637d3e24d   ghcr.io/ar-io/ar-io-envoy:01952702b78be1e464b9d192e77b38a119bdc4ee      "/docker-entrypoint.…"   2 days ago    up 2 days             0.0.0.0:3000->3000/tcp, :::3000->3000/tcp, 0.0.0.0:9901->9901/tcp, :::9901->9901/tcp, 10000/tcp   ar-io-node_envoy_1\n    f42a4fbed8c5   ghcr.io/ar-io/ar-io-core:484bd31abb78709e09395f139ca57792bc6c3eb0       "/bin/sh docker-entr…"   2 days ago    up 2 days (healthy)   0.0.0.0:4000->4000/tcp, :::4000->4000/tcp                                                         ar-io-node_core_1\n    dd2e0b64b0b4   redis:7                                                                 "docker-entrypoint.s…"   10 days ago   up 2 days             0.0.0.0:6379->6379/tcp, :::6379->6379/tcp                                                         ar-io-node_redis_1\n    ed98aba1c4f6   ghcr.io/ar-io/ar-io-observer:6449bcb6dda778fef68a94bd29343190524439db   "/nodejs/bin/node ./…"   10 days ago   up 2 days (healthy)   0.0.0.0:5000->5000/tcp, :::5000->5000/tcp                                                         ar-io-node_observer_1\n\n\nif the line for observer does not say "up", then your observer is not running. you should restart your gateway, and then watch your observer logs to get a better idea of why your observer stopped:\n\nsudo docker-compose down\n\nsudo docker-compose up -d\n\nsudo docker-compose logs -f observer\n\n\n# observer wallet has no ar\n\n\n#\n\nyour observer wallet does not have any ar tokens.\n\nyour observer wallet needs to be able to submit reports to the arweave blockchain. to do this, it needs to have a small amount of ar tokens in order to pay for the submission. ar.io recommends depositing 1 ar token into your observer wallet to ensure that you remain funded throughout the entire testnet.\n\n\n# observer wallet ... does not match the \'observerwallet\' set on the gateway ...\n\n\n#\n\nthe observer wallet set locally on your gateway does not match the observer wallet for your gateway in the ar.io network.\n\ncheck to make sure that you have observer_wallet set in your .env file, and that the keyfile for your observer wallet is properly provided in the wallets directory in your gateway.\n\nyou will need to restart your gateway if you make any changes to the .env file or your observer wallet keyfile.\n\nthen check to make sure that the value for observerwallet on your gateway in the testnet contract matches that.\n\nthis video shows exactly what should be done to correct it if it does not.\n\n\n# uncertain - confirm your observer_wallet is set in the .env file and corresponding wallet is located in wallets/< address >.json...\n\n\n#\n\nthe cause for the error could not be reliably determined.\n\n"uncertain" is the default value returned when evaluating a failed observer. it means that none of the above error messages perfectly matched the problems with your gateway.\n\nyou should first ensure that your observer wallet is set correctly locally, and then check your observer logs for any additional error messages.\n\nsudo docker-compose logs -f --tail=50 observer',charsets:{}},{title:"Delegated Staking Settings",frontmatter:{permalink:"/gateways/delegated-staking"},regularPath:"/gateways/ar-io-node/delegated-staking.html",relativePath:"gateways/ar-io-node/delegated-staking.md",key:"v-3f2c877a",path:"/gateways/delegated-staking/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:33}],headersStr:"Overview",content:"# Delegated Staking Settings\n\n\n# Overview\n\nGateway operators can choose to allow other people to stake tokens on their gateway. This is called “delegated staking”, and it increases the number of tokens staked for a given gateway. The additionally staked tokens result in a greater stakeWeight for the gateway - increasing it’s likelihood chosen as an observer and potentially receive additional rewards for a given epoch (assuming that the gateway’s observer is working properly). To incentivize this, you can set a portion of your gateway and observer rewards to be given to the people who stake on your gateway.\n\n--\x3e",normalizedContent:"# delegated staking settings\n\n\n# overview\n\ngateway operators can choose to allow other people to stake tokens on their gateway. this is called “delegated staking”, and it increases the number of tokens staked for a given gateway. the additionally staked tokens result in a greater stakeweight for the gateway - increasing it’s likelihood chosen as an observer and potentially receive additional rewards for a given epoch (assuming that the gateway’s observer is working properly). to incentivize this, you can set a portion of your gateway and observer rewards to be given to the people who stake on your gateway.\n\n--\x3e",charsets:{}},{title:"Upgrading to the Observer Module",frontmatter:{},regularPath:"/gateways/ar-io-node/observer-upgrade.html",relativePath:"gateways/ar-io-node/observer-upgrade.md",key:"v-2151a890",path:"/gateways/ar-io-node/observer-upgrade.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:39},{level:2,title:"Supply a Keyfile",slug:"supply-a-keyfile",normalizedTitle:"supply a keyfile",charIndex:691},{level:2,title:"Environmental variables",slug:"environmental-variables",normalizedTitle:"environmental variables",charIndex:1695}],headersStr:"Overview Supply a Keyfile Environmental variables",content:'# Upgrading to the Observer Module\n\n\n# Overview\n\nFrom time to time, significant updates to the AR.IO Gateway node software might necessitate additional configuration steps to harness the entirety of the new features. The recent addition of the "Observer" module, designed to monitor the health of the AR.IO network, is a case in point. To integrate this module successfully, users will need to undertake two supplementary steps beyond the conventional upgrade routine:\n\n 1. Supply the keyfile for an active Arweave wallet.\n\n 2. Configure specific environmental variables.\n\nBoth of these steps can be completed during the normal upgrade process BEFORE you rebuild your gateway (step #5).\n\n\n# Supply a Keyfile\n\nA primary function of the Observer Module is to upload reports on the health of the AR.IO network to the Arweave blockweave. In order to do this, transactions must be signed and paid for. This requires the keyfile for an Arweave wallet be provided to your gateway.\n\nYou may use the same wallet linked to your gateway in the AR.IO network (AR_IO_WALLET in your .env file) but in most situations it is safer to use a separate fresh wallet, or a "hot" wallet you use for safely interacting with Dapps, especially if you host your gateway on a remote server where other people may have access. Find more information about creating fresh wallets here.\n\nRemember, your keyfile contains the public keys to your Arweave wallet, always be extremely careful not to expose it to unsafe conditions.\n\nYour keyfile must be saved in the new wallets directory in the root of the gateway repository, with the name <public address>.json\n\nFor example: QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ.json\n\n\n# Environmental variables\n\nThere are two new environmental variables that should be set when upgrading to Observer. Both of these should be added to the .env file prior to rebuilding your gateway:\n\n * RUN_OBSERVER (optional) - This is the on/off switch for Observer. The default value is true, so omitting this from your environmental variables will not prevent Observer from running. Set the value to false if you want your gateway to run without Observer.\n   * RUN_OBSERVER=true\n * OBSERVER_WALLET - This should be set to the public address of the wallet you are using to sign Observer transactions.\n   * OBSERVER_WALLET=QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ\n\nNote: If you encounter any issues during the upgrade process, please seek assistance from the AR.IO community.',normalizedContent:'# upgrading to the observer module\n\n\n# overview\n\nfrom time to time, significant updates to the ar.io gateway node software might necessitate additional configuration steps to harness the entirety of the new features. the recent addition of the "observer" module, designed to monitor the health of the ar.io network, is a case in point. to integrate this module successfully, users will need to undertake two supplementary steps beyond the conventional upgrade routine:\n\n 1. supply the keyfile for an active arweave wallet.\n\n 2. configure specific environmental variables.\n\nboth of these steps can be completed during the normal upgrade process before you rebuild your gateway (step #5).\n\n\n# supply a keyfile\n\na primary function of the observer module is to upload reports on the health of the ar.io network to the arweave blockweave. in order to do this, transactions must be signed and paid for. this requires the keyfile for an arweave wallet be provided to your gateway.\n\nyou may use the same wallet linked to your gateway in the ar.io network (ar_io_wallet in your .env file) but in most situations it is safer to use a separate fresh wallet, or a "hot" wallet you use for safely interacting with dapps, especially if you host your gateway on a remote server where other people may have access. find more information about creating fresh wallets here.\n\nremember, your keyfile contains the public keys to your arweave wallet, always be extremely careful not to expose it to unsafe conditions.\n\nyour keyfile must be saved in the new wallets directory in the root of the gateway repository, with the name <public address>.json\n\nfor example: qgwqtjdllgm2ehfwiipzmaofld50cnguzzipedodrgq.json\n\n\n# environmental variables\n\nthere are two new environmental variables that should be set when upgrading to observer. both of these should be added to the .env file prior to rebuilding your gateway:\n\n * run_observer (optional) - this is the on/off switch for observer. the default value is true, so omitting this from your environmental variables will not prevent observer from running. set the value to false if you want your gateway to run without observer.\n   * run_observer=true\n * observer_wallet - this should be set to the public address of the wallet you are using to sign observer transactions.\n   * observer_wallet=qgwqtjdllgm2ehfwiipzmaofld50cnguzzipedodrgq\n\nnote: if you encounter any issues during the upgrade process, please seek assistance from the ar.io community.',charsets:{}},{title:"Overview",frontmatter:{permalink:"/gateways/ar-io-node/overview"},regularPath:"/gateways/ar-io-node/overview.html",relativePath:"gateways/ar-io-node/overview.md",key:"v-ad4931e0",path:"/gateways/ar-io-node/overview/",headersStr:null,content:"# Overview\n\nEasy setup guides have been designed to get your AR.IO Gateway up and running correctly and quickly. These guides only go through some basic configurations, while more advanced options can be found here",normalizedContent:"# overview\n\neasy setup guides have been designed to get your ar.io gateway up and running correctly and quickly. these guides only go through some basic configurations, while more advanced options can be found here",charsets:{}},{title:"ar.io Release Notes",frontmatter:{next:!1},regularPath:"/gateways/ar-io-node/release-notes.html",relativePath:"gateways/ar-io-node/release-notes.md",key:"v-79f5d88c",path:"/gateways/ar-io-node/release-notes.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:26},{level:2,title:"[Release 15] - 2024-07-19",slug:"release-15-2024-07-19",normalizedTitle:"[release 15] - 2024-07-19",charIndex:706},{level:2,title:"[Release 14] - 2024-06-26",slug:"release-14-2024-06-26",normalizedTitle:"[release 14] - 2024-06-26",charIndex:2894},{level:2,title:"[Release 13] - 2024-06-24",slug:"release-13-2024-06-24",normalizedTitle:"[release 13] - 2024-06-24",charIndex:2988},{level:2,title:"[Release 12] - 2024-06-05",slug:"release-12-2024-06-05",normalizedTitle:"[release 12] - 2024-06-05",charIndex:4519},{level:2,title:"[Release 11] - 2024-05-21",slug:"release-11-2024-05-21",normalizedTitle:"[release 11] - 2024-05-21",charIndex:5793},{level:2,title:"[Release 10] - 2024-05-20",slug:"release-10-2024-05-20",normalizedTitle:"[release 10] - 2024-05-20",charIndex:6091},{level:2,title:"[Release 9] - 2024-04-10",slug:"release-9-2024-04-10",normalizedTitle:"[release 9] - 2024-04-10",charIndex:7456},{level:2,title:"[Release 8] - 2024-03-14",slug:"release-8-2024-03-14",normalizedTitle:"[release 8] - 2024-03-14",charIndex:8591},{level:2,title:"[Release 7] - 2024 - 02 - 14",slug:"release-7-2024-02-14",normalizedTitle:"[release 7] - 2024 - 02 - 14",charIndex:9451},{level:2,title:"[Release 6] - 2024-01-29",slug:"release-6-2024-01-29",normalizedTitle:"[release 6] - 2024-01-29",charIndex:10164},{level:2,title:"[Release 5] - 2024-01-25",slug:"release-5-2024-01-25",normalizedTitle:"[release 5] - 2024-01-25",charIndex:10297},{level:2,title:"[Release 4] - 2024-01-11",slug:"release-4-2024-01-11",normalizedTitle:"[release 4] - 2024-01-11",charIndex:10917},{level:2,title:"[Release 3] - 2023-12-05",slug:"release-3-2023-12-05",normalizedTitle:"[release 3] - 2023-12-05",charIndex:11882}],headersStr:"Overview [Release 15] - 2024-07-19 [Release 14] - 2024-06-26 [Release 13] - 2024-06-24 [Release 12] - 2024-06-05 [Release 11] - 2024-05-21 [Release 10] - 2024-05-20 [Release 9] - 2024-04-10 [Release 8] - 2024-03-14 [Release 7] - 2024 - 02 - 14 [Release 6] - 2024-01-29 [Release 5] - 2024-01-25 [Release 4] - 2024-01-11 [Release 3] - 2023-12-05",content:"# ar.io Release Notes\n\n\n# Overview\n\nWelcome to the documentation page for the ar.io gateway release notes. Here, you will find detailed information about each version of the ar.io gateway, including the enhancements, bug fixes, and any other changes introduced in every release. This page serves as a comprehensive resource to keep you informed about the latest developments and updates in the ar.io gateway. For those interested in exploring the source code, each release's code is readily accessible at our GitHub repository: ar.io gateway change logs. Stay updated with the continuous improvements and advancements in the ar.io gateway by referring to this page for all release-related information.\n\n\n# [Release 15] - 2024-07-19\n\n * Fixed\n   \n   * Fixed query error that was preventing bundles from being marked as fully imported in the database.\n\n * Added\n   \n   * Adjusted data item indexing to record data item signature types in the DB. This helps distinguish between signatures using different key formats, and will enable querying by signature type in the future.\n   * Adjusted data item indexing to record offsets for data items within bundles and signatures and owners within data items. In the future this will allow us to avoid saving owners and signatures in the DB and thus considerably reduce the size of the bundles DB.\n   * Added ARNS_CACHE_TTL_MS environment variable to control the TTL of ARNS cache entries (defaults to 1 hour).\n   * Added support for multiple ranges in a single HTTP range request.\n   * Added experimental chunk POST endpoint that broadcasts chunks to the comma-separate list of URLS in the CHUNK_BROADCAST_URLS environment variable. It is available at /chunk on the internal gateway service port (4000 by default) but is not yet exposed through Envoy.\n   * Added support for running an AO CU adjacent to the gateway (see README.md for details).\n   * Added X-ArNS-Process-Id to ArNS resolved name headers.\n   * Added a set of AO_... environment variables for specifying which AO URLs should be used (see docker-compose.yaml for the complete list). The AO_CU_URL is of particular use since the core and resolver services only perform AO reads and only the CU is needed for reads.\n\n * Changed\n   \n   * Split the monolithic docker-compose.yaml into docker-compose.yaml, docker-compose.bundler.yaml, and docker-compose.ao.yaml (see README for details).\n   * Replaced references to 'docker-compose' with 'docker compose' in the docs since the former is mostly deprecated.\n   * Reduce max fork depth from 50 to 18 inline to reflect Arweave 2.7.2 protocol changes.\n   * Increased the aggressiveness of bundle reprocessing by reducing reprocessing interval from 10 minutes to 5 minutes and raising reprocessing batch size from 100 to 1000.\n   * Use a patched version of Litestream to work around insufficient S3 multipart upload size in the upstream version.\n\n\n# [Release 14] - 2024-06-26\n\n * Fixed\n   \n   * Correctly handle manifest index after paths.\n\n\n# [Release 13] - 2024-06-24\n\n * Added\n   \n   * Added support for optimistically reading data items uploaded using the integrated Turbo bundler via the LocalStack S3 interface.\n   * Added X-AR-IO-Origin-Node-Release header to outbound data requests.\n   * Added hops, origin, and originNodeRelease query params to outbound data requests.\n   * Added support for fallback in v0.2 manifests that is used if no path in the manifest is matched.\n\n * Changed\n   \n   * Updated Observer to read prescribed names from and write observations to the ar.io AO network process.\n   * Updated Resolver to read from the ar.io AO network process.\n\n * Fixed\n   \n   * Modified optimistic indexing of data items to use a null parent_id when inserting into the DB instead of a placeholder value. This prevents unexpected non-null bundledIn values in GraphQL results for optimistically indexed data items.\n   * Modified GraphQl query logic to require an ID for single block GraphQL queries. Previously queries missing an ID were returning an internal SQLite error. This represents a small departure from arweave.net's query logic which returns the latest block for these queries. We recommend querying blocks instead of block in cases where the latest block is desired.\n   * Adjusted Observer health check to reflect port change to 5050.\n\n * Security\n   \n   * Modified docker-compose.yaml to only expose Redis, PostgreSQL, and LocalStack ports internally. This protects gateways that neglect to deploy behind a firewall, reverse proxy, or load balancer.\n\n\n# [Release 12] - 2024-06-05\n\n * Added\n   \n   * Added /ar-io/admin/queue-data-item endpoint for queuing data item headers for indexing before the bundles containing them are processed. This allows trusted bundlers to make their data items quickly available to be queried via GraphQL without having to wait for bundle data submission or unbundling.\n   * Added experimental support for retrieving contiguous data from S3. See AWS_* environment variables documentation for configuration details. In conjuction with a local Turbo bundler this allows optimistic bundle (but not yet data item) retrieval.\n   * Add experimental support for fetching data from gateway peers. It can be enabled by adding ario-peer to ON_DEMAND_RETRIEVAL_ORDER. Note: do not expect this work reliably yet! This functionality is in active development and will be improved in future releases.\n   * Add import_attempt_count to bundle records to enable future bundle import retry optimizations.\n\n * Changed\n   \n   * Removed version from docker-compose.yaml to avoid warnings with recent versions of docker-compose.\n   * Switched default observer port from 5000 to 5050 to avoid conflict on OS X. Since Envoy is used to provide external access to the observer API this should have no user visible effect.\n\n\n# [Release 11] - 2024-05-21\n\n * Added\n   \n   * Added arweave_tx_fetch_total Prometheus metric to track counts of transaction headers fetched from the trusted node and Arweave network peers.\n\n * Changed\n   \n   * Revert to using unnamed bind mounts due to cross platform issues with named volumes.\n\n\n# [Release 10] - 2024-05-20\n\n * Added\n   \n   * Added experimental support for streaming SQLite backups to S3 (and compatible services) using Litestream. Start the service using the docker-compose \"litestream\" profile to use it, and see the AR_IO_SQLITE_BACKUP_* environment variables documentation for further details.\n   * Added /ar-io/admin/queue-bundle endpoint for queueing bundles for import for import before they're in the mempool. In the future this will enable optimistic indexing when combined with a local trusted bundler.\n   * Added support for triggering webhooks when blocks are imported matching the filter specified by the WEBHOOK_BLOCK_FILTER environment variable.\n   * Added experimental support for indexing transactions and related data items from the mempool. Enable it by setting ENABLE_MEMPOOL_WATCHER to 'true'.\n   * Made on-demand data caching circuit breakers configurable via the GET_DATA_CIRCUIT_BREAKER_TIMEOUT_MS environment variable. This allows gateway operators to decide how much latency they will tolerate when serving data in exchange for more complete data indexing and caching.\n   * Rename cache header from X-Cached to X-Cache to mimic typical CDN practices.\n   * Add X-AR-IO-Hops and X-AR-IO-Origin headers in preparation for future peer-to-peer functionality.\n   * Upgrade to Node.js v20 and switch to native test runner.\n\n\n# [Release 9] - 2024-04-10\n\n * Added\n   * Added experimental Farcaster Frames support, enabling simple Arweave based Frames with button navigation. Transaction and data item data is now served under /local/farcaster/frame/<ID>. /local is used as a prefix to indicate this functionality is both experimental and local to a particular gateway rather than part of the global gateway API. Both GET and POST requests are supported.\n   * Added an experimental local ArNS resolver. When enabled it removes dependence on arweave.net for ArNS resolution! Enable it by setting RUN_RESOLVER=TRUE, TRUSTED_ARNS_RESOLVER_TYPE=resolver, and TRUSTED_ARNS_RESOLVER_URL=http://resolver:6000 in your .env file.\n   * Added an X-Cached header to data responses to indicate when data is served from the local cache rather than being retrieved from an external source. This is helpful for interfacing with external systems, debugging, and end-to-end testing.\n   * Save hashes for unbundled data items during indexing. This enables reduction in data storage via hash based deduplication as well as more efficient peer-to-peer data retrieval in the future.\n\n\n# [Release 8] - 2024-03-14\n\n * Added\n   \n   * Added GraphQL SQL query debug logging to support trouble-shooting and performance optimization.\n   * Added support for indexing data items (not GraphQL querying) based solely on tag name. (example use case: indexing all IPFS CID tagged data items).\n\n * Changes\n   \n   * Observer data sampling now uses randomized ranges to generate content hashes.\n   * Reference gateway ArNS resolutions are now cached to improve report generation performance.\n   * Contract interactions are now tested before posting using dryWrite to avoid submitting interactions that would fail.\n   * /ar-io/observer/info now reports INVALID for wallets that fail to load.\n\n * Fixed\n   \n   * Fix data caching failure caused by incorrect method name in getData circuit breakers.\n   * Fix healthcheck when ARNS_ROOT_HOST includes a subdomain.\n\n\n# [Release 7] - 2024 - 02 - 14\n\n * Added\n   \n   * Add support for notifying other services of transactions and data items using webhooks (see README for details).\n   * Add support for filter negation (particularly useful for excluding large bundles from indexint).\n   * Improve unbundling throughput by decoupling data fetching from unbundling.\n   * Add Envoy and core service ARM builds.\n\n * Changed\n   \n   * Improve resouce cleanup and shutdown behavior.\n   * Don't save Redis data to disk by default to help prevent memory issues on startup for small gateways.\n   * Reduce the amount of data sampled from large files by the observer.\n   * Ensure block poa2 field is not chached to reduce memory consumption.\n\n\n# [Release 6] - 2024-01-29\n\n * Fixed\n   * Update observer to improve reliability of contract state synchronization and evaluation.\n\n\n# [Release 5] - 2024-01-25\n\n * Added\n   \n   * Added transaction offset indexing to support future data retrieval capabilities.\n   * Enabled IPv6 support in Envoy config.\n   * Added ability to configure observer report generation interval via the REPORT_GENERATION_INTERVAL_MS environmental variable. (Intended primarily for development and testing)\n\n * Changed\n   \n   * Updated observer to properly handle FQDN conflicts.\n   * Renamed most created_at columns to index to indexed_at for consistency and clarity.\n\n * Fixed\n   \n   * Updated LMDB version to remove Buffer workaround and fix occasional block cache errors.\n\n\n# [Release 4] - 2024-01-11\n\n * Added\n   \n   * Added circuit breakers around data index access to reduce impact of DB access contention under heavy requests loads.\n   * Added support for configuring data source priority via the ON_DEMAND_RETRIEVAL_ORDER environment variable.\n   * Updated observer to a version that retrieves epoch start and duration from contract state.\n\n * Changed\n   \n   * Set the Redis max memory eviction policy to allkeys-lru.\n   * Reduced default Redis max memory from 2GB to 256MB.\n   * Improved predictability and performance of GraphQL queries.\n   * Eliminated unbundling worker threads when filters are configured to skip indexing ANS-104 bundles.\n   * Reduced the default number of ANS-104 worker threads from 2 to 1 when unbundling is enabled to conserve memory.\n   * Increased nodejs max old space size to 8GB when ANS-104 workers > 1.\n\n * Fixed\n   \n   * Adjusted paths for chunks indexed by data root to include the full data root.\n\n\n# [Release 3] - 2023-12-05\n\n * Added\n   \n   * Support range requests (PR 61, PR 64)\n     * Note: serving multiple ranges in a single request is not yet supported.\n   * Release number in /ar-io/info response.\n   * Redis header cache implementation (PR 62).\n     * New default header cache (replaces old FS cache).\n   * LMDB header cache implementation (PR 60).\n     * Intended for use in development only.\n     * Enable by setting CHAIN_CACHE_TYPE=lmdb.\n   * Filesystem header cache cleanup worker (PR 68).\n     * Enabled by default to cleanup old filesystem cache now that Redis is the new default.\n   * Support for parallel ANS-104 unbundling (PR 65).\n\n * Changed\n   \n   * Used pinned container images tags for releases.\n   * Default to Redis header cache when running via docker-compose.\n   * Default to LMDB header cache when running via yarn start.\n\n * Fixed\n   \n   * Correct GraphQL pagination for transactions with duplicate tags.",normalizedContent:"# ar.io release notes\n\n\n# overview\n\nwelcome to the documentation page for the ar.io gateway release notes. here, you will find detailed information about each version of the ar.io gateway, including the enhancements, bug fixes, and any other changes introduced in every release. this page serves as a comprehensive resource to keep you informed about the latest developments and updates in the ar.io gateway. for those interested in exploring the source code, each release's code is readily accessible at our github repository: ar.io gateway change logs. stay updated with the continuous improvements and advancements in the ar.io gateway by referring to this page for all release-related information.\n\n\n# [release 15] - 2024-07-19\n\n * fixed\n   \n   * fixed query error that was preventing bundles from being marked as fully imported in the database.\n\n * added\n   \n   * adjusted data item indexing to record data item signature types in the db. this helps distinguish between signatures using different key formats, and will enable querying by signature type in the future.\n   * adjusted data item indexing to record offsets for data items within bundles and signatures and owners within data items. in the future this will allow us to avoid saving owners and signatures in the db and thus considerably reduce the size of the bundles db.\n   * added arns_cache_ttl_ms environment variable to control the ttl of arns cache entries (defaults to 1 hour).\n   * added support for multiple ranges in a single http range request.\n   * added experimental chunk post endpoint that broadcasts chunks to the comma-separate list of urls in the chunk_broadcast_urls environment variable. it is available at /chunk on the internal gateway service port (4000 by default) but is not yet exposed through envoy.\n   * added support for running an ao cu adjacent to the gateway (see readme.md for details).\n   * added x-arns-process-id to arns resolved name headers.\n   * added a set of ao_... environment variables for specifying which ao urls should be used (see docker-compose.yaml for the complete list). the ao_cu_url is of particular use since the core and resolver services only perform ao reads and only the cu is needed for reads.\n\n * changed\n   \n   * split the monolithic docker-compose.yaml into docker-compose.yaml, docker-compose.bundler.yaml, and docker-compose.ao.yaml (see readme for details).\n   * replaced references to 'docker-compose' with 'docker compose' in the docs since the former is mostly deprecated.\n   * reduce max fork depth from 50 to 18 inline to reflect arweave 2.7.2 protocol changes.\n   * increased the aggressiveness of bundle reprocessing by reducing reprocessing interval from 10 minutes to 5 minutes and raising reprocessing batch size from 100 to 1000.\n   * use a patched version of litestream to work around insufficient s3 multipart upload size in the upstream version.\n\n\n# [release 14] - 2024-06-26\n\n * fixed\n   \n   * correctly handle manifest index after paths.\n\n\n# [release 13] - 2024-06-24\n\n * added\n   \n   * added support for optimistically reading data items uploaded using the integrated turbo bundler via the localstack s3 interface.\n   * added x-ar-io-origin-node-release header to outbound data requests.\n   * added hops, origin, and originnoderelease query params to outbound data requests.\n   * added support for fallback in v0.2 manifests that is used if no path in the manifest is matched.\n\n * changed\n   \n   * updated observer to read prescribed names from and write observations to the ar.io ao network process.\n   * updated resolver to read from the ar.io ao network process.\n\n * fixed\n   \n   * modified optimistic indexing of data items to use a null parent_id when inserting into the db instead of a placeholder value. this prevents unexpected non-null bundledin values in graphql results for optimistically indexed data items.\n   * modified graphql query logic to require an id for single block graphql queries. previously queries missing an id were returning an internal sqlite error. this represents a small departure from arweave.net's query logic which returns the latest block for these queries. we recommend querying blocks instead of block in cases where the latest block is desired.\n   * adjusted observer health check to reflect port change to 5050.\n\n * security\n   \n   * modified docker-compose.yaml to only expose redis, postgresql, and localstack ports internally. this protects gateways that neglect to deploy behind a firewall, reverse proxy, or load balancer.\n\n\n# [release 12] - 2024-06-05\n\n * added\n   \n   * added /ar-io/admin/queue-data-item endpoint for queuing data item headers for indexing before the bundles containing them are processed. this allows trusted bundlers to make their data items quickly available to be queried via graphql without having to wait for bundle data submission or unbundling.\n   * added experimental support for retrieving contiguous data from s3. see aws_* environment variables documentation for configuration details. in conjuction with a local turbo bundler this allows optimistic bundle (but not yet data item) retrieval.\n   * add experimental support for fetching data from gateway peers. it can be enabled by adding ario-peer to on_demand_retrieval_order. note: do not expect this work reliably yet! this functionality is in active development and will be improved in future releases.\n   * add import_attempt_count to bundle records to enable future bundle import retry optimizations.\n\n * changed\n   \n   * removed version from docker-compose.yaml to avoid warnings with recent versions of docker-compose.\n   * switched default observer port from 5000 to 5050 to avoid conflict on os x. since envoy is used to provide external access to the observer api this should have no user visible effect.\n\n\n# [release 11] - 2024-05-21\n\n * added\n   \n   * added arweave_tx_fetch_total prometheus metric to track counts of transaction headers fetched from the trusted node and arweave network peers.\n\n * changed\n   \n   * revert to using unnamed bind mounts due to cross platform issues with named volumes.\n\n\n# [release 10] - 2024-05-20\n\n * added\n   \n   * added experimental support for streaming sqlite backups to s3 (and compatible services) using litestream. start the service using the docker-compose \"litestream\" profile to use it, and see the ar_io_sqlite_backup_* environment variables documentation for further details.\n   * added /ar-io/admin/queue-bundle endpoint for queueing bundles for import for import before they're in the mempool. in the future this will enable optimistic indexing when combined with a local trusted bundler.\n   * added support for triggering webhooks when blocks are imported matching the filter specified by the webhook_block_filter environment variable.\n   * added experimental support for indexing transactions and related data items from the mempool. enable it by setting enable_mempool_watcher to 'true'.\n   * made on-demand data caching circuit breakers configurable via the get_data_circuit_breaker_timeout_ms environment variable. this allows gateway operators to decide how much latency they will tolerate when serving data in exchange for more complete data indexing and caching.\n   * rename cache header from x-cached to x-cache to mimic typical cdn practices.\n   * add x-ar-io-hops and x-ar-io-origin headers in preparation for future peer-to-peer functionality.\n   * upgrade to node.js v20 and switch to native test runner.\n\n\n# [release 9] - 2024-04-10\n\n * added\n   * added experimental farcaster frames support, enabling simple arweave based frames with button navigation. transaction and data item data is now served under /local/farcaster/frame/<id>. /local is used as a prefix to indicate this functionality is both experimental and local to a particular gateway rather than part of the global gateway api. both get and post requests are supported.\n   * added an experimental local arns resolver. when enabled it removes dependence on arweave.net for arns resolution! enable it by setting run_resolver=true, trusted_arns_resolver_type=resolver, and trusted_arns_resolver_url=http://resolver:6000 in your .env file.\n   * added an x-cached header to data responses to indicate when data is served from the local cache rather than being retrieved from an external source. this is helpful for interfacing with external systems, debugging, and end-to-end testing.\n   * save hashes for unbundled data items during indexing. this enables reduction in data storage via hash based deduplication as well as more efficient peer-to-peer data retrieval in the future.\n\n\n# [release 8] - 2024-03-14\n\n * added\n   \n   * added graphql sql query debug logging to support trouble-shooting and performance optimization.\n   * added support for indexing data items (not graphql querying) based solely on tag name. (example use case: indexing all ipfs cid tagged data items).\n\n * changes\n   \n   * observer data sampling now uses randomized ranges to generate content hashes.\n   * reference gateway arns resolutions are now cached to improve report generation performance.\n   * contract interactions are now tested before posting using drywrite to avoid submitting interactions that would fail.\n   * /ar-io/observer/info now reports invalid for wallets that fail to load.\n\n * fixed\n   \n   * fix data caching failure caused by incorrect method name in getdata circuit breakers.\n   * fix healthcheck when arns_root_host includes a subdomain.\n\n\n# [release 7] - 2024 - 02 - 14\n\n * added\n   \n   * add support for notifying other services of transactions and data items using webhooks (see readme for details).\n   * add support for filter negation (particularly useful for excluding large bundles from indexint).\n   * improve unbundling throughput by decoupling data fetching from unbundling.\n   * add envoy and core service arm builds.\n\n * changed\n   \n   * improve resouce cleanup and shutdown behavior.\n   * don't save redis data to disk by default to help prevent memory issues on startup for small gateways.\n   * reduce the amount of data sampled from large files by the observer.\n   * ensure block poa2 field is not chached to reduce memory consumption.\n\n\n# [release 6] - 2024-01-29\n\n * fixed\n   * update observer to improve reliability of contract state synchronization and evaluation.\n\n\n# [release 5] - 2024-01-25\n\n * added\n   \n   * added transaction offset indexing to support future data retrieval capabilities.\n   * enabled ipv6 support in envoy config.\n   * added ability to configure observer report generation interval via the report_generation_interval_ms environmental variable. (intended primarily for development and testing)\n\n * changed\n   \n   * updated observer to properly handle fqdn conflicts.\n   * renamed most created_at columns to index to indexed_at for consistency and clarity.\n\n * fixed\n   \n   * updated lmdb version to remove buffer workaround and fix occasional block cache errors.\n\n\n# [release 4] - 2024-01-11\n\n * added\n   \n   * added circuit breakers around data index access to reduce impact of db access contention under heavy requests loads.\n   * added support for configuring data source priority via the on_demand_retrieval_order environment variable.\n   * updated observer to a version that retrieves epoch start and duration from contract state.\n\n * changed\n   \n   * set the redis max memory eviction policy to allkeys-lru.\n   * reduced default redis max memory from 2gb to 256mb.\n   * improved predictability and performance of graphql queries.\n   * eliminated unbundling worker threads when filters are configured to skip indexing ans-104 bundles.\n   * reduced the default number of ans-104 worker threads from 2 to 1 when unbundling is enabled to conserve memory.\n   * increased nodejs max old space size to 8gb when ans-104 workers > 1.\n\n * fixed\n   \n   * adjusted paths for chunks indexed by data root to include the full data root.\n\n\n# [release 3] - 2023-12-05\n\n * added\n   \n   * support range requests (pr 61, pr 64)\n     * note: serving multiple ranges in a single request is not yet supported.\n   * release number in /ar-io/info response.\n   * redis header cache implementation (pr 62).\n     * new default header cache (replaces old fs cache).\n   * lmdb header cache implementation (pr 60).\n     * intended for use in development only.\n     * enable by setting chain_cache_type=lmdb.\n   * filesystem header cache cleanup worker (pr 68).\n     * enabled by default to cleanup old filesystem cache now that redis is the new default.\n   * support for parallel ans-104 unbundling (pr 65).\n\n * changed\n   \n   * used pinned container images tags for releases.\n   * default to redis header cache when running via docker-compose.\n   * default to lmdb header cache when running via yarn start.\n\n * fixed\n   \n   * correct graphql pagination for transactions with duplicate tags.",charsets:{}},{title:"Join the AR.IO Testnet",frontmatter:{prev:!1,permalink:"/gateways/testnet/",tags:["testnet","join","application","jwk","qty","fqdn","label","note","properties"]},regularPath:"/gateways/ar-io-node/testnet.html",relativePath:"gateways/ar-io-node/testnet.md",key:"v-4222367a",path:"/gateways/testnet/",headers:[{level:2,title:"Prerequisites",slug:"prerequisites",normalizedTitle:"prerequisites",charIndex:29},{level:2,title:"Submit an Application",slug:"submit-an-application",normalizedTitle:"submit an application",charIndex:454}],headersStr:"Prerequisites Submit an Application",content:"# Join the AR.IO Testnet\n\n\n# Prerequisites\n\n 1. Must have a fully functional AR.IO gateway.\n    \n    * This includes the ability to resolve ArNS subdomains.\n    * Follow installation instructions for windows or linux and get help from the ar.io community.\n\n 2. Gateway must be associated with an Arweave Wallet.\n    \n    * Learn about creating Arweave wallets here\n\n 3. Arweave wallet must be funded with enough AR tokens to pay for transaction gas.\n\n\n# Submit an Application\n\nJoining the ar.io Testnet requires staking a minimum of 10,000 Test IO Tokens. You must have Test IO Tokens before you are able to join. Test IO Tokens are currently not being distributed.\n\nNew applications for joining the Testnet are not currently being accepted. Be sure to join the ar.io Discord to stay up to date on Testnet status and possible future availability prior to the launch of the Mainnet. --\x3e",normalizedContent:"# join the ar.io testnet\n\n\n# prerequisites\n\n 1. must have a fully functional ar.io gateway.\n    \n    * this includes the ability to resolve arns subdomains.\n    * follow installation instructions for windows or linux and get help from the ar.io community.\n\n 2. gateway must be associated with an arweave wallet.\n    \n    * learn about creating arweave wallets here\n\n 3. arweave wallet must be funded with enough ar tokens to pay for transaction gas.\n\n\n# submit an application\n\njoining the ar.io testnet requires staking a minimum of 10,000 test io tokens. you must have test io tokens before you are able to join. test io tokens are currently not being distributed.\n\nnew applications for joining the testnet are not currently being accepted. be sure to join the ar.io discord to stay up to date on testnet status and possible future availability prior to the launch of the mainnet. --\x3e",charsets:{}},{title:"Troubleshooting",frontmatter:{permalink:"/troubleshooting"},regularPath:"/gateways/ar-io-node/troubleshooting.html",relativePath:"gateways/ar-io-node/troubleshooting.md",key:"v-0cbb8c5a",path:"/troubleshooting/",headers:[{level:2,title:"My Gateway Seems to be Running but...",slug:"my-gateway-seems-to-be-running-but",normalizedTitle:"my gateway seems to be running but...",charIndex:22},{level:3,title:"",slug:"",normalizedTitle:"",charIndex:0},{level:3,title:"",slug:"-2",normalizedTitle:"",charIndex:0},{level:3,title:"",slug:"-3",normalizedTitle:"",charIndex:0},{level:3,title:"",slug:"-4",normalizedTitle:"",charIndex:0},{level:3,title:"",slug:"-5",normalizedTitle:"",charIndex:0},{level:3,title:"",slug:"-6",normalizedTitle:"",charIndex:0},{level:3,title:"",slug:"-7",normalizedTitle:"",charIndex:0},{level:3,title:"",slug:"-8",normalizedTitle:"",charIndex:0},{level:2,title:"My Gateway was Running, but now it isn't",slug:"my-gateway-was-running-but-now-it-isn-t",normalizedTitle:"my gateway was running, but now it isn't",charIndex:4449},{level:3,title:"",slug:"-9",normalizedTitle:"",charIndex:0},{level:2,title:"I am having Trouble Getting my Gateway Set up",slug:"i-am-having-trouble-getting-my-gateway-set-up",normalizedTitle:"i am having trouble getting my gateway set up",charIndex:5127},{level:3,title:"",slug:"-10",normalizedTitle:"",charIndex:0},{level:3,title:"",slug:"-11",normalizedTitle:"",charIndex:0},{level:3,title:"",slug:"-12",normalizedTitle:"",charIndex:0},{level:2,title:"Quick Lookup",slug:"quick-lookup",normalizedTitle:"quick lookup",charIndex:6682}],headersStr:"My Gateway Seems to be Running but...         My Gateway was Running, but now it isn't  I am having Trouble Getting my Gateway Set up    Quick Lookup",content:'# Troubleshooting\n\n\n# My Gateway Seems to be Running but...\n\n\n#\n\nMy release number doesn\'t match the latest version, or includes "-pre"\n\nIf your release number when you go to <your-gateway>/ar-io/info is lower than the current release, you simply need to upgrade your gateway in order to reach the latest release.\n\nIf your release number includes the suffix "-pre" it means you are running your gateway from the development branch of the github repository, instead of the main branch. The development branch is used for staging work that the engineering team is in the middle of. Because of this, it can be much less stable than the main branch used for production and can cause significant issues.\n\nEnsure that you are running the latest release, from the main branch, by running the below commands in your terminal:\n\nsudo docker-compose down --rmi all\n\ngit checkout main\n\ngit pull\n\nsudo docker-compose up -d\n\n\nIf this doesn\'t resolve the issue, you can also try a more extreme method of clearing out the incorrect docker images:\n\nsudo docker-compose down\n\nsudo docker system prune -a\n\nsudo docker-compose up -d\n\n\n\n#\n\nIt appears offline on Viewblock or ar://gateways\n\nViewblock and ar://gateways use a very simple ping method for determining if a gateway is "up". There are plenty of reasons why this ping may fail while the gateway is running perfectly, so showing as down is not cause for concern. Just verify that your gateway is still running, and wait. Your gateway will show as up again soon.\n\n\n#\n\n< gateway >/ar-io/observer/reports/current just says "report pending"\n\nThis is normal. Your Observer is working to generate a report and that report will be displayed once it is complete.\n\n\n#\n\nMy Observer is showing me the error "error: Error reading interaction: Cannot read properties of undefined"\n\nThis is not an issue with your observer. The short explanation is that your Observer is looking for tasks assigned to it by the ar.io network contract, but there isnt anything there. You can safely ignore this error message.\n\n\n#\n\nObserving my gateway shows failures\n\nWhen observing a gateway, there are two main pass/fail tests. "Ownership" and "ArNS Assessment"\n\n * Ownership: This tests to see if the value set in your gateway AR_IO_WALLET value (in .env) matches the wallet used to join the AR.IO Network. If they don\'t match, update the value in your .env file and restart your gateway.\n\n * ArNS Assessment: This tests to see if a gateway is able to resolve ArNS names correctly. The first thing you should check is if you have the ARNS_ROOT_HOST value set in your .env file. If not, set the value and restart your gateway. If this value is set, check to make sure you have current DNS records and SSL certificates for wildcard subdomains on your gateway.\n\n\n#\n\nI updated my .env settings, but nothing changed on my gateway\n\nOnce you edit your .env file, you need to "rebuild" your gateway for the changes to take effect. As of release 3, every time you start your gateway with docker-compose it is automatically rebuilt. So all you need to do is shut your gateway down and restart it.\n\n\n#\n\nI am getting an out of disk space error, but I still have open storage space on my computer\n\nThe most likely cause of this is inode exhaustion. Test this by running the command:\n\ndf -i\n\n\nIf one of the lines in the output says 100%, you have run out of inodes and so your filesystem is not capable of creating new files, even if you have available space. The solution is to delete files from your data folder in order to free up inodes.\n\nThis was a common issue prior to release #3, when Redis caching was introduced to reduce the number of small files created. If you are using an older version of the gateway, consider upgrading to mitigate the risk of inode exhaustion.\n\n\n#\n\nI can\'t load ArNS names\n\nThe first thing you should check if your gateway is not resolving ArNS names is that you have ARNS_ROOT_HOST set in your .env file. If not, set it to your domain name used for the gateway. For example, ARNS_ROOT_HOST=arweave.dev.\n\nOnce this value is set, restart your gateway for the changes to take effect.\n\nIf that doesn\'t resolve the issue, check your dns records. You need to have a wildcard subdomain ( *.< your-domain > ) set with your domain registrar so that ArNS names will actually point at your gateway. You can set this record, and generate an SSL certificate for it, in the same way you set the records for your primary domain.\n\n\n\n# My Gateway was Running, but now it isn\'t\n\n\n#\n\nWhen I try to access my gateway in a browser I get a "Your connection is not private" error\n\nThis error message means that your SSL certificates have expired. You need to renew your certificates by running the same certbot command you used when you initially started your gateway:\n\nsudo certbot certonly --manual --preferred-challenges dns --email <your-email-address> -d <your-domain>.com -d \'*.<your-domain>.com\'\n\n\nCertbot SSL certificates expire after 90 days, and you will need to rerun this command to renew every time. If you provide an email address, you will receive an email letting you know when it is time to renew.\n\n\n\n# I am having Trouble Getting my Gateway Set up\n\n\n\n#\n\nI set my gateway up, but when I go to my domain I get a 404/Nginx error\n\nIf you navigate to your domain and see a 404 error from Nginx (the reverse proxy server used in the setup guide) it means that your domain is correctly pointed at the machine running your gateway, but you have not properly configured your Nginx settings (or your gateway is not running).\n\nThe Set up Networking section of the setup guide has detailed instructions on configuring your Nginx server. If all else fails, try restarting Nginx, that usually clears any issues with the server clinging to old configurations.\n\nsudo service nginx restart\n\n\n\n#\n\nWhen I visit my domain I see a 502 error from Nginx\n\nA 502 error from Nginx means that Nginx is working correctly, but it is receiving an error from your gateway when it tries to forward traffic.\n\n\n#\n\nI am having trouble generating my SSL certificates\n\nWhen using the manual certbot command provided in the setup guide:\n\nsudo certbot certonly --manual --preferred-challenges dns --email <your-email-address> -d <your-domain>.com -d \'*.<your-domain>.com\'\n\n\nYou need to be sure that you are waiting after creating your TXT records for them to completely propagate. You can check propagation using a tool like dnschecker.org.\n\nIf you continue to have issues, you can check the official certbot instructions guide.\n\n\nIf you do not see your issue listed here, or if you were not able to solve your problem with the above information, feel free to reach out in the ar.io discord.\n\n\n# Quick Lookup\n\nBelow is a quick summary of what you should check when troubleshooting your gateway. Find more detailed information in the sections above.\n\nISSUE                                                          WHAT TO CHECK\nMy release number is wrong                                     Pull the latest github updates and make sure you are on the\n                                                               main branch\nGateway appears offline on Viewblock or ar://gateways          Probably fine, but verify that your gateway is still\n                                                               running.\n\'/ar-io/observer/reports/current\' just says "report pending"   Normal behavior, wait for the report to complete.\nObserver error "Cannot read properties of undefined"           Normal behavior, Observer is checking for data not\n                                                               implemented yet.\nObserving my gateway shows failures                            Check AR_IO_WALLET and ARNS_ROOT_HOST settings.\nUpdated .env settings not reflected on gateway                 Rebuild your gateway after editing .env file.\nOut of disk space error                                        Check for inode exhaustion and delete files if necessary.\nCan\'t load ArNS names                                          Check ARNS_ROOT_HOST setting in .env file, and DNS records.\n"Your connection is not private" error                         Generate or renew SSL certificates.\n404/Nginx error when accessing domain                          Check Nginx settings and restart Nginx if necessary.\n502 error from Nginx                                           Check for errors in your gateway.\nTrouble generating SSL certificates                            Ensure TXT records have propagated and follow certbot\n                                                               instructions.',normalizedContent:'# troubleshooting\n\n\n# my gateway seems to be running but...\n\n\n#\n\nmy release number doesn\'t match the latest version, or includes "-pre"\n\nif your release number when you go to <your-gateway>/ar-io/info is lower than the current release, you simply need to upgrade your gateway in order to reach the latest release.\n\nif your release number includes the suffix "-pre" it means you are running your gateway from the development branch of the github repository, instead of the main branch. the development branch is used for staging work that the engineering team is in the middle of. because of this, it can be much less stable than the main branch used for production and can cause significant issues.\n\nensure that you are running the latest release, from the main branch, by running the below commands in your terminal:\n\nsudo docker-compose down --rmi all\n\ngit checkout main\n\ngit pull\n\nsudo docker-compose up -d\n\n\nif this doesn\'t resolve the issue, you can also try a more extreme method of clearing out the incorrect docker images:\n\nsudo docker-compose down\n\nsudo docker system prune -a\n\nsudo docker-compose up -d\n\n\n\n#\n\nit appears offline on viewblock or ar://gateways\n\nviewblock and ar://gateways use a very simple ping method for determining if a gateway is "up". there are plenty of reasons why this ping may fail while the gateway is running perfectly, so showing as down is not cause for concern. just verify that your gateway is still running, and wait. your gateway will show as up again soon.\n\n\n#\n\n< gateway >/ar-io/observer/reports/current just says "report pending"\n\nthis is normal. your observer is working to generate a report and that report will be displayed once it is complete.\n\n\n#\n\nmy observer is showing me the error "error: error reading interaction: cannot read properties of undefined"\n\nthis is not an issue with your observer. the short explanation is that your observer is looking for tasks assigned to it by the ar.io network contract, but there isnt anything there. you can safely ignore this error message.\n\n\n#\n\nobserving my gateway shows failures\n\nwhen observing a gateway, there are two main pass/fail tests. "ownership" and "arns assessment"\n\n * ownership: this tests to see if the value set in your gateway ar_io_wallet value (in .env) matches the wallet used to join the ar.io network. if they don\'t match, update the value in your .env file and restart your gateway.\n\n * arns assessment: this tests to see if a gateway is able to resolve arns names correctly. the first thing you should check is if you have the arns_root_host value set in your .env file. if not, set the value and restart your gateway. if this value is set, check to make sure you have current dns records and ssl certificates for wildcard subdomains on your gateway.\n\n\n#\n\ni updated my .env settings, but nothing changed on my gateway\n\nonce you edit your .env file, you need to "rebuild" your gateway for the changes to take effect. as of release 3, every time you start your gateway with docker-compose it is automatically rebuilt. so all you need to do is shut your gateway down and restart it.\n\n\n#\n\ni am getting an out of disk space error, but i still have open storage space on my computer\n\nthe most likely cause of this is inode exhaustion. test this by running the command:\n\ndf -i\n\n\nif one of the lines in the output says 100%, you have run out of inodes and so your filesystem is not capable of creating new files, even if you have available space. the solution is to delete files from your data folder in order to free up inodes.\n\nthis was a common issue prior to release #3, when redis caching was introduced to reduce the number of small files created. if you are using an older version of the gateway, consider upgrading to mitigate the risk of inode exhaustion.\n\n\n#\n\ni can\'t load arns names\n\nthe first thing you should check if your gateway is not resolving arns names is that you have arns_root_host set in your .env file. if not, set it to your domain name used for the gateway. for example, arns_root_host=arweave.dev.\n\nonce this value is set, restart your gateway for the changes to take effect.\n\nif that doesn\'t resolve the issue, check your dns records. you need to have a wildcard subdomain ( *.< your-domain > ) set with your domain registrar so that arns names will actually point at your gateway. you can set this record, and generate an ssl certificate for it, in the same way you set the records for your primary domain.\n\n\n\n# my gateway was running, but now it isn\'t\n\n\n#\n\nwhen i try to access my gateway in a browser i get a "your connection is not private" error\n\nthis error message means that your ssl certificates have expired. you need to renew your certificates by running the same certbot command you used when you initially started your gateway:\n\nsudo certbot certonly --manual --preferred-challenges dns --email <your-email-address> -d <your-domain>.com -d \'*.<your-domain>.com\'\n\n\ncertbot ssl certificates expire after 90 days, and you will need to rerun this command to renew every time. if you provide an email address, you will receive an email letting you know when it is time to renew.\n\n\n\n# i am having trouble getting my gateway set up\n\n\n\n#\n\ni set my gateway up, but when i go to my domain i get a 404/nginx error\n\nif you navigate to your domain and see a 404 error from nginx (the reverse proxy server used in the setup guide) it means that your domain is correctly pointed at the machine running your gateway, but you have not properly configured your nginx settings (or your gateway is not running).\n\nthe set up networking section of the setup guide has detailed instructions on configuring your nginx server. if all else fails, try restarting nginx, that usually clears any issues with the server clinging to old configurations.\n\nsudo service nginx restart\n\n\n\n#\n\nwhen i visit my domain i see a 502 error from nginx\n\na 502 error from nginx means that nginx is working correctly, but it is receiving an error from your gateway when it tries to forward traffic.\n\n\n#\n\ni am having trouble generating my ssl certificates\n\nwhen using the manual certbot command provided in the setup guide:\n\nsudo certbot certonly --manual --preferred-challenges dns --email <your-email-address> -d <your-domain>.com -d \'*.<your-domain>.com\'\n\n\nyou need to be sure that you are waiting after creating your txt records for them to completely propagate. you can check propagation using a tool like dnschecker.org.\n\nif you continue to have issues, you can check the official certbot instructions guide.\n\n\nif you do not see your issue listed here, or if you were not able to solve your problem with the above information, feel free to reach out in the ar.io discord.\n\n\n# quick lookup\n\nbelow is a quick summary of what you should check when troubleshooting your gateway. find more detailed information in the sections above.\n\nissue                                                          what to check\nmy release number is wrong                                     pull the latest github updates and make sure you are on the\n                                                               main branch\ngateway appears offline on viewblock or ar://gateways          probably fine, but verify that your gateway is still\n                                                               running.\n\'/ar-io/observer/reports/current\' just says "report pending"   normal behavior, wait for the report to complete.\nobserver error "cannot read properties of undefined"           normal behavior, observer is checking for data not\n                                                               implemented yet.\nobserving my gateway shows failures                            check ar_io_wallet and arns_root_host settings.\nupdated .env settings not reflected on gateway                 rebuild your gateway after editing .env file.\nout of disk space error                                        check for inode exhaustion and delete files if necessary.\ncan\'t load arns names                                          check arns_root_host setting in .env file, and dns records.\n"your connection is not private" error                         generate or renew ssl certificates.\n404/nginx error when accessing domain                          check nginx settings and restart nginx if necessary.\n502 error from nginx                                           check for errors in your gateway.\ntrouble generating ssl certificates                            ensure txt records have propagated and follow certbot\n                                                               instructions.',charsets:{}},{title:"Upgrading your Gateway",frontmatter:{permalink:"/gateways/upgrade/"},regularPath:"/gateways/ar-io-node/upgrading.html",relativePath:"gateways/ar-io-node/upgrading.md",key:"v-68d9087a",path:"/gateways/upgrade/",headers:[{level:2,title:"Prerequisites",slug:"prerequisites",normalizedTitle:"prerequisites",charIndex:347},{level:2,title:"Checking your Release Number",slug:"checking-your-release-number",normalizedTitle:"checking your release number",charIndex:492},{level:2,title:"Upgrade Steps",slug:"upgrade-steps",normalizedTitle:"upgrade steps",charIndex:1055}],headersStr:"Prerequisites Checking your Release Number Upgrade Steps",content:"# Upgrading your Gateway\n\nTo ensure the optimal performance and security of your AR.IO Gateway, it's essential to regularly upgrade to the latest version. Notably, indexed data resides separate from Docker. As a result, neither upgrading the Gateway nor pruning Docker will erase your data or progress. Here's how you can perform the upgrade:\n\n\n# Prerequisites\n\n * Your Gateway should have been cloned using git. If you haven't, follow the installation instructions for windows or linux.\n\n\n# Checking your Release Number\n\nEffective with release 3, you can view the currently implemented release on any gateway by visiting https://<gateway>/ar-io/info in a browser. Be sure to replace <gateway> with the domain of the gateway you are checking.\n\nIf the release number displayed includes -pre it means that your gateway is using the develop branch of the github repo for the gateway code. Follow steps in our troubleshooting guide to switch over to the more stable main branch.\n\nAnnouncements will be made in our discord server showing each new release.\n\n\n# Upgrade Steps\n\n 1. Pull the latest changes from the repository\n    \n    Navigate to your cloned repository directory and execute the following command:\n    \n    git pull\n    \n\n 2. Shut down Docker\n    \n    Depending on your operating system, use the respective commands:\n    \n    Linux\n    \n    sudo docker-compose down -v\n    \n    \n    Windows\n    \n    \n    docker-compose down -v\n    \n    \n\n 3. Prune Docker (Optional)\n    \n    It's a good practice to clean up unused Docker resources. Again, use the command based on your OS:\n    \n    NOTE: This will erase all inactive docker containers on your machine. If you use docker for anything beyond running a gateway be extremely careful using this command.\n    \n    Linux\n    \n    \n    sudo docker system prune\n    \n    \n    \n    Windows\n    \n    \n    docker system prune\n    \n    \n\n 4. Check for New Environmental Variables\n    \n    Read the update release change logs and community announcements to see if the new version includes any new environmental variables that you should set before restarting your gateway.\n\n 5. Restart the Docker container\n    \n    Finally, start the Docker container again to implement the changes:\n    \n    Linux\n    \n    sudo docker-compose up -d\n    \n    \n    Windows\n    \n    docker-compose up -d\n    \n    \n    NOTE: Effective with Release #3, it is no longer required to include the --build flag when starting your gateway. Docker will automatically build using the image specified in the docker-commpose.yaml file.\n\nThat's it! Your AR.IO Gateway is now upgraded to the latest version. Ensure to test and verify that everything is functioning as expected. If you encounter any issues, reach out to the AR.IO community for assistance.",normalizedContent:"# upgrading your gateway\n\nto ensure the optimal performance and security of your ar.io gateway, it's essential to regularly upgrade to the latest version. notably, indexed data resides separate from docker. as a result, neither upgrading the gateway nor pruning docker will erase your data or progress. here's how you can perform the upgrade:\n\n\n# prerequisites\n\n * your gateway should have been cloned using git. if you haven't, follow the installation instructions for windows or linux.\n\n\n# checking your release number\n\neffective with release 3, you can view the currently implemented release on any gateway by visiting https://<gateway>/ar-io/info in a browser. be sure to replace <gateway> with the domain of the gateway you are checking.\n\nif the release number displayed includes -pre it means that your gateway is using the develop branch of the github repo for the gateway code. follow steps in our troubleshooting guide to switch over to the more stable main branch.\n\nannouncements will be made in our discord server showing each new release.\n\n\n# upgrade steps\n\n 1. pull the latest changes from the repository\n    \n    navigate to your cloned repository directory and execute the following command:\n    \n    git pull\n    \n\n 2. shut down docker\n    \n    depending on your operating system, use the respective commands:\n    \n    linux\n    \n    sudo docker-compose down -v\n    \n    \n    windows\n    \n    \n    docker-compose down -v\n    \n    \n\n 3. prune docker (optional)\n    \n    it's a good practice to clean up unused docker resources. again, use the command based on your os:\n    \n    note: this will erase all inactive docker containers on your machine. if you use docker for anything beyond running a gateway be extremely careful using this command.\n    \n    linux\n    \n    \n    sudo docker system prune\n    \n    \n    \n    windows\n    \n    \n    docker system prune\n    \n    \n\n 4. check for new environmental variables\n    \n    read the update release change logs and community announcements to see if the new version includes any new environmental variables that you should set before restarting your gateway.\n\n 5. restart the docker container\n    \n    finally, start the docker container again to implement the changes:\n    \n    linux\n    \n    sudo docker-compose up -d\n    \n    \n    windows\n    \n    docker-compose up -d\n    \n    \n    note: effective with release #3, it is no longer required to include the --build flag when starting your gateway. docker will automatically build using the image specified in the docker-commpose.yaml file.\n\nthat's it! your ar.io gateway is now upgraded to the latest version. ensure to test and verify that everything is functioning as expected. if you encounter any issues, reach out to the ar.io community for assistance.",charsets:{}},{title:"Windows Installation Instructions",frontmatter:{prev:!1,next:"./testnet"},regularPath:"/gateways/ar-io-node/windows-setup.html",relativePath:"gateways/ar-io-node/windows-setup.md",key:"v-2aed10ba",path:"/gateways/ar-io-node/windows-setup.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:40},{level:2,title:"Prerequisites",slug:"prerequisites",normalizedTitle:"prerequisites",charIndex:387},{level:2,title:"Install Required Packages",slug:"install-required-packages",normalizedTitle:"install required packages",charIndex:547},{level:2,title:"Clone the Repository",slug:"clone-the-repository",normalizedTitle:"clone the repository",charIndex:1413},{level:2,title:"Create the Environment File",slug:"create-the-environment-file",normalizedTitle:"create the environment file",charIndex:2230},{level:2,title:"Supply Your Observer Wallet Keyfile:",slug:"supply-your-observer-wallet-keyfile",normalizedTitle:"supply your observer wallet keyfile:",charIndex:4801},{level:2,title:"Start the Docker Containers",slug:"start-the-docker-containers",normalizedTitle:"start the docker containers",charIndex:5293},{level:2,title:"Set Up Router Port Forwarding",slug:"set-up-router-port-forwarding",normalizedTitle:"set up router port forwarding",charIndex:6796},{level:2,title:"Install and Configure NGINX Docker",slug:"install-and-configure-nginx-docker",normalizedTitle:"install and configure nginx docker",charIndex:9054}],headersStr:"Overview Prerequisites Install Required Packages Clone the Repository Create the Environment File Supply Your Observer Wallet Keyfile: Start the Docker Containers Set Up Router Port Forwarding Install and Configure NGINX Docker",content:'# Windows Installation Instructions\n\n\n# Overview\n\nThis guide provides step-by-step instructions for setting up the AR.IO node on a Windows computer. It covers installing necessary software, cloning the repository, creating an environment file, starting the Docker container, setting up networking, and installing and configuring NGINX Docker. No prior coding experience is required.\n\n\n# Prerequisites\n\nBefore starting the installation process, ensure you have the following:\n\n * A Windows computer\n * Administrative privileges on the computer\n\n\n# Install Required Packages\n\n 1. Install Docker:\n    \n    * Download Docker Desktop for Windows from here.\n    * Run the installer and follow the prompts.\n    * During installation, make sure to select the option to use WSL (Windows Subsystem for Linux) rather than Hyper-V.\n    * Restart your PC.\n    * Update Windows Subsystem for Linux (WSL):\n      * Open the command prompt as an administrator:\n        * Press Windows Key + R.\n        * Type cmd and press Enter.\n        * Right-click on the "Command Prompt" application in the search results.\n        * Select "Run as administrator" from the context menu.\n      * Run the following commands:\n        \n        wsl --update\n        wsl --shutdown\n        \n    \n    * Restart Docker Desktop.\n\n 2. Install Git:\n    \n    * Download Git for Windows from here.\n    * Run the installer and use the default settings.\n\n\n# Clone the Repository\n\n 1. Clone the main repository:\n    * Open the command prompt:\n      * Press Windows Key + R.\n      * Type cmd and press Enter.\n    * Navigate to the directory where you want to clone the repository:\n      * Use the cd command to change directories. For example, to navigate to the Documents directory:\n        \n        cd Documents\n        \n        \n        * More detailed instructions on navigating with the cd command can be found here\n        * NOTE: Your database of Arweave Transaction Headers will be created in the project directory, not Docker. So, if you are using an external hard drive to turn an old machine into a node, install the node directly to that external drive.\n    * Run the following command:\n      \n      git clone -b main https://github.com/ar-io/ar-io-node\n      \n\n\n# Create the Environment File\n\n 1. Create an environmental variables file:\n    \n    * Open a text editor (e.g., Notepad):\n      \n      * Press Windows Key and search for "Notepad".\n      * Click on "Notepad" to open the text editor.\n    \n    * Paste the following content into the new file, replacing <your-domain> with the domain address you are using to access the node, and <your-public-wallet-address> with the public address of your Arweave wallet:\n      \n      GRAPHQL_HOST=arweave.net\n      GRAPHQL_PORT=443\n      START_HEIGHT=0\n      RUN_OBSERVER=true\n      ARNS_ROOT_HOST=<your-domain>\n      AR_IO_WALLET=<your-public-wallet-address>\n      OBSERVER_WALLET=<hot-wallet-public-address>\n      \n      \n      * The GRAPHQL values set the proxy for GQL queries to arweave.net, You may use any available gateway that supports GQL queries. If omitted, your node can support GQL queries on locally indexed transactions, but only L1 transactions are indexed by default.\n      * START_HEIGHT is an optional line. It sets the block number where your node will start downloading and indexing transactions headers. Omitting this line will begin indexing at block 0.\n      * RUN_OBSERVER turns on the Observer to generate Network Compliance Reports. This is required for full participation in the AR.IO Network. Set to false to run your gateway without Observer.\n      * ARNS_ROOT_HOST sets the starting point for resolving ARNS names, which are accessed as a subdomain of a gateway. It should be set to the url you are pointing to your node, excluding any protocol prefix. For example, use node-ar.io and not https://node-ar.io. If you are using a subdomain to access your node and do not set this value, the node will not understand incoming requests.\n      * AR_IO_WALLET is optional, and sets the wallet you want associated with your Gateway. An associated wallet is required to join the AR.IO network.\n      * OBSERVER_WALLET is the public address of the wallet used to sign Observer transactions. This is required for Observer to run, but may be omitted if you are running a gateway outside of the AR.IO network and do not plan to run Observer. You will need to supply the keyfile to this wallet in the next step.\n    \n    Advanced configuration options can be found at docs.ar.io\n    \n    * Save the file with the name ".env" and make sure to select "All Files" as the file type. This helps to ensure the file saves as ".env" and not ".env.txt"\n    \n    Note: The .env file should be saved inside the same directory where you cloned the repository (e.g., ar-io-node).\n\n\n# Supply Your Observer Wallet Keyfile:\n\nIf you are running Observer, you need to provide a wallet keyfile in order to sign report upload transactions. The keyfile must be saved in the wallets directory in the root of the repository. Name the file <Observer-Wallet-Address>.json, replacing "<Observer-Wallet-Address>" with the public address of the wallet. This should match your OBSERVER_WALLET environmental variable.\n\nLearn more about creating Arweave wallets and obtaining keyfiles here\n\n\n# Start the Docker Containers\n\n 1. Start the Docker container:\n    \n    * Open the command prompt:\n      \n      * Press Windows Key + R.\n      * Type cmd and press Enter.\n    \n    * Navigate to the directory where you cloned the repository (e.g., ar-io-node):\n      \n      * Use the cd command to change directories. For example, if the repository is located in the Documents directory, you would enter:\n        \n        cd Documents\\ar-io-node\n        \n      \n      * If the directory path contains spaces, enclose it in double quotation marks. For example:\n        \n        cd "C:\\My Documents\\ar-io-node"\n        \n      \n      * Use the dir command to list the contents of the current directory and verify that you\'re in the correct location:\n        \n        dir\n        \n    \n    * Once you are in the correct directory, run the following command to start the Docker container:\n      \n      docker compose up -d\n      \n      \n      * Explanation of flags:\n        \n        * up: Start the Docker containers.\n        * -d: Run the containers as background processes (detached mode).\n        \n        NOTE: Effective with Release #3, it is no longer required to include the --build flag when starting your gateway. Docker will automatically build using the image specified in the docker-commpose.yaml file.\n        \n        The gateway can be shut down using the command:\n        \n        docker compose down\n        \n    \n    * If prompted by the firewall, allow access for Docker when requested.\n\n\n# Set Up Router Port Forwarding\n\nTo expose your node to the internet and use a custom domain, follow these steps:\n\n 1. Obtain a Domain Name:\n    \n    * Choose a domain registrar (e.g., Namecheap) and purchase a domain name.\n\n 2. Point the Domain at Your Home Network:\n    \n    * In your browser, go to https://www.whatsmyip.org/ to display your public ip address. It can be found at the top of the screen. Note this number down.\n    * Access your domain registrar\'s settings (e.g., Namecheap\'s cPanel).\n    * Navigate to the DNS settings for your domain. In cPanel this is under the "Zone Editor" tab.\n    * Create an A record with your registrar for your domain and wildcard subdomains, using your public IP address. For example, if your domain is "ar.io," create a record for "ar.io" and "*.ar.io."\n      * Instructions may vary depending on the domain registrar and cPanel. Consult your registrar\'s documentation or support for detailed steps.\n\n 3. Obtain the Local IP Address of Your Machine:\n    \n    * Open the command prompt:\n      * Press Windows Key + R.\n      * Type cmd and press Enter.\n    * Run the following command:\n      \n      ipconfig\n      \n    \n    * Look for the network adapter that is currently connected to your network (e.g., Ethernet or Wi-Fi).\n    * Note down the IPv4 Address associated with the network adapter. It should be in the format of 192.168.X.X or 10.X.X.X.\n    * This IP address will be used for port forwarding.\n\n 4. Set Up Router Port Forwarding:\n    \n    * Access your home router settings:\n      * Open a web browser.\n      * Enter your router\'s IP address in the address bar (e.g., 192.168.0.1).\n      * If you\'re unsure of your router\'s IP address, consult your router\'s documentation or contact your Internet Service Provider (ISP).\n    * Navigate to the port forwarding settings in your router configuration.\n      * The exact steps may vary depending on your router model. Consult your router\'s documentation or support for detailed steps.\n    * Set up port forwarding rules to forward incoming traffic on ports 80 and 443 to the local IP address of your machine where the node is installed.\n      * Configure the ports to point to the local IP address noted in the previous step.\n      * Save the settings.\n\n\n# Install and Configure NGINX Docker\n\n 1. Clone the NGINX Docker repository:\n    \n    * Open the command prompt:\n      * Press Windows Key + R.\n      * Type cmd and press Enter.\n    * Navigate to the directory where you want to clone the repository (This should not be done inside the directory for the node):\n      * Use the cd command to change directories. For example, to navigate to the Documents directory:\n        \n        cd Documents\n        \n    \n    * Run the following command:\n      \n      git clone -b main https://github.com/bobinstein/dockerized-nginx\n      \n    \n    Note: This NGINX container was designed to easily automate many of the more technical aspects of setting up NGNIX and obtaining an ssl certificate so your node can be accessed with https. However, wildcard domain certifications cannot be universally automated due to significant security concerns. Be sure to follow the instructions in this project for obtaining wildcard domain certificates in order for your node to function properly.\n\n 2. Follow the instructions provided in the repository for setting up NGINX Docker.\n\nCongratulations! Your AR.IO node is now running and connected to the internet. Test it by entering https://<your-domain>/3lyxgbgEvqNSvJrTX2J7CfRychUD5KClFhhVLyTPNCQ in your browser.\n\nNote: If you encounter any issues during the installation process, please seek assistance from the AR.IO community.',normalizedContent:'# windows installation instructions\n\n\n# overview\n\nthis guide provides step-by-step instructions for setting up the ar.io node on a windows computer. it covers installing necessary software, cloning the repository, creating an environment file, starting the docker container, setting up networking, and installing and configuring nginx docker. no prior coding experience is required.\n\n\n# prerequisites\n\nbefore starting the installation process, ensure you have the following:\n\n * a windows computer\n * administrative privileges on the computer\n\n\n# install required packages\n\n 1. install docker:\n    \n    * download docker desktop for windows from here.\n    * run the installer and follow the prompts.\n    * during installation, make sure to select the option to use wsl (windows subsystem for linux) rather than hyper-v.\n    * restart your pc.\n    * update windows subsystem for linux (wsl):\n      * open the command prompt as an administrator:\n        * press windows key + r.\n        * type cmd and press enter.\n        * right-click on the "command prompt" application in the search results.\n        * select "run as administrator" from the context menu.\n      * run the following commands:\n        \n        wsl --update\n        wsl --shutdown\n        \n    \n    * restart docker desktop.\n\n 2. install git:\n    \n    * download git for windows from here.\n    * run the installer and use the default settings.\n\n\n# clone the repository\n\n 1. clone the main repository:\n    * open the command prompt:\n      * press windows key + r.\n      * type cmd and press enter.\n    * navigate to the directory where you want to clone the repository:\n      * use the cd command to change directories. for example, to navigate to the documents directory:\n        \n        cd documents\n        \n        \n        * more detailed instructions on navigating with the cd command can be found here\n        * note: your database of arweave transaction headers will be created in the project directory, not docker. so, if you are using an external hard drive to turn an old machine into a node, install the node directly to that external drive.\n    * run the following command:\n      \n      git clone -b main https://github.com/ar-io/ar-io-node\n      \n\n\n# create the environment file\n\n 1. create an environmental variables file:\n    \n    * open a text editor (e.g., notepad):\n      \n      * press windows key and search for "notepad".\n      * click on "notepad" to open the text editor.\n    \n    * paste the following content into the new file, replacing <your-domain> with the domain address you are using to access the node, and <your-public-wallet-address> with the public address of your arweave wallet:\n      \n      graphql_host=arweave.net\n      graphql_port=443\n      start_height=0\n      run_observer=true\n      arns_root_host=<your-domain>\n      ar_io_wallet=<your-public-wallet-address>\n      observer_wallet=<hot-wallet-public-address>\n      \n      \n      * the graphql values set the proxy for gql queries to arweave.net, you may use any available gateway that supports gql queries. if omitted, your node can support gql queries on locally indexed transactions, but only l1 transactions are indexed by default.\n      * start_height is an optional line. it sets the block number where your node will start downloading and indexing transactions headers. omitting this line will begin indexing at block 0.\n      * run_observer turns on the observer to generate network compliance reports. this is required for full participation in the ar.io network. set to false to run your gateway without observer.\n      * arns_root_host sets the starting point for resolving arns names, which are accessed as a subdomain of a gateway. it should be set to the url you are pointing to your node, excluding any protocol prefix. for example, use node-ar.io and not https://node-ar.io. if you are using a subdomain to access your node and do not set this value, the node will not understand incoming requests.\n      * ar_io_wallet is optional, and sets the wallet you want associated with your gateway. an associated wallet is required to join the ar.io network.\n      * observer_wallet is the public address of the wallet used to sign observer transactions. this is required for observer to run, but may be omitted if you are running a gateway outside of the ar.io network and do not plan to run observer. you will need to supply the keyfile to this wallet in the next step.\n    \n    advanced configuration options can be found at docs.ar.io\n    \n    * save the file with the name ".env" and make sure to select "all files" as the file type. this helps to ensure the file saves as ".env" and not ".env.txt"\n    \n    note: the .env file should be saved inside the same directory where you cloned the repository (e.g., ar-io-node).\n\n\n# supply your observer wallet keyfile:\n\nif you are running observer, you need to provide a wallet keyfile in order to sign report upload transactions. the keyfile must be saved in the wallets directory in the root of the repository. name the file <observer-wallet-address>.json, replacing "<observer-wallet-address>" with the public address of the wallet. this should match your observer_wallet environmental variable.\n\nlearn more about creating arweave wallets and obtaining keyfiles here\n\n\n# start the docker containers\n\n 1. start the docker container:\n    \n    * open the command prompt:\n      \n      * press windows key + r.\n      * type cmd and press enter.\n    \n    * navigate to the directory where you cloned the repository (e.g., ar-io-node):\n      \n      * use the cd command to change directories. for example, if the repository is located in the documents directory, you would enter:\n        \n        cd documents\\ar-io-node\n        \n      \n      * if the directory path contains spaces, enclose it in double quotation marks. for example:\n        \n        cd "c:\\my documents\\ar-io-node"\n        \n      \n      * use the dir command to list the contents of the current directory and verify that you\'re in the correct location:\n        \n        dir\n        \n    \n    * once you are in the correct directory, run the following command to start the docker container:\n      \n      docker compose up -d\n      \n      \n      * explanation of flags:\n        \n        * up: start the docker containers.\n        * -d: run the containers as background processes (detached mode).\n        \n        note: effective with release #3, it is no longer required to include the --build flag when starting your gateway. docker will automatically build using the image specified in the docker-commpose.yaml file.\n        \n        the gateway can be shut down using the command:\n        \n        docker compose down\n        \n    \n    * if prompted by the firewall, allow access for docker when requested.\n\n\n# set up router port forwarding\n\nto expose your node to the internet and use a custom domain, follow these steps:\n\n 1. obtain a domain name:\n    \n    * choose a domain registrar (e.g., namecheap) and purchase a domain name.\n\n 2. point the domain at your home network:\n    \n    * in your browser, go to https://www.whatsmyip.org/ to display your public ip address. it can be found at the top of the screen. note this number down.\n    * access your domain registrar\'s settings (e.g., namecheap\'s cpanel).\n    * navigate to the dns settings for your domain. in cpanel this is under the "zone editor" tab.\n    * create an a record with your registrar for your domain and wildcard subdomains, using your public ip address. for example, if your domain is "ar.io," create a record for "ar.io" and "*.ar.io."\n      * instructions may vary depending on the domain registrar and cpanel. consult your registrar\'s documentation or support for detailed steps.\n\n 3. obtain the local ip address of your machine:\n    \n    * open the command prompt:\n      * press windows key + r.\n      * type cmd and press enter.\n    * run the following command:\n      \n      ipconfig\n      \n    \n    * look for the network adapter that is currently connected to your network (e.g., ethernet or wi-fi).\n    * note down the ipv4 address associated with the network adapter. it should be in the format of 192.168.x.x or 10.x.x.x.\n    * this ip address will be used for port forwarding.\n\n 4. set up router port forwarding:\n    \n    * access your home router settings:\n      * open a web browser.\n      * enter your router\'s ip address in the address bar (e.g., 192.168.0.1).\n      * if you\'re unsure of your router\'s ip address, consult your router\'s documentation or contact your internet service provider (isp).\n    * navigate to the port forwarding settings in your router configuration.\n      * the exact steps may vary depending on your router model. consult your router\'s documentation or support for detailed steps.\n    * set up port forwarding rules to forward incoming traffic on ports 80 and 443 to the local ip address of your machine where the node is installed.\n      * configure the ports to point to the local ip address noted in the previous step.\n      * save the settings.\n\n\n# install and configure nginx docker\n\n 1. clone the nginx docker repository:\n    \n    * open the command prompt:\n      * press windows key + r.\n      * type cmd and press enter.\n    * navigate to the directory where you want to clone the repository (this should not be done inside the directory for the node):\n      * use the cd command to change directories. for example, to navigate to the documents directory:\n        \n        cd documents\n        \n    \n    * run the following command:\n      \n      git clone -b main https://github.com/bobinstein/dockerized-nginx\n      \n    \n    note: this nginx container was designed to easily automate many of the more technical aspects of setting up ngnix and obtaining an ssl certificate so your node can be accessed with https. however, wildcard domain certifications cannot be universally automated due to significant security concerns. be sure to follow the instructions in this project for obtaining wildcard domain certificates in order for your node to function properly.\n\n 2. follow the instructions provided in the repository for setting up nginx docker.\n\ncongratulations! your ar.io node is now running and connected to the internet. test it by entering https://<your-domain>/3lyxgbgevqnsvjrtx2j7cfrychud5kclfhhvlytpncq in your browser.\n\nnote: if you encounter any issues during the installation process, please seek assistance from the ar.io community.',charsets:{}},{title:"Glossary",frontmatter:{prev:!1,next:!1},regularPath:"/glossary.html",relativePath:"glossary.md",key:"v-37cd1c0a",path:"/glossary.html",headersStr:null,content:"# Glossary\n\nMany novel terms and acronyms are used by the Arweave ecosystem as well as some new ones introduced by AR.IO. The list below is intended to serve as a non-exhaustive reference of those terms:\n\n * aoComputer (AO): The aoComputer is the actor oriented machine that emerges from the network of nodes that adhere to its core data protocol, running on the Arweave network. It is a single, unified computing environment, hosted on a heterogenous set of nodes in a distributed network. AO is designed to offer an environment in which an arbitrary number of parallel processes can be resident, coordinating through an open message passing layer. This message passing standard connects the machine's independently operating processes together into a 'web' -- in the same way that websites operate on independent servers but are conjoined into a cohesive, unified experience via hyperlinks.\n\n * Arweave Name System (ArNS): a decentralized and censorship-resistant naming system enabled by AR.IO gateways which connects friendly names to permaweb applications, pages, and data.\n\n * Arweave Name Token (ANT), “Name Token”: an aoComputer based token, that is connected to each registered ArNS Name. Each ANT gives the owner the ability to update the subdomains and Arweave transaction IDs used by the registered name as well as transfer ownership and other functions.\n\n * Arweave Network Standards (ANS): Drafts and finalized standards for data formats, tag formats, data protocols, custom gateway features and anything that is built on top the Arweave Network. Specific standards are denoted by an associated number, e.g., ANS-###.\n\n * Base Layer Transaction: refers to one of up to 1,000 transactions that make up a single Arweave block. A base layer transaction may contain bundled data items.\n\n * Bundle, bundling: an Arweave concept introduced in ANS-104 that allows for a way of writing multiple independent data transactions into one base layer transaction. Bundled transactions contain multiple independent transactions, called data items, wrapped into one larger transaction. This offers two major network benefits:\n   \n   * A scaling solution for increasing the throughput of uploads to the Arweave network,\n   \n   * Allows delegation of payment for an upload to a third party, while maintaining the identity and signature of the person who created the upload, without them needing to have a wallet with funds.\n\n * Bundled Data Item (BDI): A data item / transaction nested within an ANS-104 bundled transaction.\n\n * Bundler: a third-party service and gateway feature that bundles data files on a user’s behalf.\n\n * Chunk: A chunk is a unit of data that is stored on the Arweave network. It represents a piece of a larger file that has been split into smaller, manageable segments for efficient storage and retrieval.\n\n * Decentralized, decentralization, etc: a nonbinary, many axis scale enabling a system or platform to be: permissionless, trustless, verifiable, transparent, open-source, composable, resilient, and censorship resistant. Ultimately, something that is decentralized is not prone to single points of failure or influence.\n\n * Epoch: a specific duration (e.g., one block-week) during which network activities and evaluations are conducted. It serves as a key time frame for processes such as observation duties, performance assessments, and reward distributions within the network's protocols.\n\n * Gateway: a node operating on the Arweave network that provides services for reading from, writing to, and indexing the data stored on the permaweb. Sometimes referred to as “permaweb nodes”.\n\n * Gateway Address Registry (GAR): a decentralized directory maintained in the AR.IO smart contract. It serves as the authoritative list of all registered gateways on the AR.IO Network. The registry provides detailed metadata about each gateway to facilitate discovery, health monitoring, and data sharing among permaweb apps and users. The GAR is designed to be easily queryable, sortable, and filterable by end users and clients, allowing for tailored selections based on various criteria to meet specific use cases.\n\n * Indexing: The act of organizing transaction data tags into queryable databases.\n\n * Layer 2 Infrastructure: Layer 2 refers to the technology / infrastructure stack built “above” a base layer. In this use, the AR.IO Network would be considered Layer 2 infrastructure to the base Arweave protocol.\n\n * Manifest (aka Path Manifest, Arweave Manifest): special “aggregate” files uploaded to Arweave that map user-definable sub-paths with other Arweave transaction IDs. This allows users to create logical groups of content, for example a directory of related files, or the files and assets that make up a web page or application. Instead of having to manually collate these assets, manifests group them together so that an entire website or app can be launched from a single manifest file. Gateways can interpret this structure, so that users can then reference individual transactions by their file name and/or path.\n\n * Mempool: short for \"memory pool,\" is a component of Arweave mining nodes that temporarily stores valid transactions that have been broadcasted to the network but have not yet been added to a block.\n\n * Miner (aka Arweave Node): a node operating on the Arweave network responsible for data storage and recall.\n\n * Observer: a gateway selected to evaluate the performance of peer gateways in resolving ArNS names. Observers assess and report on the operational efficacy of other gateways.\n\n * Period: refers to a predefined time span (e.g., a block-day) that serves as a cycle for network activities such as dynamic pricing. It is a fundamental unit of time for operational and protocol processes within the network.\n\n * Permaweb: The permaweb is the permanent and decentralized web of files and applications built on top of Arweave.\n\n * Protocol Balance: The primary sink and source of IO tokens circulating through the AR.IO Network. This balance is akin to a central vault or wallet programmatically encoded into the network’s smart contract from which ArNS revenue is accumulated and incentive rewards are distributed.\n\n * Protocol Rewards: IO Token incentive rewards distributed by the protocol to the network’s eligible users and gateway operators.\n\n * Seeding: Refers to the act of propagating new data throughout the network. Miner nodes seed Arweave base layer transaction data to other miners, while gateways ensure that the transactions they receive reach the Arweave nodes. Both gateways and Arweave nodes seed base layer transactions and data chunks.\n\n * Staking (of tokens): Refers to the process of locking IO tokens into a protocol-facilitated vault, temporarily removing them from circulation until unlocked. This action represents an opportunity cost for the gateway operator and serves as a motivator to prioritize the network's collective interests.\n\n * Transaction ID (txID): Every transaction and data file uploaded to Arweave is assigned a unique identifier code known as the Transaction ID. These txID’s can be referenced by users to easily locate and retrieve files.\n\n * Trust-minimization: Relates to enacting network security by minimizing the number of entities and the degree to which they must be trusted to achieve reliable network interactions. A network with trust-minimizing mechanisms means that it has reduced exposure to undesirable third-party actions and built-in incentives to reward good behavior while punishing bad behavior.\n\n * Vault: Token vaults are protocol level mechanisms used to contain staked tokens over time. Each vault contains a starting block height, ending block height (if applicable), along with a balance of tokens.",normalizedContent:"# glossary\n\nmany novel terms and acronyms are used by the arweave ecosystem as well as some new ones introduced by ar.io. the list below is intended to serve as a non-exhaustive reference of those terms:\n\n * aocomputer (ao): the aocomputer is the actor oriented machine that emerges from the network of nodes that adhere to its core data protocol, running on the arweave network. it is a single, unified computing environment, hosted on a heterogenous set of nodes in a distributed network. ao is designed to offer an environment in which an arbitrary number of parallel processes can be resident, coordinating through an open message passing layer. this message passing standard connects the machine's independently operating processes together into a 'web' -- in the same way that websites operate on independent servers but are conjoined into a cohesive, unified experience via hyperlinks.\n\n * arweave name system (arns): a decentralized and censorship-resistant naming system enabled by ar.io gateways which connects friendly names to permaweb applications, pages, and data.\n\n * arweave name token (ant), “name token”: an aocomputer based token, that is connected to each registered arns name. each ant gives the owner the ability to update the subdomains and arweave transaction ids used by the registered name as well as transfer ownership and other functions.\n\n * arweave network standards (ans): drafts and finalized standards for data formats, tag formats, data protocols, custom gateway features and anything that is built on top the arweave network. specific standards are denoted by an associated number, e.g., ans-###.\n\n * base layer transaction: refers to one of up to 1,000 transactions that make up a single arweave block. a base layer transaction may contain bundled data items.\n\n * bundle, bundling: an arweave concept introduced in ans-104 that allows for a way of writing multiple independent data transactions into one base layer transaction. bundled transactions contain multiple independent transactions, called data items, wrapped into one larger transaction. this offers two major network benefits:\n   \n   * a scaling solution for increasing the throughput of uploads to the arweave network,\n   \n   * allows delegation of payment for an upload to a third party, while maintaining the identity and signature of the person who created the upload, without them needing to have a wallet with funds.\n\n * bundled data item (bdi): a data item / transaction nested within an ans-104 bundled transaction.\n\n * bundler: a third-party service and gateway feature that bundles data files on a user’s behalf.\n\n * chunk: a chunk is a unit of data that is stored on the arweave network. it represents a piece of a larger file that has been split into smaller, manageable segments for efficient storage and retrieval.\n\n * decentralized, decentralization, etc: a nonbinary, many axis scale enabling a system or platform to be: permissionless, trustless, verifiable, transparent, open-source, composable, resilient, and censorship resistant. ultimately, something that is decentralized is not prone to single points of failure or influence.\n\n * epoch: a specific duration (e.g., one block-week) during which network activities and evaluations are conducted. it serves as a key time frame for processes such as observation duties, performance assessments, and reward distributions within the network's protocols.\n\n * gateway: a node operating on the arweave network that provides services for reading from, writing to, and indexing the data stored on the permaweb. sometimes referred to as “permaweb nodes”.\n\n * gateway address registry (gar): a decentralized directory maintained in the ar.io smart contract. it serves as the authoritative list of all registered gateways on the ar.io network. the registry provides detailed metadata about each gateway to facilitate discovery, health monitoring, and data sharing among permaweb apps and users. the gar is designed to be easily queryable, sortable, and filterable by end users and clients, allowing for tailored selections based on various criteria to meet specific use cases.\n\n * indexing: the act of organizing transaction data tags into queryable databases.\n\n * layer 2 infrastructure: layer 2 refers to the technology / infrastructure stack built “above” a base layer. in this use, the ar.io network would be considered layer 2 infrastructure to the base arweave protocol.\n\n * manifest (aka path manifest, arweave manifest): special “aggregate” files uploaded to arweave that map user-definable sub-paths with other arweave transaction ids. this allows users to create logical groups of content, for example a directory of related files, or the files and assets that make up a web page or application. instead of having to manually collate these assets, manifests group them together so that an entire website or app can be launched from a single manifest file. gateways can interpret this structure, so that users can then reference individual transactions by their file name and/or path.\n\n * mempool: short for \"memory pool,\" is a component of arweave mining nodes that temporarily stores valid transactions that have been broadcasted to the network but have not yet been added to a block.\n\n * miner (aka arweave node): a node operating on the arweave network responsible for data storage and recall.\n\n * observer: a gateway selected to evaluate the performance of peer gateways in resolving arns names. observers assess and report on the operational efficacy of other gateways.\n\n * period: refers to a predefined time span (e.g., a block-day) that serves as a cycle for network activities such as dynamic pricing. it is a fundamental unit of time for operational and protocol processes within the network.\n\n * permaweb: the permaweb is the permanent and decentralized web of files and applications built on top of arweave.\n\n * protocol balance: the primary sink and source of io tokens circulating through the ar.io network. this balance is akin to a central vault or wallet programmatically encoded into the network’s smart contract from which arns revenue is accumulated and incentive rewards are distributed.\n\n * protocol rewards: io token incentive rewards distributed by the protocol to the network’s eligible users and gateway operators.\n\n * seeding: refers to the act of propagating new data throughout the network. miner nodes seed arweave base layer transaction data to other miners, while gateways ensure that the transactions they receive reach the arweave nodes. both gateways and arweave nodes seed base layer transactions and data chunks.\n\n * staking (of tokens): refers to the process of locking io tokens into a protocol-facilitated vault, temporarily removing them from circulation until unlocked. this action represents an opportunity cost for the gateway operator and serves as a motivator to prioritize the network's collective interests.\n\n * transaction id (txid): every transaction and data file uploaded to arweave is assigned a unique identifier code known as the transaction id. these txid’s can be referenced by users to easily locate and retrieve files.\n\n * trust-minimization: relates to enacting network security by minimizing the number of entities and the degree to which they must be trusted to achieve reliable network interactions. a network with trust-minimizing mechanisms means that it has reduced exposure to undesirable third-party actions and built-in incentives to reward good behavior while punishing bad behavior.\n\n * vault: token vaults are protocol level mechanisms used to contain staked tokens over time. each vault contains a starting block height, ending block height (if applicable), along with a balance of tokens.",charsets:{}},{title:"Managing ArNS Assets",frontmatter:{next:!1},regularPath:"/guides/arns/managing.html",relativePath:"guides/arns/managing.md",key:"v-657f8880",path:"/guides/arns/managing.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:27},{level:2,title:"Names",slug:"names",normalizedTitle:"names",charIndex:552},{level:2,title:"ANTs",slug:"ants",normalizedTitle:"ants",charIndex:839}],headersStr:"Overview Names ANTs",content:'# Managing ArNS Assets\n\n\n# Overview\n\nFrom the Manage Assets page of arns.app, you can view details about your registered names, assign new Target IDs for your names to resolve to, or register new undernames for your ArNS names.\n\nAccess the Manage Assets page by connecting your Arweave wallet, and clicking on the account button displaying your wallet address (the connect button if you are not connected), then selecting "Manage Assets" from the menu.\n\nYour browser does not support the video tag.\n\nThe Manage Assets page features two important tabs. Names and ANTS.\n\n\n# Names\n\nThe Names tab displays all of the ArNS names registered to the currently connected wallet. Each name has its own "details" button which allows you to view details about the name, extend the lease period, or increase the available undernames for that name.\n\n\n# ANTs\n\nThe ANTs tab displays each ANT owned by the connected wallet (except for advanced use cases, each ArNS name will have its own ANT). You can view and create new undernames using the "Undernames" button, or access advanced management options by clicking on the "manage" icon (shaped like a gear).\n\nThe Advanced manage page allows you to transfer ownership, add or remove controllers (other wallets who are able to manage an ANT) or set/modify a Target ID for a name to resolve to.',normalizedContent:'# managing arns assets\n\n\n# overview\n\nfrom the manage assets page of arns.app, you can view details about your registered names, assign new target ids for your names to resolve to, or register new undernames for your arns names.\n\naccess the manage assets page by connecting your arweave wallet, and clicking on the account button displaying your wallet address (the connect button if you are not connected), then selecting "manage assets" from the menu.\n\nyour browser does not support the video tag.\n\nthe manage assets page features two important tabs. names and ants.\n\n\n# names\n\nthe names tab displays all of the arns names registered to the currently connected wallet. each name has its own "details" button which allows you to view details about the name, extend the lease period, or increase the available undernames for that name.\n\n\n# ants\n\nthe ants tab displays each ant owned by the connected wallet (except for advanced use cases, each arns name will have its own ant). you can view and create new undernames using the "undernames" button, or access advanced management options by clicking on the "manage" icon (shaped like a gear).\n\nthe advanced manage page allows you to transfer ownership, add or remove controllers (other wallets who are able to manage an ant) or set/modify a target id for a name to resolve to.',charsets:{}},{title:"Gateway Architecture",frontmatter:{permalink:"/gateways/"},regularPath:"/gateways/gateways.html",relativePath:"gateways/gateways.md",key:"v-d8e9780c",path:"/gateways/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:27},{level:2,title:"AR.IO Gateway Benefits",slug:"ar-io-gateway-benefits",normalizedTitle:"ar.io gateway benefits",charIndex:1793},{level:2,title:"Gateway Modularity",slug:"gateway-modularity",normalizedTitle:"gateway modularity",charIndex:2572},{level:2,title:"ARNS Indexing and Routing",slug:"arns-indexing-and-routing",normalizedTitle:"arns indexing and routing",charIndex:3764},{level:2,title:"Content Moderation",slug:"content-moderation",normalizedTitle:"content moderation",charIndex:4462}],headersStr:"Overview AR.IO Gateway Benefits Gateway Modularity ARNS Indexing and Routing Content Moderation",content:"# Gateway Architecture\n\n\n# Overview\n\nA gateway’s primary role in the Arweave ecosystem is to act as a bridge between the Arweave network and the outside world. This means that a gateway's main task is to make it easier for users to interact with the Arweave network by simplifying the technical processes of writing, reading, and discovering data on the blockweave in a trust-minimized fashion.\n\nThe core functions of a general Arweave gateway are broken down into the following areas.\n\nWriting data involves:\n\n * Proxying Layer 1 transaction headers to one or more healthy and active Arweave nodes (miners) to facilitate inclusion in the mempools of as many nodes as possible.\n\n * Proxying chunks for Layer 1 Arweave transactions to Arweave nodes to help facilitate storage and replication of the chunks on the blockweave.\n\n * Receiving and bundling so-called Layer 2 data items (e.g., ANS-104 spec) as Layer 1 transactions.\n\nReading involves retrieving:\n\n * Transaction headers for a Layer 1 Arweave transaction.\n\n * Individual data chunks for a Layer 1 Arweave transaction.\n\n * Blocks from the blockweave.\n\n * Storage pricing rates for data from the Arweave node network.\n\n * Contiguous streams of chunks representing an entire Layer 1 transaction.\n\n * Layer 2 bundled data items (e.g., ANS-104).\n\n * Wallet information (e.g., token balance).\n\nDiscovering data involves:\n\n * Facilitating efficient, structured queries for Layer 1 and Layer 2 transaction and wallet data by:\n   \n   * examining incoming streams of data (i.e., directly ingested transactions and data items, blocks emitted by the chain, etc.).\n   \n   * managing index data in a database or analogous data store.\n\n * Parsing and executing user queries.\n\n * Facilitating friendly-path routing via Arweave manifest indexing.\n\n\n# AR.IO Gateway Benefits\n\nAR.IO gateways provide many new benefits and capabilities beyond general Arweave gateways:\n\n * Providing the modularity and configurability necessary for operating extensible gateways that can be deployed at small or large scales to meet the needs of specific applications, use cases, communities, or business models.\n\n * Providing pluggable means for consuming telemetry data for internal and external monitoring and alerting.\n\n * Facilitating friendly-subdomain-name routing to Arweave transactions via a direct integration with the Arweave Name System (ArNS).\n\n * Facilitating configurable content moderation policies.\n\n * Providing connectivity to a decentralized network of other AR.IO gateways, enabling data sharing and other shared workloads.\n\n\n# Gateway Modularity\n\nA design principle of AR.IO gateways is that their core components should be interchangeable with compatible implementations.\n\nThe core services in the gateway are written in Typescript, with flexible interfaces to the various subsystems and databases. This allows operators to customize their gateway to meet their specific requirements. Gateway services can be turned on or off depending on the operator's needs. For example, an operator might choose to have their gateway serve data, but not actively index Layer 2 bundled data.\n\nThis flexibility also allows operators to utilize the technologies that are appropriate for the scale and environments in which they operate.\n\nFor example, small scale operators might want to use low-overhead relational databases to power their indexing while larger scale operators might opt to use cloud-native, horizontally scalable databases. Analogous examples for storage and caching exist as well.\n\nGATEWAY TECH STACK OPTIONS\nTOPOLOGY   CHAIN INDEX   BUNDLE INDEX   DATA INDEX   DATA STORE\nSmall      SQLite        SQLite         SQLite       Local File System\nLarge      PostgreSQL    Cassandra      Cassandra    S3 Compatible\n\n\n# ARNS Indexing and Routing\n\nThe Arweave Name System’s (ArNS) state is managed by the IO token’s smart contract. AR.IO gateways shall perform the following minimum functions relative to ArNS:\n\n * Actively track state changes in the contract.\n\n * Maintain up-to-date indexes for routing configurations based on the state of the IO contract as well as the states of the Arweave Name Token (ANT) contracts to which each name is affiliated.\n\n * Manage the expiration of stale records.\n\n * Facilitate ArNS routing based on the subdomains specified on incoming requests where appropriate.\n\n * Provide a custom HTTP response header for ArNS requests indicating the corresponding Arweave transaction ID.\n\n\n# Content Moderation\n\nThe AR.IO Network will adopt Arweave’s voluntary content moderation model whereby every participant of the network has the autonomy to decide which content they want to (or can legally) store, serve, and see. Each gateway operating on the network has the right and ability to blocklist any content (or address) that is deemed in violation of its content policies or non-compliant with local regulations.",normalizedContent:"# gateway architecture\n\n\n# overview\n\na gateway’s primary role in the arweave ecosystem is to act as a bridge between the arweave network and the outside world. this means that a gateway's main task is to make it easier for users to interact with the arweave network by simplifying the technical processes of writing, reading, and discovering data on the blockweave in a trust-minimized fashion.\n\nthe core functions of a general arweave gateway are broken down into the following areas.\n\nwriting data involves:\n\n * proxying layer 1 transaction headers to one or more healthy and active arweave nodes (miners) to facilitate inclusion in the mempools of as many nodes as possible.\n\n * proxying chunks for layer 1 arweave transactions to arweave nodes to help facilitate storage and replication of the chunks on the blockweave.\n\n * receiving and bundling so-called layer 2 data items (e.g., ans-104 spec) as layer 1 transactions.\n\nreading involves retrieving:\n\n * transaction headers for a layer 1 arweave transaction.\n\n * individual data chunks for a layer 1 arweave transaction.\n\n * blocks from the blockweave.\n\n * storage pricing rates for data from the arweave node network.\n\n * contiguous streams of chunks representing an entire layer 1 transaction.\n\n * layer 2 bundled data items (e.g., ans-104).\n\n * wallet information (e.g., token balance).\n\ndiscovering data involves:\n\n * facilitating efficient, structured queries for layer 1 and layer 2 transaction and wallet data by:\n   \n   * examining incoming streams of data (i.e., directly ingested transactions and data items, blocks emitted by the chain, etc.).\n   \n   * managing index data in a database or analogous data store.\n\n * parsing and executing user queries.\n\n * facilitating friendly-path routing via arweave manifest indexing.\n\n\n# ar.io gateway benefits\n\nar.io gateways provide many new benefits and capabilities beyond general arweave gateways:\n\n * providing the modularity and configurability necessary for operating extensible gateways that can be deployed at small or large scales to meet the needs of specific applications, use cases, communities, or business models.\n\n * providing pluggable means for consuming telemetry data for internal and external monitoring and alerting.\n\n * facilitating friendly-subdomain-name routing to arweave transactions via a direct integration with the arweave name system (arns).\n\n * facilitating configurable content moderation policies.\n\n * providing connectivity to a decentralized network of other ar.io gateways, enabling data sharing and other shared workloads.\n\n\n# gateway modularity\n\na design principle of ar.io gateways is that their core components should be interchangeable with compatible implementations.\n\nthe core services in the gateway are written in typescript, with flexible interfaces to the various subsystems and databases. this allows operators to customize their gateway to meet their specific requirements. gateway services can be turned on or off depending on the operator's needs. for example, an operator might choose to have their gateway serve data, but not actively index layer 2 bundled data.\n\nthis flexibility also allows operators to utilize the technologies that are appropriate for the scale and environments in which they operate.\n\nfor example, small scale operators might want to use low-overhead relational databases to power their indexing while larger scale operators might opt to use cloud-native, horizontally scalable databases. analogous examples for storage and caching exist as well.\n\ngateway tech stack options\ntopology   chain index   bundle index   data index   data store\nsmall      sqlite        sqlite         sqlite       local file system\nlarge      postgresql    cassandra      cassandra    s3 compatible\n\n\n# arns indexing and routing\n\nthe arweave name system’s (arns) state is managed by the io token’s smart contract. ar.io gateways shall perform the following minimum functions relative to arns:\n\n * actively track state changes in the contract.\n\n * maintain up-to-date indexes for routing configurations based on the state of the io contract as well as the states of the arweave name token (ant) contracts to which each name is affiliated.\n\n * manage the expiration of stale records.\n\n * facilitate arns routing based on the subdomains specified on incoming requests where appropriate.\n\n * provide a custom http response header for arns requests indicating the corresponding arweave transaction id.\n\n\n# content moderation\n\nthe ar.io network will adopt arweave’s voluntary content moderation model whereby every participant of the network has the autonomy to decide which content they want to (or can legally) store, serve, and see. each gateway operating on the network has the right and ability to blocklist any content (or address) that is deemed in violation of its content policies or non-compliant with local regulations.",charsets:{}},{title:"Arweave Name System (ArNS)",frontmatter:{prev:!1},regularPath:"/guides/arns/overview.html",relativePath:"guides/arns/overview.md",key:"v-bf3acddc",path:"/guides/arns/overview.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:33}],headersStr:"Overview",content:"# Arweave Name System (ArNS)\n\n\n# Overview\n\nThe Arweave Name System (ArNS) is a decentralized, censorship-resistant naming system on Arweave. It allows data on Arweave to be assigned to friendly domain names. Learn more about ArNS here.\n\nThis guide will walk you through the process of purchasing and managing an ArNS name using arns.app, the official ArNS portal from AR.IO.",normalizedContent:"# arweave name system (arns)\n\n\n# overview\n\nthe arweave name system (arns) is a decentralized, censorship-resistant naming system on arweave. it allows data on arweave to be assigned to friendly domain names. learn more about arns here.\n\nthis guide will walk you through the process of purchasing and managing an arns name using arns.app, the official arns portal from ar.io.",charsets:{}},{title:"Registering an ArNS name",frontmatter:{},regularPath:"/guides/arns/registering.html",relativePath:"guides/arns/registering.md",key:"v-401d6fcc",path:"/guides/arns/registering.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:31},{level:2,title:"Connect Your Wallet",slug:"connect-your-wallet",normalizedTitle:"connect your wallet",charIndex:466},{level:2,title:"Checking Availability",slug:"checking-availability",normalizedTitle:"checking availability",charIndex:763},{level:2,title:"Configure Your Purchase",slug:"configure-your-purchase",normalizedTitle:"configure your purchase",charIndex:1525},{level:2,title:"Confirm Your Purchase",slug:"confirm-your-purchase",normalizedTitle:"confirm your purchase",charIndex:2415},{level:2,title:"Auctions",slug:"auctions",normalizedTitle:"auctions",charIndex:249}],headersStr:"Overview Connect Your Wallet Checking Availability Configure Your Purchase Confirm Your Purchase Auctions",content:'# Registering an ArNS name\n\n\n# Overview\n\nThere are two options when registering an ArNS name. You can purchase the name outright, or lease it for a period of 1 to 5 years. Registrations are further broken down into instant buys, and dutch auctions. Auctions are required for purchases of certain names in a specified character length range. Find more information about when an auction is required, as well as the rules an ArNS name must follow to be valid here.\n\n\n# Connect Your Wallet\n\nIn order to purchase ArNS names, you will need to have a connected Arweave wallet in order to sign and pay for the transaction. Connect your wallet by clicking the "Connect" button in the top right, and following the prompts.\n\nYour browser does not support the video tag.\n\n\n# Checking Availability\n\nThe home page of arns.app features a search box for checking if a specific ArNS name is available for registration. Indicators below the box can help to make sure you are complying with the technical requirements for name validity as you type.\n\nSimply type out the name you would like to register and click on the search icon next to the text box. A check will be performed to let you know if your chosen name is available or already in use.\n\nNOTE: 1 to 4 character names are not available during the testnet.\n\nor\n\nIf a name is unavailable, information about the name\'s registration period and current owner will be displayed. If it is available, a "Register" button will appear, allowing you to move to the next step in registration.\n\n\n# Configure Your Purchase\n\nAfter clicking "Register" on a valid and available name, you will be prompted to connect a wallet using ArConnect if you have not already done so. Support for other wallets will be added in the future.\n\nOnce you are connected, you will be shown a page to configure your purchase. You will be able to select if you want to lease or buy the name, and the length of the lease. A notice will appear if your purchase requires an auction.\n\nYou can also use this page to assign the name to an existing Arweave Name Token (ANT), or set an Arweave Transaction ID (Target ID) for the name to resolve to. You will be able to set or change the Target ID after your purchase from the asset management page.\n\nTowards the bottom of the page, you can also see the cost of your currently configured purchase in IO tokens, and the AR required to pay for gas for the transaction.\n\n\n# Confirm Your Purchase\n\nThe final page before submitting your purchase shows a summary of your purchase. If everything looks correct, click on the "confirm" button to finalize the transaction. Remain on the page while the transaction processes.\n\n\n\n# Auctions\n\nNo additional steps are necessary to initiate a purchase that requires an auction. However, the name will not immediately become yours. Instead, confirming your purchase will begin the auction.\n\nThe IO cost displayed on the confirmation page will be frozen by the aoComputer contract, and used to finalize the purchase once the the auction drops to the floor price. You, or anyone else, may purchase the name at any time for the current auction price. You can click on the "View Auction" button from your confirmation page, or find your auction in the "Live Auctions" tab at the top of the screen to view the current auction price, and how it will change over time. If someone else purchases the name prior to the auction reaching the floor price, your frozen tokens will be released to you.',normalizedContent:'# registering an arns name\n\n\n# overview\n\nthere are two options when registering an arns name. you can purchase the name outright, or lease it for a period of 1 to 5 years. registrations are further broken down into instant buys, and dutch auctions. auctions are required for purchases of certain names in a specified character length range. find more information about when an auction is required, as well as the rules an arns name must follow to be valid here.\n\n\n# connect your wallet\n\nin order to purchase arns names, you will need to have a connected arweave wallet in order to sign and pay for the transaction. connect your wallet by clicking the "connect" button in the top right, and following the prompts.\n\nyour browser does not support the video tag.\n\n\n# checking availability\n\nthe home page of arns.app features a search box for checking if a specific arns name is available for registration. indicators below the box can help to make sure you are complying with the technical requirements for name validity as you type.\n\nsimply type out the name you would like to register and click on the search icon next to the text box. a check will be performed to let you know if your chosen name is available or already in use.\n\nnote: 1 to 4 character names are not available during the testnet.\n\nor\n\nif a name is unavailable, information about the name\'s registration period and current owner will be displayed. if it is available, a "register" button will appear, allowing you to move to the next step in registration.\n\n\n# configure your purchase\n\nafter clicking "register" on a valid and available name, you will be prompted to connect a wallet using arconnect if you have not already done so. support for other wallets will be added in the future.\n\nonce you are connected, you will be shown a page to configure your purchase. you will be able to select if you want to lease or buy the name, and the length of the lease. a notice will appear if your purchase requires an auction.\n\nyou can also use this page to assign the name to an existing arweave name token (ant), or set an arweave transaction id (target id) for the name to resolve to. you will be able to set or change the target id after your purchase from the asset management page.\n\ntowards the bottom of the page, you can also see the cost of your currently configured purchase in io tokens, and the ar required to pay for gas for the transaction.\n\n\n# confirm your purchase\n\nthe final page before submitting your purchase shows a summary of your purchase. if everything looks correct, click on the "confirm" button to finalize the transaction. remain on the page while the transaction processes.\n\n\n\n# auctions\n\nno additional steps are necessary to initiate a purchase that requires an auction. however, the name will not immediately become yours. instead, confirming your purchase will begin the auction.\n\nthe io cost displayed on the confirmation page will be frozen by the aocomputer contract, and used to finalize the purchase once the the auction drops to the floor price. you, or anyone else, may purchase the name at any time for the current auction price. you can click on the "view auction" button from your confirmation page, or find your auction in the "live auctions" tab at the top of the screen to view the current auction price, and how it will change over time. if someone else purchases the name prior to the auction reaching the floor price, your frozen tokens will be released to you.',charsets:{}},{title:"Delegated Staking",frontmatter:{permalink:"/guides/delegated-staking"},regularPath:"/guides/delegated-staking.html",relativePath:"guides/delegated-staking.md",key:"v-0d0949e4",path:"/guides/delegated-staking/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:24},{level:2,title:"Installing the Testnet Contract repo",slug:"installing-the-testnet-contract-repo",normalizedTitle:"installing the testnet contract repo",charIndex:600},{level:2,title:"Installing dependencies",slug:"installing-dependencies",normalizedTitle:"installing dependencies",charIndex:1310},{level:2,title:"Providing Wallet",slug:"providing-wallet",normalizedTitle:"providing wallet",charIndex:1580},{level:2,title:"Running the Script",slug:"running-the-script",normalizedTitle:"running the script",charIndex:1976},{level:2,title:"Withdrawing Stake",slug:"withdrawing-stake",normalizedTitle:"withdrawing stake",charIndex:2437}],headersStr:"Overview Installing the Testnet Contract repo Installing dependencies Providing Wallet Running the Script Withdrawing Stake",content:"# Delegated Staking\n\n\n# Overview\n\nDelegated staking is a process by which a person can stake their own IO tokens on someone elses ar.io gateway. The additional staked tokens increase that gateway's chance to be selected as an observer, and so they have the potential to earn more rewards. In exchange, the person who delegates the tokens will receive a share of the gateway's rewards. Gateway operators can set the percentage of rewards are available for delegating wallets.\n\nYou can find more specific information about delegated staking and how rewards are distributed in the ar.io whitepaper.\n\n\n# Installing the Testnet Contract repo\n\nDelegating tokens can be accomplished very easily by running a script found in the testnet-contract repo on Github.\n\nIf you already have the repo installed, make sure that it is updated to the latest version by opening it in a terminal and running git pull.\n\nIf you receive an error, try git stash to remove any changes you may have made locally and then git pull again.\n\nIf you do not have the repo installed, make sure that you have git installed on your computer, navigate to the location where you would like to save it, and run\n\ngit clone https://github.com/ar-io/testnet-contract\n\n\nThis will copy all of the files from github into a new folder on your computer.\n\n\n# Installing dependencies\n\nOnce the repo is installed, you need to install the code that it relies on to work. We do this using Yarn.\n\nNavigate your terminal into the newly created repo folder.\n\ncd testnet-contract\n\n\nand then install dependencies with:\n\nyarn install\n\n\n\n# Providing Wallet\n\nIn order to send tokens to be staked, you will need to use a wallet that has IO tokens in it. The easiest way to provide your wallet is to put the path to your Keyfile in your .env as WALLET_FILE_PATH.\n\nYou will need a small amount of AR in this wallet, in addition to the IO tokens, in order to pay for the contract interaction.\n\n//.env\n\nWALLET_FILE_PATH=<path/to/wallet>\n\n\n\n# Running the Script\n\nOnce the repo is installed and your wallet is provided, all that is left is to run the script. This can be done with a single command in your terminal.\n\nMake sure your terminal is in the root folder of the testnet-contract repo (the one named 'testnet-contract'), and run this command:\n\nyarn delegate-stake\n\n\nYou will be prompted in your terminal for the number of tokens you want to stake, and the wallet address of the target gateway.\n\n\n# Withdrawing Stake\n\nIf you want to take your staked tokens out of a gateway, the process is very similar. You will be running the decrease-delegate-stake script instead of the delegate-stake script.\n\nyarn decrease-delegate-stake\n\n\nYou will again be prompted for the number of tokens you want to withdraw and the wallet address of the gateway you want to withdraw from.\n\nOnly the wallet that owns the staked tokens can withdraw, so make sure you are using the same wallet to run the script as you used to stake the tokens initially.\n\nNOTE: Token withdrawals are not instant, and there is a period where the tokens will remain unavailable after you run the script. The length of this hold may vary a bit during testnet while optimal times are iterated upon.",normalizedContent:"# delegated staking\n\n\n# overview\n\ndelegated staking is a process by which a person can stake their own io tokens on someone elses ar.io gateway. the additional staked tokens increase that gateway's chance to be selected as an observer, and so they have the potential to earn more rewards. in exchange, the person who delegates the tokens will receive a share of the gateway's rewards. gateway operators can set the percentage of rewards are available for delegating wallets.\n\nyou can find more specific information about delegated staking and how rewards are distributed in the ar.io whitepaper.\n\n\n# installing the testnet contract repo\n\ndelegating tokens can be accomplished very easily by running a script found in the testnet-contract repo on github.\n\nif you already have the repo installed, make sure that it is updated to the latest version by opening it in a terminal and running git pull.\n\nif you receive an error, try git stash to remove any changes you may have made locally and then git pull again.\n\nif you do not have the repo installed, make sure that you have git installed on your computer, navigate to the location where you would like to save it, and run\n\ngit clone https://github.com/ar-io/testnet-contract\n\n\nthis will copy all of the files from github into a new folder on your computer.\n\n\n# installing dependencies\n\nonce the repo is installed, you need to install the code that it relies on to work. we do this using yarn.\n\nnavigate your terminal into the newly created repo folder.\n\ncd testnet-contract\n\n\nand then install dependencies with:\n\nyarn install\n\n\n\n# providing wallet\n\nin order to send tokens to be staked, you will need to use a wallet that has io tokens in it. the easiest way to provide your wallet is to put the path to your keyfile in your .env as wallet_file_path.\n\nyou will need a small amount of ar in this wallet, in addition to the io tokens, in order to pay for the contract interaction.\n\n//.env\n\nwallet_file_path=<path/to/wallet>\n\n\n\n# running the script\n\nonce the repo is installed and your wallet is provided, all that is left is to run the script. this can be done with a single command in your terminal.\n\nmake sure your terminal is in the root folder of the testnet-contract repo (the one named 'testnet-contract'), and run this command:\n\nyarn delegate-stake\n\n\nyou will be prompted in your terminal for the number of tokens you want to stake, and the wallet address of the target gateway.\n\n\n# withdrawing stake\n\nif you want to take your staked tokens out of a gateway, the process is very similar. you will be running the decrease-delegate-stake script instead of the delegate-stake script.\n\nyarn decrease-delegate-stake\n\n\nyou will again be prompted for the number of tokens you want to withdraw and the wallet address of the gateway you want to withdraw from.\n\nonly the wallet that owns the staked tokens can withdraw, so make sure you are using the same wallet to run the script as you used to stake the tokens initially.\n\nnote: token withdrawals are not instant, and there is a period where the tokens will remain unavailable after you run the script. the length of this hold may vary a bit during testnet while optimal times are iterated upon.",charsets:{}},{title:"GraphQL",frontmatter:{permalink:"/guides/graphql/"},regularPath:"/guides/gql.html",relativePath:"guides/gql.md",key:"v-c8f0091c",path:"/guides/graphql/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:14},{level:2,title:"Constructing a Query",slug:"constructing-a-query",normalizedTitle:"constructing a query",charIndex:1628},{level:3,title:"Basic Syntax",slug:"basic-syntax",normalizedTitle:"basic syntax",charIndex:1653},{level:3,title:"Customizing Searches with Tags",slug:"customizing-searches-with-tags",normalizedTitle:"customizing searches with tags",charIndex:2087},{level:3,title:"Understanding Edges and Nodes",slug:"understanding-edges-and-nodes",normalizedTitle:"understanding edges and nodes",charIndex:2775},{level:3,title:"Pagination",slug:"pagination",normalizedTitle:"pagination",charIndex:4422},{level:3,title:"General Tips for Optimizing Queries",slug:"general-tips-for-optimizing-queries",normalizedTitle:"general tips for optimizing queries",charIndex:6158},{level:2,title:"Making a Query",slug:"making-a-query",normalizedTitle:"making a query",charIndex:7207},{level:3,title:"GraphQL Playground",slug:"graphql-playground",normalizedTitle:"graphql playground",charIndex:7603},{level:3,title:"Using an API",slug:"using-an-api",normalizedTitle:"using an api",charIndex:8542},{level:3,title:"Using an SDK",slug:"using-an-sdk",normalizedTitle:"using an sdk",charIndex:9763}],headersStr:"Overview Constructing a Query Basic Syntax Customizing Searches with Tags Understanding Edges and Nodes Pagination General Tips for Optimizing Queries Making a Query GraphQL Playground Using an API Using an SDK",content:"# GraphQL\n\n\n# Overview\n\nGraphQL is a powerful query language designed for modern web applications to efficiently fetch data. It enables precise queries, allowing users to specify exactly which data they need and in what format, significantly reducing the amount of unnecessary data transferred. This approach is ideal for dealing with complex systems and large datasets, as it minimizes bandwidth and improves performance. GraphQL operates through a single endpoint, streamlining the way applications communicate with databases.\n\nThe integration of GraphQL with Arweave introduces a refined method for interacting with decentralized data storage. Arweave allows for the tagging of uploaded data, facilitating enhanced searchability and retrievability within its blockchain network. Utilizing GraphQL, users can perform targeted queries that leverage these tags, ensuring the retrieval of specific data swiftly and efficiently. This capability is particularly beneficial for the development of decentralized applications (dApps), the archival of content in a permanent and unalterable form, and the establishment of data marketplaces where precision and efficiency in data access are paramount.\n\nTogether, GraphQL and Arweave form a compelling combination, offering developers and users a robust framework for managing and querying data in a decentralized environment. This integration not only promotes the efficient and scalable retrieval of data but also supports the creation of more sophisticated and data-intensive applications on the decentralized web, maintaining a balance between technical depth and accessibility.\n\n\n# Constructing a Query\n\n\n# Basic Syntax\n\nIn GraphQL, you start with a root field and use braces to outline the fields you want to retrieve, allowing for precise, hierarchical data requests. For instance:\n\n{\n  transactions {\n    edges {\n      node {\n        id\n        tags {\n          name\n          value\n        }\n      }\n    }\n  }\n}\n\n\nThis query demonstrates fetching transactions and their tags, illustrating the hierarchical nature of GraphQL queries.\n\n\n# Customizing Searches with Tags\n\nArweave utilizes a tagging system for transactions, enabling intricate search capabilities. You can filter queries using these tags:\n\n{\n  transactions(tags: [{name: \"App-Name\", values: \"YourAppName\"}]) {\n    edges {\n      node {\n        id\n        data {\n          size\n          type\n        }\n      }\n    }\n  }\n}\n\n\nThis example filters transactions by a specific application name, and returns the id, size, and type of the transaction, showcasing how to customize queries for targeted data retrieval.\n\nNOTE: Tags are not the only option for filtering results, but are extremely useful due to the ability to add custom tags during the upload process.\n\n\n# Understanding Edges and Nodes\n\nIn the realm of GraphQL queries, especially when interfacing with Arweave, grasping the concept of edges and nodes is pivotal for constructing efficient and effective queries. This structure is not unique to Arweave but is particularly relevant due to the decentralized and interconnected nature of the data stored on its blockchain.\n\n * Nodes: At the heart of GraphQL's query structure, nodes represent individual data points or entities. In the context of Arweave, a node could be a transaction, a block, or any piece of data stored within the network. Nodes are the primary targets of your query, containing the data you wish to retrieve, such as transaction IDs, tags, or the content of data transactions.\n\n * Edges: Serving as the glue between nodes, edges are constructs that outline the relationship between different nodes. They can contain metadata about the connection, such as the nature of the relationship or additional attributes that describe how nodes are linked. In many GraphQL implementations, including those that interact with Arweave, edges are used to navigate through collections of related data, making them crucial for understanding the data's structure and lineage.\n\nThis hierarchical model is especially useful for querying complex and relational data sets, allowing for detailed navigation and efficient data retrieval within Arweave's decentralized storage system. By effectively utilizing the edges and nodes structure, you can precisely target the data you need, whether it's filtering transactions by tags, fetching related transactions, or exploring the blockchain's structure.\n\n\n# Pagination\n\nTo add pagination to your GraphQL queries, you can use the first, last, before, and after parameters. These parameters control the slice of data you're querying, making data retrieval more efficient and manageable.\n\n * first: Specify the number of items to retrieve from the start of the list or dataset.\n * last: Specify the number of items to retrieve from the end of the list or dataset.\n\n{\n  transactions(first: 10) {\n    edges {\n      node {\n        id\n      }\n    }\n  }\n}\n\n\nThis query fetches the first 10 transactions.\n\nTo navigate through your dataset, you can use after and before in conjunction with first or last. These parameters accept cursors, which are typically provided in the response of your initial query.\n\n * after: Fetch items after the specified cursor, used with first.\n * before: Fetch items before the specified cursor, used with last.\n\n{\n  transactions(first: 10, after: \"cursorOfLastItem\") {\n    edges {\n      node {\n        id\n      }\n    }\n  }\n}\n\n\nThis query fetches the next 10 transactions following the transaction with the cursor \"cursorOfLastItem\".\n\nIf no pagination terms are set, GraphQL servers may apply default limits to prevent excessively large datasets from being returned in a single query, potentially impacting performance. The default behavior can vary based on the server's configuration but often involves returning a predefined maximum number of items.\n\nFor instance, without specifying first or last, a query to the transactions field might return the first 5-10 transactions by default, depending on the server settings.\n\nThis behavior ensures that server resources are not overwhelmed by large requests and that client applications receive data in manageable chunks.\n\n\n# General Tips for Optimizing Queries\n\nTo optimize your GraphQL queries in Arweave, follow these general guidelines:\n\n * Specificity: Query with the most precise tags possible to narrow the search scope and enhance performance.\n * Minimalism: Limit your query to the essential set of tags to reduce processing time and data transfer.\n * Schema Design: Design your app's schema to reflect query patterns, possibly introducing tags that encapsulate frequent combinations of criteria.\n * Include Non-tag Fields: Adding fields like owner can refine your search, making your queries more efficient.\n * Order Your Tags: Arrange tags from most specific to most general to leverage Arweave's indexing more effectively.\n\nBy incorporating these strategies, developers can achieve faster and more precise data access from Arweave, enhancing the performance and responsiveness of decentralized applications. This balanced approach to query construction and optimization is key to navigating the expansive and decentralized storage landscape Arweave provides.\n\n\n# Making a Query\n\nExecuting GraphQL queries within the Arweave ecosystem offers flexibility and multiple avenues for developers and users alike. Whether you prefer a hands-on, manual approach to constructing and testing queries, or you aim for automation and integration within your applications, Arweave provides the tools necessary to interact with its decentralized data storage seamlessly.\n\n\n# GraphQL Playground\n\nFor those new to GraphQL or seeking to fine-tune their queries before implementation, the GraphQL playground offers an invaluable resource. This interactive interface allows users to manually construct queries, explore the schema, and immediately see the results of their queries. Accessible via web browsers, the playground can be found at the /graphql endpoint of most Arweave indexing services, such as https://arweave.dev/graphql. Here, you can experiment with different queries, understand the structure of the data, and refine your approach without writing a single line of code in your application.\n\nSteps for Accessing the GraphQL Playground:\n\n 1. Navigate to https://arweave.dev/graphql, or the graphql endpoint of any ar.io gateway, in your web browser.\n 2. Enter your GraphQL query in the provided interface.\n 3. Press the \"play\" button to execute the query to see real-time results and debug as needed.\n\n\n# Using an API\n\nFor application development and automation, making GraphQL queries programmatically is essential. You can send POST requests directly to the GraphQL endpoint of any indexing service that supports it, such as arweave.net or any ar.io gateway. These requests should contain your query in the body, allowing for dynamic and automated data retrieval within your application.\n\nWhen selecting an indexing service, consider the data coverage and reliability of the gateway to ensure it meets your application's needs. Different gateways might have varying degrees of indexed data available, so choosing one that is consistently up-to-date and comprehensive is key.\n\nExample of making a programmatic query:\n\nconst axios = require('axios');\n\nconst query = {\n  query: `\n    {\n      transactions(tags: [{name: \"App-Name\", values: \"YourAppName\"}]) {\n        edges {\n          node {\n            id\n            tags {\n              name\n              value\n            }\n          }\n        }\n      }\n    }\n  `\n};\n\naxios.post('https://arweave.net/graphql', query, {\n  headers: { 'Content-Type': 'application/json' },\n})\n.then(response => console.log(response.data))\n.catch(error => console.error('Error:', error));\n\n\n\n# Using an SDK\n\nFor an even more integrated experience, some Software Development Kits (SDKs) offer direct methods for executing GraphQL queries. The Arweave SDK, for example, provides built-in functionalities to interact with the blockchain, simplifying the process of making queries. By leveraging these SDKs, developers can bypass the intricacies of manual HTTP request construction, focusing instead on the logic and design of their applications.\n\nExample of using the Arweave SDK for GraphQL queries:\n\n// Assuming the Arweave SDK is already set up and initialized\nconst query = {\n  query: `\n    {\n      transactions(tags: [{name: \"App-Name\", values: \"YourAppName\"}]) {\n        edges {\n          node {\n            id\n            tags {\n              name\n              value\n            }\n          }\n        }\n      }\n    }\n  `\n};\n\narweave.api.post('/graphql', query)\n  .then(response => {\n    console.log(response.data);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n",normalizedContent:"# graphql\n\n\n# overview\n\ngraphql is a powerful query language designed for modern web applications to efficiently fetch data. it enables precise queries, allowing users to specify exactly which data they need and in what format, significantly reducing the amount of unnecessary data transferred. this approach is ideal for dealing with complex systems and large datasets, as it minimizes bandwidth and improves performance. graphql operates through a single endpoint, streamlining the way applications communicate with databases.\n\nthe integration of graphql with arweave introduces a refined method for interacting with decentralized data storage. arweave allows for the tagging of uploaded data, facilitating enhanced searchability and retrievability within its blockchain network. utilizing graphql, users can perform targeted queries that leverage these tags, ensuring the retrieval of specific data swiftly and efficiently. this capability is particularly beneficial for the development of decentralized applications (dapps), the archival of content in a permanent and unalterable form, and the establishment of data marketplaces where precision and efficiency in data access are paramount.\n\ntogether, graphql and arweave form a compelling combination, offering developers and users a robust framework for managing and querying data in a decentralized environment. this integration not only promotes the efficient and scalable retrieval of data but also supports the creation of more sophisticated and data-intensive applications on the decentralized web, maintaining a balance between technical depth and accessibility.\n\n\n# constructing a query\n\n\n# basic syntax\n\nin graphql, you start with a root field and use braces to outline the fields you want to retrieve, allowing for precise, hierarchical data requests. for instance:\n\n{\n  transactions {\n    edges {\n      node {\n        id\n        tags {\n          name\n          value\n        }\n      }\n    }\n  }\n}\n\n\nthis query demonstrates fetching transactions and their tags, illustrating the hierarchical nature of graphql queries.\n\n\n# customizing searches with tags\n\narweave utilizes a tagging system for transactions, enabling intricate search capabilities. you can filter queries using these tags:\n\n{\n  transactions(tags: [{name: \"app-name\", values: \"yourappname\"}]) {\n    edges {\n      node {\n        id\n        data {\n          size\n          type\n        }\n      }\n    }\n  }\n}\n\n\nthis example filters transactions by a specific application name, and returns the id, size, and type of the transaction, showcasing how to customize queries for targeted data retrieval.\n\nnote: tags are not the only option for filtering results, but are extremely useful due to the ability to add custom tags during the upload process.\n\n\n# understanding edges and nodes\n\nin the realm of graphql queries, especially when interfacing with arweave, grasping the concept of edges and nodes is pivotal for constructing efficient and effective queries. this structure is not unique to arweave but is particularly relevant due to the decentralized and interconnected nature of the data stored on its blockchain.\n\n * nodes: at the heart of graphql's query structure, nodes represent individual data points or entities. in the context of arweave, a node could be a transaction, a block, or any piece of data stored within the network. nodes are the primary targets of your query, containing the data you wish to retrieve, such as transaction ids, tags, or the content of data transactions.\n\n * edges: serving as the glue between nodes, edges are constructs that outline the relationship between different nodes. they can contain metadata about the connection, such as the nature of the relationship or additional attributes that describe how nodes are linked. in many graphql implementations, including those that interact with arweave, edges are used to navigate through collections of related data, making them crucial for understanding the data's structure and lineage.\n\nthis hierarchical model is especially useful for querying complex and relational data sets, allowing for detailed navigation and efficient data retrieval within arweave's decentralized storage system. by effectively utilizing the edges and nodes structure, you can precisely target the data you need, whether it's filtering transactions by tags, fetching related transactions, or exploring the blockchain's structure.\n\n\n# pagination\n\nto add pagination to your graphql queries, you can use the first, last, before, and after parameters. these parameters control the slice of data you're querying, making data retrieval more efficient and manageable.\n\n * first: specify the number of items to retrieve from the start of the list or dataset.\n * last: specify the number of items to retrieve from the end of the list or dataset.\n\n{\n  transactions(first: 10) {\n    edges {\n      node {\n        id\n      }\n    }\n  }\n}\n\n\nthis query fetches the first 10 transactions.\n\nto navigate through your dataset, you can use after and before in conjunction with first or last. these parameters accept cursors, which are typically provided in the response of your initial query.\n\n * after: fetch items after the specified cursor, used with first.\n * before: fetch items before the specified cursor, used with last.\n\n{\n  transactions(first: 10, after: \"cursoroflastitem\") {\n    edges {\n      node {\n        id\n      }\n    }\n  }\n}\n\n\nthis query fetches the next 10 transactions following the transaction with the cursor \"cursoroflastitem\".\n\nif no pagination terms are set, graphql servers may apply default limits to prevent excessively large datasets from being returned in a single query, potentially impacting performance. the default behavior can vary based on the server's configuration but often involves returning a predefined maximum number of items.\n\nfor instance, without specifying first or last, a query to the transactions field might return the first 5-10 transactions by default, depending on the server settings.\n\nthis behavior ensures that server resources are not overwhelmed by large requests and that client applications receive data in manageable chunks.\n\n\n# general tips for optimizing queries\n\nto optimize your graphql queries in arweave, follow these general guidelines:\n\n * specificity: query with the most precise tags possible to narrow the search scope and enhance performance.\n * minimalism: limit your query to the essential set of tags to reduce processing time and data transfer.\n * schema design: design your app's schema to reflect query patterns, possibly introducing tags that encapsulate frequent combinations of criteria.\n * include non-tag fields: adding fields like owner can refine your search, making your queries more efficient.\n * order your tags: arrange tags from most specific to most general to leverage arweave's indexing more effectively.\n\nby incorporating these strategies, developers can achieve faster and more precise data access from arweave, enhancing the performance and responsiveness of decentralized applications. this balanced approach to query construction and optimization is key to navigating the expansive and decentralized storage landscape arweave provides.\n\n\n# making a query\n\nexecuting graphql queries within the arweave ecosystem offers flexibility and multiple avenues for developers and users alike. whether you prefer a hands-on, manual approach to constructing and testing queries, or you aim for automation and integration within your applications, arweave provides the tools necessary to interact with its decentralized data storage seamlessly.\n\n\n# graphql playground\n\nfor those new to graphql or seeking to fine-tune their queries before implementation, the graphql playground offers an invaluable resource. this interactive interface allows users to manually construct queries, explore the schema, and immediately see the results of their queries. accessible via web browsers, the playground can be found at the /graphql endpoint of most arweave indexing services, such as https://arweave.dev/graphql. here, you can experiment with different queries, understand the structure of the data, and refine your approach without writing a single line of code in your application.\n\nsteps for accessing the graphql playground:\n\n 1. navigate to https://arweave.dev/graphql, or the graphql endpoint of any ar.io gateway, in your web browser.\n 2. enter your graphql query in the provided interface.\n 3. press the \"play\" button to execute the query to see real-time results and debug as needed.\n\n\n# using an api\n\nfor application development and automation, making graphql queries programmatically is essential. you can send post requests directly to the graphql endpoint of any indexing service that supports it, such as arweave.net or any ar.io gateway. these requests should contain your query in the body, allowing for dynamic and automated data retrieval within your application.\n\nwhen selecting an indexing service, consider the data coverage and reliability of the gateway to ensure it meets your application's needs. different gateways might have varying degrees of indexed data available, so choosing one that is consistently up-to-date and comprehensive is key.\n\nexample of making a programmatic query:\n\nconst axios = require('axios');\n\nconst query = {\n  query: `\n    {\n      transactions(tags: [{name: \"app-name\", values: \"yourappname\"}]) {\n        edges {\n          node {\n            id\n            tags {\n              name\n              value\n            }\n          }\n        }\n      }\n    }\n  `\n};\n\naxios.post('https://arweave.net/graphql', query, {\n  headers: { 'content-type': 'application/json' },\n})\n.then(response => console.log(response.data))\n.catch(error => console.error('error:', error));\n\n\n\n# using an sdk\n\nfor an even more integrated experience, some software development kits (sdks) offer direct methods for executing graphql queries. the arweave sdk, for example, provides built-in functionalities to interact with the blockchain, simplifying the process of making queries. by leveraging these sdks, developers can bypass the intricacies of manual http request construction, focusing instead on the logic and design of their applications.\n\nexample of using the arweave sdk for graphql queries:\n\n// assuming the arweave sdk is already set up and initialized\nconst query = {\n  query: `\n    {\n      transactions(tags: [{name: \"app-name\", values: \"yourappname\"}]) {\n        edges {\n          node {\n            id\n            tags {\n              name\n              value\n            }\n          }\n        }\n      }\n    }\n  `\n};\n\narweave.api.post('/graphql', query)\n  .then(response => {\n    console.log(response.data);\n  })\n  .catch(error => {\n    console.error('error:', error);\n  });\n",charsets:{}},{title:"ar.io SDK Changelog",frontmatter:{},regularPath:"/guides/sdk-release-notes.html",relativePath:"guides/sdk-release-notes.md",key:"v-6c1fe4b4",path:"/guides/sdk-release-notes.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:26},{level:2,title:"2.0.2 (2024-07-12)",slug:"_2-0-2-2024-07-12",normalizedTitle:"2.0.2 (2024-07-12)",charIndex:686},{level:3,title:"Bug Fixes",slug:"bug-fixes",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"2.0.1 (2024-07-11)",slug:"_2-0-1-2024-07-11",normalizedTitle:"2.0.1 (2024-07-11)",charIndex:805},{level:3,title:"Bug Fixes",slug:"bug-fixes-2",normalizedTitle:"bug fixes",charIndex:709},{level:3,title:"Bug Fixes",slug:"bug-fixes-3",normalizedTitle:"bug fixes",charIndex:709},{level:3,title:"Features",slug:"features",normalizedTitle:"features",charIndex:1243},{level:3,title:"BREAKING CHANGES",slug:"breaking-changes",normalizedTitle:"breaking changes",charIndex:1462},{level:2,title:"1.2.2 (2024-07-11)",slug:"_1-2-2-2024-07-11",normalizedTitle:"1.2.2 (2024-07-11)",charIndex:1950},{level:3,title:"Bug Fixes",slug:"bug-fixes-4",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.2.1 (2024-07-04)",slug:"_1-2-1-2024-07-04",normalizedTitle:"1.2.1 (2024-07-04)",charIndex:2050},{level:3,title:"Bug Fixes",slug:"bug-fixes-5",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.2.0 (2024-07-03)",slug:"_1-2-0-2024-07-03",normalizedTitle:"1.2.0 (2024-07-03)",charIndex:2143},{level:3,title:"Bug Fixes",slug:"bug-fixes-6",normalizedTitle:"bug fixes",charIndex:709},{level:3,title:"Features",slug:"features-2",normalizedTitle:"features",charIndex:1243},{level:2,title:"1.1.1 (2024-06-06)",slug:"_1-1-1-2024-06-06",normalizedTitle:"1.1.1 (2024-06-06)",charIndex:5335},{level:3,title:"Bug Fixes",slug:"bug-fixes-7",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.1.0 (2024-06-03)",slug:"_1-1-0-2024-06-03",normalizedTitle:"1.1.0 (2024-06-03)",charIndex:5446},{level:3,title:"Bug Fixes",slug:"bug-fixes-8",normalizedTitle:"bug fixes",charIndex:709},{level:3,title:"Features",slug:"features-3",normalizedTitle:"features",charIndex:1243},{level:2,title:"1.0.8 (2024-05-29)",slug:"_1-0-8-2024-05-29",normalizedTitle:"1.0.8 (2024-05-29)",charIndex:6638},{level:3,title:"Bug Fixes",slug:"bug-fixes-9",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.0.7 (2024-05-23)",slug:"_1-0-7-2024-05-23",normalizedTitle:"1.0.7 (2024-05-23)",charIndex:7139},{level:3,title:"Bug Fixes",slug:"bug-fixes-10",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.0.6 (2024-05-07)",slug:"_1-0-6-2024-05-07",normalizedTitle:"1.0.6 (2024-05-07)",charIndex:7966},{level:3,title:"Bug Fixes",slug:"bug-fixes-11",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.0.5 (2024-05-02)",slug:"_1-0-5-2024-05-02",normalizedTitle:"1.0.5 (2024-05-02)",charIndex:8081},{level:3,title:"Bug Fixes",slug:"bug-fixes-12",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.0.4 (2024-04-30)",slug:"_1-0-4-2024-04-30",normalizedTitle:"1.0.4 (2024-04-30)",charIndex:8494},{level:3,title:"Bug Fixes",slug:"bug-fixes-13",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.0.3 (2024-04-26)",slug:"_1-0-3-2024-04-26",normalizedTitle:"1.0.3 (2024-04-26)",charIndex:8601},{level:3,title:"Bug Fixes",slug:"bug-fixes-14",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.0.2 (2024-04-25)",slug:"_1-0-2-2024-04-25",normalizedTitle:"1.0.2 (2024-04-25)",charIndex:8690},{level:3,title:"Bug Fixes",slug:"bug-fixes-15",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.0.1 (2024-04-23)",slug:"_1-0-1-2024-04-23",normalizedTitle:"1.0.1 (2024-04-23)",charIndex:9312},{level:3,title:"Bug Fixes",slug:"bug-fixes-16",normalizedTitle:"bug fixes",charIndex:709},{level:2,title:"1.0.0 (2024-04-23)",slug:"_1-0-0-2024-04-23",normalizedTitle:"1.0.0 (2024-04-23)",charIndex:9430},{level:3,title:"Bug Fixes",slug:"bug-fixes-17",normalizedTitle:"bug fixes",charIndex:709},{level:3,title:"Features",slug:"features-4",normalizedTitle:"features",charIndex:1243}],headersStr:"Overview 2.0.2 (2024-07-12) Bug Fixes 2.0.1 (2024-07-11) Bug Fixes Bug Fixes Features BREAKING CHANGES 1.2.2 (2024-07-11) Bug Fixes 1.2.1 (2024-07-04) Bug Fixes 1.2.0 (2024-07-03) Bug Fixes Features 1.1.1 (2024-06-06) Bug Fixes 1.1.0 (2024-06-03) Bug Fixes Features 1.0.8 (2024-05-29) Bug Fixes 1.0.7 (2024-05-23) Bug Fixes 1.0.6 (2024-05-07) Bug Fixes 1.0.5 (2024-05-02) Bug Fixes 1.0.4 (2024-04-30) Bug Fixes 1.0.3 (2024-04-26) Bug Fixes 1.0.2 (2024-04-25) Bug Fixes 1.0.1 (2024-04-23) Bug Fixes 1.0.0 (2024-04-23) Bug Fixes Features",content:"# ar.io SDK Changelog\n\n\n# Overview\n\nWelcome to the documentation page for the ar.io SDK release notes. Here, you will find detailed information about each version of the ar.io SDK, including the enhancements, bug fixes, and any other changes introduced in every release. This page serves as a comprehensive resource to keep you informed about the latest developments and updates in the ar.io SDK. For those interested in exploring the source code, each release's code is readily accessible at our GitHub repository: ar.io SDK change logs. Stay updated with the continuous improvements and advancements in the ar.io SDK by referring to this page for all release-related information.\n\n\n# 2.0.2 (2024-07-12)\n\n\n# Bug Fixes\n\n * types: update gateway settings type to only support observerAddress (13e073b)\n\n\n# 2.0.1 (2024-07-11)\n\n\n# Bug Fixes\n\n * logger: fixes the console logger to respect the log level provided by web clients (99d7993)\n\n\n# 2.0.0 (2024-07-11)\n\n\n# Bug Fixes\n\n * arweave: use default arweave in IO (21d25b9)\n * deps: replace bunyan or console depending on the client environment (9d940aa)\n * log: allow log level configuration for clients (9cb0981)\n * log: replace bunyan with winston to ensure browser compatibility (80b38e0)\n\n\n# Features\n\n * io: add paginated gateway support for larger state objects (e.g. balances, records, and gateways) (b23efa8)\n * util: add utility for fetching all records (8df2aac)\n * io: add leaveNetwork API (54222ce)\n\n\n# BREAKING CHANGES\n\n * deps: removes all smartweave implementations using warp-sdk. The result is an only AO compatible ANT and IO network contracts. Some utilities are preserved due to their usefulness.\n * imports: modifies web named exports to provide esm and cjs exports instead of minified bundle. The web bundle was causing issues in bundled projects, and polyfills are no longer provided by default. Refer to the README for specifications on how to use the SDK for a web project.\n\n\n# 1.2.2 (2024-07-11)\n\n\n# Bug Fixes\n\n * api: ensure timestamps are always in miliseconds (93b162f)\n\n\n# 1.2.1 (2024-07-04)\n\n\n# Bug Fixes\n\n * io: default the IO process to use testnet (61bca5c)\n\n\n# 1.2.0 (2024-07-03)\n\n\n# Bug Fixes\n\n * ant: add event emitter util for fetching ants (ee5287b)\n * ant: fix read api and update types (977e0e3)\n * ant: handle when no data is returned (1de6610)\n * ants: separate out interfaces (60fd593)\n * ant: update apis to implement interface (9c54db0)\n * ant: update interface to expect undername instead of name for ant records (416cb3d)\n * ao ant: add handler for get state (fd20aa7)\n * ao reads: safely parse json (1ff5410)\n * ao: add AR-IO-SDK tag to process interaction (e5b5603)\n * ao: add default timestamp to getTokenCost (36fed1b)\n * ao: add getPrescribedNames for epoch api (747fad2)\n * ao: add retries to read interactions (67d59e2)\n * ao: fix tag for join network, update observation response (556f5d5)\n * ao: prune tags on joinNetwork (31978f9)\n * ao read: fix interface to have ant getState api (4e95bbd)\n * aos: update aos module id and lua id (e19139e)\n * ao: support connection config params in AO (3e6a246)\n * ao: support tags for all write interactions (67f8da9)\n * ao: update APIs for ao interface to be more descriptive (f07ac36)\n * ao: update epoch interfaces to support various inputs (ddc4c10)\n * ao: update send on process to use proper signer and evalute result (4e2f65d)\n * ao: update stake interface (427e8ba)\n * ao: use types and connect config in ao process to wrap connect from ao (05b07cf)\n * buy: require processId on buyRecord (cc5859f)\n * deps: add eventemitter3 dep (1d50cd1)\n * deps: use p-limit-lit to avoid jest issues (05e0673)\n * emitter: add a end and some console logs in the example (bc4e6b8)\n * emmiter: rename and move throttle to be variable powered (f9cf40d)\n * epochs: fix epoch default timestamp (ffb9df7)\n * events: return process ids on end of fetching (15e3f44)\n * handlers: update handler names (720b178)\n * io: add buyRecord API (30d5e74)\n * io: add epoch-settings api and tests (56555ea)\n * io: add init to provide custom process (8811016)\n * io: separate out io/ao contract interfaces (d96fa59)\n * io: update arns interactions on registry contract (9befe2a)\n * pLimit: add pLimit for util to avoid ao throttling (5b13560)\n * readds incorrectly removed descriptions (c77217a)\n * revert purchasetype tag (2dc08df)\n * spawn: add option state contractTxID to track where init state is from (1745766)\n * tags: make remaining tags ans-116 compliant (d034c8c)\n * tags: use updated ans-116 tag format for actions (261b788)\n * timeout: increase timeout period on arns emitter (b5ddb5f)\n * type: default to unknown return type for json (0bddce0)\n * types: add ao ant state type (02dbacd)\n * types: update some types for arns names and contract state (2d23241)\n * updates to use IO class and process terminology (ec45d66)\n * util: initial implementation of get ant process for wallet (885fa31)\n\n\n# Features\n\n * ant: add balance APIs to ant interface (ec67440)\n * ant: add utility for fetchint ant modules owned by wallet (01f7ec9)\n * ants: support ANT apis in SDK (b187aeb)\n * ao utils: add spawn ant util (d02566e)\n * ao: experiment with initial implementation of ao contract (6118cea)\n * getInfo io: add getInfo method to io class (4ef25ec)\n * IO: implement io/ao classes that call process apis (aab8967)\n\n\n# 1.1.1 (2024-06-06)\n\n\n# Bug Fixes\n\n * api: default evaluation options on getArNSReservedNames api (0a1f22e)\n\n\n# 1.1.0 (2024-06-03)\n\n\n# Bug Fixes\n\n * api: make evaluation options optional on the interface (9e5a1c0)\n * api: remove unused variable for epochBlockHeight (98c5ebc)\n * arweave: default to arweave.net (84c9653)\n * axios: add back axios-retry (9aae4de)\n * errors: throw AbortError on signal aborted (63bd395)\n * getContracts: only implement util for now (6b29c2f)\n * gql query: don't abstract the data protocol query (f0b8f77)\n * imports: import type from base route warp-contracts (bf99a85)\n * init: allow signer to be undefined and if so return readable (b6a05e2)\n * init: fix type for init to allow undefined signer (0a64ea9)\n * init: remove unnecessary destructuring (81af1af)\n * interface: remove epochBlockHeight from interface (b646f08)\n * types:remove DataItem from WriteInteractionResult (eadb1a1)\n * types: use gql node interface for dataProtocolTransaction (79cebd9)\n * warp: ensure contract init on read interactions (bc3d1b8)\n\n\n# Features\n\n * getContracts: add get contracts on network specific providers like WarpContract (603d36e)\n * gql util: add smartweave gql utils (5ea3aab)\n * write: add tags support to write interactions on warp-contract and saveObservations (46eb4c9)\n\n\n# 1.0.8 (2024-05-29)\n\n\n# Bug Fixes\n\n * api: add getPriceForInteration api to ario contract (3b8083c)\n * bundle: minify web bundle (9266676)\n * api: use function map for method name (439ec1f)\n * reserved: add reserved arns name get methods (ad203ef)\n * signer: check if method is property of signer before using (c52783c)\n * signer: modify signer to assume the signer type based on public key being undefined (b775c96)\n * test: add dockerfile for running tests in certain node environments (86cf2ad)\n\n\n# 1.0.7 (2024-05-23)\n\n\n# Bug Fixes\n\n * contract: add extendLease and increaseUndernameSupport apis (1b13b5e)\n * types: fix the AtLeastOne type (ffd0869)\n * deps: force arweavve to 1.15.1 (2448598)\n * contract: make params required - properties and note (89db674)\n * types: update tests and use overwrite type to allow mIOtoken for certain paramaters (badcece)\n * api: change to increaseUndernameLimit (9b72c1e)\n * docs: update ario apis (4af0862)\n * tests: update extend test util to include a test domain (e959b7c)\n * token: add mIO and IO token classes to exports (f47f7d5)\n * types: add delegated gateway type (c877496)\n * types: export the token types (dfc83ae)\n * types: remove visible types (6ab1fc3)\n * types: update Gateway delegates type to use the new GatewayDelegate (ac7e924)\n * warp: bump warp version (db7344d)\n\n\n# 1.0.6 (2024-05-07)\n\n\n# Bug Fixes\n\n * warp: bump warp to fix AbortError issue on warp imports for web (c9a5613)\n\n\n# 1.0.5 (2024-05-02)\n\n\n# Bug Fixes\n\n * cjs: provide path alias for warp in cjs export (7f9bf9a)\n * logger: replace winston with bunyan (0488f75)\n * util: add FQDN regex that matches ArNS contract (e6d7396)\n * utils: manally conver from b64 to b64url to avoid web polyfill issues (766035c)\n * utils: use base64 for fromB64url util (42302ef)\n * warp-contract: correctly throw error in write interaction (c2368dd)\n\n\n# 1.0.4 (2024-04-30)\n\n\n# Bug Fixes\n\n * ario: update joinNetwork to accept observerWallet param (6a32dd1)\n\n\n# 1.0.3 (2024-04-26)\n\n\n# Bug Fixes\n\n * signer: set owner before signing data (0b558f5)\n\n\n# 1.0.2 (2024-04-25)\n\n\n# Bug Fixes\n\n * arweave: default to the arweave node import to avoid issues with browser environments (fc8c26e)\n * cacheurl: use default cache url in warpcontract (a676a3c)\n * init: cleanup init overload methods and tests (fa328d2)\n * lint: address lint issue in ArIOWriteable (4a3ee89)\n * tsconfig: modify some tsconfig settings to get isolated configs for web/cjs/esm (46b7acc)\n * typeguards: make type guards accept unknowns (7f285bb)\n * types: use generic types and modify the requirements for init functions (9350f78)\n * utils: add writeInteraction types and update base64url logic (4f5476b)\n\n\n# 1.0.1 (2024-04-23)\n\n\n# Bug Fixes\n\n * docs: improve README docs interface documentation for ArIO clients (b0da48c)\n\n\n# 1.0.0 (2024-04-23)\n\n\n# Bug Fixes\n\n * actions: bump node setup action (4eb49cd)\n * actions: freeze lockfile (dba7313)\n * contractadd cache config in ario constructor (1f3c0ba)\n * ant: add ant contract to exports (a2ff57b)\n * ant: add signer to ant test (4581b8d)\n * ant: default evaluation options for ant apis that do not take an… (#25) (0c8b55d)\n * ant: default evaluation options for ant apis that do not take another parameter (7c59033)\n * ant: default evaluation options for apis that do not require them (72b57d5)\n * ant: fix API for getRecords (c714aa3)\n * apis: remove epoch from distributions and observations (7b2d279)\n * arbundle version: pin version (35ffab6)\n * arbundles: update arbundles import (f02d83f)\n * ario: add cache config in ario constructor (#11) (ecb279d)\n * ario: formatting (c61570a)\n * ario: make state provider nullable and default to remote arns-service provider (fa1cb72)\n * ario: re-add contract default config (2296cc3)\n * ario: remove unused cache property (7f2d02e)\n * build: add setImmediate polyfill for web only (ad36776)\n * build: remove redundant exported type (134319b)\n * cache: remove cache folder (2ac9427)\n * cacheURL: update ario cache url setting pattern to use custom url appropriately (c76e67d)\n * cache: validate arweave id before setting it (5ba1175)\n * casing: revert to lower case casing (b5da0ab)\n * comments: make class logger private, remove comments (7483246)\n * connect: add init static function on ario class to create interaction classes (765f39c)\n * contract configuration: return cache url as well (b4a7bc3)\n * contract functions: correct contract function names (ad9bc56)\n * contracts: add configuration view method and update types (4fae4a2)\n * contracts: remove write method and type from remote contract (740d8b8)\n * contracttxid: make contractTxID require in remote state cache instance (dc82d21)\n * contracttxid: make contractTxID required in remote state cache instance (#10) (bf651bb)\n * ctrl flow: remove else from control flow (4b3c4c2)\n * deps: pin arweave (d39391c)\n * deps: remove axios-retry, will implement later (0218e95)\n * deps: remove extra crypto-browserify (9b42898)\n * deps: remove warp-contracts-deploy from deps (9d4f9fa)\n * docs: remove docs folder (47e8403)\n * drywrite: throw on bad drywrite and continue if successful (5052c0a)\n * eslintignore: remove old file names (415c163)\n * eslint: remove eslint comments and use this signer (32530eb)\n * esm: add polyfills for crypto (dd8fbfe)\n * esm: add polyfills for crypto (#27) (553822c)\n * example web: update ario instatiation (77c6842)\n * example: escape quotes in packagejson for example package json (fb47de0)\n * example: simplify example and remove unused method on remote cache (81637f8)\n * examples: update comments and fix package.json (db7140b)\n * examples: update examples to use devnet (cc037ac)\n * examples: update examples with records methods, and balance methods (a2d2a02)\n * exports: add arweavesigner and arconnectsigner to exports, clean up docs (c7860ed)\n * exports: update exports in indices (f794437)\n * exports: update package exports to have index in src folder (2cce9e3)\n * files: clean git cache of duplicate casing (e9eaa2d)\n * filters: punt filters (1c23cb3)\n * fixture: add type to arns state fixture (5bcac32)\n * formating: format (3f30f77)\n * gar write: fix types and flow on gar write (f5e7774)\n * gateway: update gateway settings to support autostake (82c6840)\n * generics: use named generic (4b647f0)\n * gitignore: remove cache from gitignore (2867abc)\n * git: test fix with file casing issue (c3611ee)\n * headers: use source-version for header (2b26d88)\n * http: add headers sdk headers to http config (94810ed)\n * husky: add commit hooks (885ce68)\n * imports: update to use indexed imports from warp (1242568)\n * indentation: fix indentation in examples (a266731)\n * interface: removed filters and added base records types (849834d)\n * interface: rename interface to ContractCache (2a0a765)\n * jest: remove extra config (014fbde)\n * lint: disable no-any warning certain types (de5f108)\n * lint: formatting (21224e2)\n * logger, errors, http: Updated to axios and axios-retry, added winston logger, more extensive custom error objects (b944f4d)\n * logger: remove unused logger property (9501d1d)\n * logs: removing debug logs (f025171)\n * mixin: filter private methods in mixin util (beb8610)\n * naming: change epoch to epochStartHeight (908971c)\n * naming: rename getRecord[s] to getArNSRecord[s] (bd3d4bc)\n * overloads: only accept warp contract as a contract config for ariowritable (e3c97e9)\n * polyfills: rollback polyfill on logger (0cdb2f0)\n * postinstall: remove husky postinstall script (c74a135)\n * readme: add grammar and example recs (ecc07f7)\n * readme: condense quick start (b35e5bd)\n * readme: refactor api list to header tags (817d99b)\n * readme: update ant header (77235ce)\n * readme: update ANT usage description (70c8520)\n * readme: update joinNetwork docs (9fcf440)\n * readme: update quick start (a60d96a)\n * readme: update readme with default provider example (68a5a16)\n * readme: update readme with examples (d9ee23e)\n * record records: update key to use result instead of record (90314db)\n * records: remove contractTxId filter remove lodash shrink readme (50669e1)\n * records: use state endpoint to fetch records (2f02c53)\n * recs: modify the interfaces for contracts and implement with warp and remote service (#13) (56ebb08)\n * release: remove release assets entirely (9d5a1b3)\n * release: update github release config to publish packages to github (5534d9d)\n * remote: getState not properly setting evalTo in http requests (55745c1)\n * safety: update type safety checks (32eebbc)\n * setimmediate: make set immediate a build dependency as it is required by the node winston (9292eaa)\n * signer: check that contract is connected before trying to write (d352e9c)\n * signer: check that contract is connected before trying to write (#29) (536a116)\n * signer: fix signer in WarpContracts - update tests (ea9448f)\n * signer: fix signer in WarpContracts - update tests (#32) (16d69d8)\n * signer: remove jwk use, ignore web example for now (bc7e577)\n * signer: remove signer, will do in other pr (d02276d)\n * signer: remove use of JWK, simplify constructor (#22) (d2ef573)\n * signer: update ANT to have signer (c7f8eee)\n * structure: update cache provider folder to be named caches (844c1aa)\n * structure: use snake case for file and folder names (37f27d3)\n * test warp-contract: use beforeAll to read env vars (95cc019)\n * tests: add test cases as a const (8458185)\n * tests: add test for custom arIO client config (0e6142b)\n * tests: change control flow pattern to .catch instead of trycatch (883de51)\n * tests: dont make blockHeight or sortKey undefined but rather evalTo (f76a201)\n * tests: instantiate new ant to connect in tests (9869415)\n * tests: remove dryWrite from writeInteraction, update tests (bc1becc)\n * tests: remove fixture and use live service for tests (30d3e8c)\n * tests: test 404 response (590dea6)\n * tests: update ario test (4208bd0)\n * tests: update client instantiation test to check read vs write clients (059653c)\n * tests: update docker compose params (a71befd)\n * tests: update gateways test (1fcb3e6)\n * tests: update stubs in tests (e4bbc6e)\n * tests: update test to match jest syntax (553bdbb)\n * tests: update tests for named prop expectation (4ea04a7)\n * tests: update tests to use younger contract, add evalParams config (ae890c8)\n * tests: update tests with constants and update types (1bdcfeb)\n * tests: update tests with new name (2cd1b5c)\n * tests: update with new names on methods (619c193)\n * tests: use angela for testing (10f30fe)\n * tests: use http not https in tests (fddba1e)\n * tests: use process vars as priority url (faab4f3)\n * test: update test to use ArweaveTransactionID class (f6c4f8b)\n * tsconfig, names: reverted tsconfig to nodenext resolution, changed naming convention on provider, removed extraeneous error classes, rolled back axios-retry to match our tsconfig settings (d412d44)\n * tyeps: set types to objects rather than top level params for easier readability (edfd77b)\n * type: rename all type implementations (5959045)\n * types and tests: update evalTo to allow undefined sortKey and block and test that (a59f05c)\n * types: add @ to records (53601c1)\n * types: make props nullable on certain read apis (f8ff552)\n * types: remove any type (5c80242)\n * types: remove any types (d8d910b)\n * types: remove ArweaveTransactionID type for now (3adf53b)\n * types: remove unnecesssary empty defaults (7d14edb)\n * types: rename signer to ContractSigner (87d6c90)\n * types: require atleast one param to update gateway settings (857ebdc)\n * types: update interaction type to only use read for now (2c02e90)\n * types: update tests, readme, and types (e9985dd)\n * types: use partial write type (fa6a638)\n * types: use string instead of any (014a262)\n * validate id: make validator a private method (dce4a94)\n * validity util: isBlockheight check more strict (2b28675)\n * warp contract: added test for getting state after connecting with warp (060ee2c)\n * warp-contract: provide logger - update isTransaction flow ctrl - use typed props (5f6e0a1)\n * warp-contracts: bump warp to 1.4.38 - fixed warp exports (af4a20b)\n * winston: move the winston polyfill - this will prevent any esm based web projects from getting polyfill issues (c8b7998)\n * write: add dry run - sync state - abortSignal - update interface (970bdef)\n * write: update utils - change error flow - update arweave constructor props (0a81c92)\n * write: update write methods on warp (9c0540b)\n * yarn: update lockfile (fd5e0ee)\n\n\n# Features\n\n * ant: add ANT read interface (c941c96)\n * ant: create ant contract class for interacting with ant contracts (6eb7ef5)\n * ants: add readable-writable framework to the ant client and implement write methods (3019f53)\n * ario contract: add distributions and observation apis (21e38d1)\n * arioContract: update ArIO interface and ArIOContract interface (5d87e2e)\n * auctions: add auctions apis (faf08c5)\n * contract: add distribution, observations apis, update readme and examples (0208317)\n * contract: create new contract classes that impelement both warp and remote cache for ant contract and ar-io contracts (855da2d)\n * first issue: setup examples, readme, and initial gateways provider (5a9e232)\n * gar methods: add gar write methods to the ario client (e01b08b)\n * inital providers: scaffold initial providers (4949514)\n * io transfer: add transfer api to ario writable client (0d37623)\n * observerations: add saveObservations write interaction (8dd977c)\n * observers: add API for fetching prescribed observers (a18e130)\n * observers: add API for fetching prescribed observers (#17) (17ce6de)\n * PE-5742: add records api to arns remote cache (#8) (c46cd39)\n * PE-5751: add blockheight and sortkey eval filters (#12) (832a1ad)\n * PE-5758: add signer to ario class (#20) (1b82077)\n * PE-5759: observations and distributions apis (#16) (dded361)\n * PE-5773: add auctions read apis (#18) (e0c6fca)\n * PE-5800: add epoch apis (48ee4ba)\n * PE-5800: epoch apis (#15) (70563b1)\n * PE-5825: ANT read interface (#19) (6a0c477)\n * records: add records api to arns remote cache (1b7f54f)\n * signer: add arweave signer to ario class (7e08097)\n * write: add write interface and base implementation on warp-contract (6dfc969)",normalizedContent:"# ar.io sdk changelog\n\n\n# overview\n\nwelcome to the documentation page for the ar.io sdk release notes. here, you will find detailed information about each version of the ar.io sdk, including the enhancements, bug fixes, and any other changes introduced in every release. this page serves as a comprehensive resource to keep you informed about the latest developments and updates in the ar.io sdk. for those interested in exploring the source code, each release's code is readily accessible at our github repository: ar.io sdk change logs. stay updated with the continuous improvements and advancements in the ar.io sdk by referring to this page for all release-related information.\n\n\n# 2.0.2 (2024-07-12)\n\n\n# bug fixes\n\n * types: update gateway settings type to only support observeraddress (13e073b)\n\n\n# 2.0.1 (2024-07-11)\n\n\n# bug fixes\n\n * logger: fixes the console logger to respect the log level provided by web clients (99d7993)\n\n\n# 2.0.0 (2024-07-11)\n\n\n# bug fixes\n\n * arweave: use default arweave in io (21d25b9)\n * deps: replace bunyan or console depending on the client environment (9d940aa)\n * log: allow log level configuration for clients (9cb0981)\n * log: replace bunyan with winston to ensure browser compatibility (80b38e0)\n\n\n# features\n\n * io: add paginated gateway support for larger state objects (e.g. balances, records, and gateways) (b23efa8)\n * util: add utility for fetching all records (8df2aac)\n * io: add leavenetwork api (54222ce)\n\n\n# breaking changes\n\n * deps: removes all smartweave implementations using warp-sdk. the result is an only ao compatible ant and io network contracts. some utilities are preserved due to their usefulness.\n * imports: modifies web named exports to provide esm and cjs exports instead of minified bundle. the web bundle was causing issues in bundled projects, and polyfills are no longer provided by default. refer to the readme for specifications on how to use the sdk for a web project.\n\n\n# 1.2.2 (2024-07-11)\n\n\n# bug fixes\n\n * api: ensure timestamps are always in miliseconds (93b162f)\n\n\n# 1.2.1 (2024-07-04)\n\n\n# bug fixes\n\n * io: default the io process to use testnet (61bca5c)\n\n\n# 1.2.0 (2024-07-03)\n\n\n# bug fixes\n\n * ant: add event emitter util for fetching ants (ee5287b)\n * ant: fix read api and update types (977e0e3)\n * ant: handle when no data is returned (1de6610)\n * ants: separate out interfaces (60fd593)\n * ant: update apis to implement interface (9c54db0)\n * ant: update interface to expect undername instead of name for ant records (416cb3d)\n * ao ant: add handler for get state (fd20aa7)\n * ao reads: safely parse json (1ff5410)\n * ao: add ar-io-sdk tag to process interaction (e5b5603)\n * ao: add default timestamp to gettokencost (36fed1b)\n * ao: add getprescribednames for epoch api (747fad2)\n * ao: add retries to read interactions (67d59e2)\n * ao: fix tag for join network, update observation response (556f5d5)\n * ao: prune tags on joinnetwork (31978f9)\n * ao read: fix interface to have ant getstate api (4e95bbd)\n * aos: update aos module id and lua id (e19139e)\n * ao: support connection config params in ao (3e6a246)\n * ao: support tags for all write interactions (67f8da9)\n * ao: update apis for ao interface to be more descriptive (f07ac36)\n * ao: update epoch interfaces to support various inputs (ddc4c10)\n * ao: update send on process to use proper signer and evalute result (4e2f65d)\n * ao: update stake interface (427e8ba)\n * ao: use types and connect config in ao process to wrap connect from ao (05b07cf)\n * buy: require processid on buyrecord (cc5859f)\n * deps: add eventemitter3 dep (1d50cd1)\n * deps: use p-limit-lit to avoid jest issues (05e0673)\n * emitter: add a end and some console logs in the example (bc4e6b8)\n * emmiter: rename and move throttle to be variable powered (f9cf40d)\n * epochs: fix epoch default timestamp (ffb9df7)\n * events: return process ids on end of fetching (15e3f44)\n * handlers: update handler names (720b178)\n * io: add buyrecord api (30d5e74)\n * io: add epoch-settings api and tests (56555ea)\n * io: add init to provide custom process (8811016)\n * io: separate out io/ao contract interfaces (d96fa59)\n * io: update arns interactions on registry contract (9befe2a)\n * plimit: add plimit for util to avoid ao throttling (5b13560)\n * readds incorrectly removed descriptions (c77217a)\n * revert purchasetype tag (2dc08df)\n * spawn: add option state contracttxid to track where init state is from (1745766)\n * tags: make remaining tags ans-116 compliant (d034c8c)\n * tags: use updated ans-116 tag format for actions (261b788)\n * timeout: increase timeout period on arns emitter (b5ddb5f)\n * type: default to unknown return type for json (0bddce0)\n * types: add ao ant state type (02dbacd)\n * types: update some types for arns names and contract state (2d23241)\n * updates to use io class and process terminology (ec45d66)\n * util: initial implementation of get ant process for wallet (885fa31)\n\n\n# features\n\n * ant: add balance apis to ant interface (ec67440)\n * ant: add utility for fetchint ant modules owned by wallet (01f7ec9)\n * ants: support ant apis in sdk (b187aeb)\n * ao utils: add spawn ant util (d02566e)\n * ao: experiment with initial implementation of ao contract (6118cea)\n * getinfo io: add getinfo method to io class (4ef25ec)\n * io: implement io/ao classes that call process apis (aab8967)\n\n\n# 1.1.1 (2024-06-06)\n\n\n# bug fixes\n\n * api: default evaluation options on getarnsreservednames api (0a1f22e)\n\n\n# 1.1.0 (2024-06-03)\n\n\n# bug fixes\n\n * api: make evaluation options optional on the interface (9e5a1c0)\n * api: remove unused variable for epochblockheight (98c5ebc)\n * arweave: default to arweave.net (84c9653)\n * axios: add back axios-retry (9aae4de)\n * errors: throw aborterror on signal aborted (63bd395)\n * getcontracts: only implement util for now (6b29c2f)\n * gql query: don't abstract the data protocol query (f0b8f77)\n * imports: import type from base route warp-contracts (bf99a85)\n * init: allow signer to be undefined and if so return readable (b6a05e2)\n * init: fix type for init to allow undefined signer (0a64ea9)\n * init: remove unnecessary destructuring (81af1af)\n * interface: remove epochblockheight from interface (b646f08)\n * types:remove dataitem from writeinteractionresult (eadb1a1)\n * types: use gql node interface for dataprotocoltransaction (79cebd9)\n * warp: ensure contract init on read interactions (bc3d1b8)\n\n\n# features\n\n * getcontracts: add get contracts on network specific providers like warpcontract (603d36e)\n * gql util: add smartweave gql utils (5ea3aab)\n * write: add tags support to write interactions on warp-contract and saveobservations (46eb4c9)\n\n\n# 1.0.8 (2024-05-29)\n\n\n# bug fixes\n\n * api: add getpriceforinteration api to ario contract (3b8083c)\n * bundle: minify web bundle (9266676)\n * api: use function map for method name (439ec1f)\n * reserved: add reserved arns name get methods (ad203ef)\n * signer: check if method is property of signer before using (c52783c)\n * signer: modify signer to assume the signer type based on public key being undefined (b775c96)\n * test: add dockerfile for running tests in certain node environments (86cf2ad)\n\n\n# 1.0.7 (2024-05-23)\n\n\n# bug fixes\n\n * contract: add extendlease and increaseundernamesupport apis (1b13b5e)\n * types: fix the atleastone type (ffd0869)\n * deps: force arweavve to 1.15.1 (2448598)\n * contract: make params required - properties and note (89db674)\n * types: update tests and use overwrite type to allow miotoken for certain paramaters (badcece)\n * api: change to increaseundernamelimit (9b72c1e)\n * docs: update ario apis (4af0862)\n * tests: update extend test util to include a test domain (e959b7c)\n * token: add mio and io token classes to exports (f47f7d5)\n * types: add delegated gateway type (c877496)\n * types: export the token types (dfc83ae)\n * types: remove visible types (6ab1fc3)\n * types: update gateway delegates type to use the new gatewaydelegate (ac7e924)\n * warp: bump warp version (db7344d)\n\n\n# 1.0.6 (2024-05-07)\n\n\n# bug fixes\n\n * warp: bump warp to fix aborterror issue on warp imports for web (c9a5613)\n\n\n# 1.0.5 (2024-05-02)\n\n\n# bug fixes\n\n * cjs: provide path alias for warp in cjs export (7f9bf9a)\n * logger: replace winston with bunyan (0488f75)\n * util: add fqdn regex that matches arns contract (e6d7396)\n * utils: manally conver from b64 to b64url to avoid web polyfill issues (766035c)\n * utils: use base64 for fromb64url util (42302ef)\n * warp-contract: correctly throw error in write interaction (c2368dd)\n\n\n# 1.0.4 (2024-04-30)\n\n\n# bug fixes\n\n * ario: update joinnetwork to accept observerwallet param (6a32dd1)\n\n\n# 1.0.3 (2024-04-26)\n\n\n# bug fixes\n\n * signer: set owner before signing data (0b558f5)\n\n\n# 1.0.2 (2024-04-25)\n\n\n# bug fixes\n\n * arweave: default to the arweave node import to avoid issues with browser environments (fc8c26e)\n * cacheurl: use default cache url in warpcontract (a676a3c)\n * init: cleanup init overload methods and tests (fa328d2)\n * lint: address lint issue in ariowriteable (4a3ee89)\n * tsconfig: modify some tsconfig settings to get isolated configs for web/cjs/esm (46b7acc)\n * typeguards: make type guards accept unknowns (7f285bb)\n * types: use generic types and modify the requirements for init functions (9350f78)\n * utils: add writeinteraction types and update base64url logic (4f5476b)\n\n\n# 1.0.1 (2024-04-23)\n\n\n# bug fixes\n\n * docs: improve readme docs interface documentation for ario clients (b0da48c)\n\n\n# 1.0.0 (2024-04-23)\n\n\n# bug fixes\n\n * actions: bump node setup action (4eb49cd)\n * actions: freeze lockfile (dba7313)\n * contractadd cache config in ario constructor (1f3c0ba)\n * ant: add ant contract to exports (a2ff57b)\n * ant: add signer to ant test (4581b8d)\n * ant: default evaluation options for ant apis that do not take an… (#25) (0c8b55d)\n * ant: default evaluation options for ant apis that do not take another parameter (7c59033)\n * ant: default evaluation options for apis that do not require them (72b57d5)\n * ant: fix api for getrecords (c714aa3)\n * apis: remove epoch from distributions and observations (7b2d279)\n * arbundle version: pin version (35ffab6)\n * arbundles: update arbundles import (f02d83f)\n * ario: add cache config in ario constructor (#11) (ecb279d)\n * ario: formatting (c61570a)\n * ario: make state provider nullable and default to remote arns-service provider (fa1cb72)\n * ario: re-add contract default config (2296cc3)\n * ario: remove unused cache property (7f2d02e)\n * build: add setimmediate polyfill for web only (ad36776)\n * build: remove redundant exported type (134319b)\n * cache: remove cache folder (2ac9427)\n * cacheurl: update ario cache url setting pattern to use custom url appropriately (c76e67d)\n * cache: validate arweave id before setting it (5ba1175)\n * casing: revert to lower case casing (b5da0ab)\n * comments: make class logger private, remove comments (7483246)\n * connect: add init static function on ario class to create interaction classes (765f39c)\n * contract configuration: return cache url as well (b4a7bc3)\n * contract functions: correct contract function names (ad9bc56)\n * contracts: add configuration view method and update types (4fae4a2)\n * contracts: remove write method and type from remote contract (740d8b8)\n * contracttxid: make contracttxid require in remote state cache instance (dc82d21)\n * contracttxid: make contracttxid required in remote state cache instance (#10) (bf651bb)\n * ctrl flow: remove else from control flow (4b3c4c2)\n * deps: pin arweave (d39391c)\n * deps: remove axios-retry, will implement later (0218e95)\n * deps: remove extra crypto-browserify (9b42898)\n * deps: remove warp-contracts-deploy from deps (9d4f9fa)\n * docs: remove docs folder (47e8403)\n * drywrite: throw on bad drywrite and continue if successful (5052c0a)\n * eslintignore: remove old file names (415c163)\n * eslint: remove eslint comments and use this signer (32530eb)\n * esm: add polyfills for crypto (dd8fbfe)\n * esm: add polyfills for crypto (#27) (553822c)\n * example web: update ario instatiation (77c6842)\n * example: escape quotes in packagejson for example package json (fb47de0)\n * example: simplify example and remove unused method on remote cache (81637f8)\n * examples: update comments and fix package.json (db7140b)\n * examples: update examples to use devnet (cc037ac)\n * examples: update examples with records methods, and balance methods (a2d2a02)\n * exports: add arweavesigner and arconnectsigner to exports, clean up docs (c7860ed)\n * exports: update exports in indices (f794437)\n * exports: update package exports to have index in src folder (2cce9e3)\n * files: clean git cache of duplicate casing (e9eaa2d)\n * filters: punt filters (1c23cb3)\n * fixture: add type to arns state fixture (5bcac32)\n * formating: format (3f30f77)\n * gar write: fix types and flow on gar write (f5e7774)\n * gateway: update gateway settings to support autostake (82c6840)\n * generics: use named generic (4b647f0)\n * gitignore: remove cache from gitignore (2867abc)\n * git: test fix with file casing issue (c3611ee)\n * headers: use source-version for header (2b26d88)\n * http: add headers sdk headers to http config (94810ed)\n * husky: add commit hooks (885ce68)\n * imports: update to use indexed imports from warp (1242568)\n * indentation: fix indentation in examples (a266731)\n * interface: removed filters and added base records types (849834d)\n * interface: rename interface to contractcache (2a0a765)\n * jest: remove extra config (014fbde)\n * lint: disable no-any warning certain types (de5f108)\n * lint: formatting (21224e2)\n * logger, errors, http: updated to axios and axios-retry, added winston logger, more extensive custom error objects (b944f4d)\n * logger: remove unused logger property (9501d1d)\n * logs: removing debug logs (f025171)\n * mixin: filter private methods in mixin util (beb8610)\n * naming: change epoch to epochstartheight (908971c)\n * naming: rename getrecord[s] to getarnsrecord[s] (bd3d4bc)\n * overloads: only accept warp contract as a contract config for ariowritable (e3c97e9)\n * polyfills: rollback polyfill on logger (0cdb2f0)\n * postinstall: remove husky postinstall script (c74a135)\n * readme: add grammar and example recs (ecc07f7)\n * readme: condense quick start (b35e5bd)\n * readme: refactor api list to header tags (817d99b)\n * readme: update ant header (77235ce)\n * readme: update ant usage description (70c8520)\n * readme: update joinnetwork docs (9fcf440)\n * readme: update quick start (a60d96a)\n * readme: update readme with default provider example (68a5a16)\n * readme: update readme with examples (d9ee23e)\n * record records: update key to use result instead of record (90314db)\n * records: remove contracttxid filter remove lodash shrink readme (50669e1)\n * records: use state endpoint to fetch records (2f02c53)\n * recs: modify the interfaces for contracts and implement with warp and remote service (#13) (56ebb08)\n * release: remove release assets entirely (9d5a1b3)\n * release: update github release config to publish packages to github (5534d9d)\n * remote: getstate not properly setting evalto in http requests (55745c1)\n * safety: update type safety checks (32eebbc)\n * setimmediate: make set immediate a build dependency as it is required by the node winston (9292eaa)\n * signer: check that contract is connected before trying to write (d352e9c)\n * signer: check that contract is connected before trying to write (#29) (536a116)\n * signer: fix signer in warpcontracts - update tests (ea9448f)\n * signer: fix signer in warpcontracts - update tests (#32) (16d69d8)\n * signer: remove jwk use, ignore web example for now (bc7e577)\n * signer: remove signer, will do in other pr (d02276d)\n * signer: remove use of jwk, simplify constructor (#22) (d2ef573)\n * signer: update ant to have signer (c7f8eee)\n * structure: update cache provider folder to be named caches (844c1aa)\n * structure: use snake case for file and folder names (37f27d3)\n * test warp-contract: use beforeall to read env vars (95cc019)\n * tests: add test cases as a const (8458185)\n * tests: add test for custom ario client config (0e6142b)\n * tests: change control flow pattern to .catch instead of trycatch (883de51)\n * tests: dont make blockheight or sortkey undefined but rather evalto (f76a201)\n * tests: instantiate new ant to connect in tests (9869415)\n * tests: remove drywrite from writeinteraction, update tests (bc1becc)\n * tests: remove fixture and use live service for tests (30d3e8c)\n * tests: test 404 response (590dea6)\n * tests: update ario test (4208bd0)\n * tests: update client instantiation test to check read vs write clients (059653c)\n * tests: update docker compose params (a71befd)\n * tests: update gateways test (1fcb3e6)\n * tests: update stubs in tests (e4bbc6e)\n * tests: update test to match jest syntax (553bdbb)\n * tests: update tests for named prop expectation (4ea04a7)\n * tests: update tests to use younger contract, add evalparams config (ae890c8)\n * tests: update tests with constants and update types (1bdcfeb)\n * tests: update tests with new name (2cd1b5c)\n * tests: update with new names on methods (619c193)\n * tests: use angela for testing (10f30fe)\n * tests: use http not https in tests (fddba1e)\n * tests: use process vars as priority url (faab4f3)\n * test: update test to use arweavetransactionid class (f6c4f8b)\n * tsconfig, names: reverted tsconfig to nodenext resolution, changed naming convention on provider, removed extraeneous error classes, rolled back axios-retry to match our tsconfig settings (d412d44)\n * tyeps: set types to objects rather than top level params for easier readability (edfd77b)\n * type: rename all type implementations (5959045)\n * types and tests: update evalto to allow undefined sortkey and block and test that (a59f05c)\n * types: add @ to records (53601c1)\n * types: make props nullable on certain read apis (f8ff552)\n * types: remove any type (5c80242)\n * types: remove any types (d8d910b)\n * types: remove arweavetransactionid type for now (3adf53b)\n * types: remove unnecesssary empty defaults (7d14edb)\n * types: rename signer to contractsigner (87d6c90)\n * types: require atleast one param to update gateway settings (857ebdc)\n * types: update interaction type to only use read for now (2c02e90)\n * types: update tests, readme, and types (e9985dd)\n * types: use partial write type (fa6a638)\n * types: use string instead of any (014a262)\n * validate id: make validator a private method (dce4a94)\n * validity util: isblockheight check more strict (2b28675)\n * warp contract: added test for getting state after connecting with warp (060ee2c)\n * warp-contract: provide logger - update istransaction flow ctrl - use typed props (5f6e0a1)\n * warp-contracts: bump warp to 1.4.38 - fixed warp exports (af4a20b)\n * winston: move the winston polyfill - this will prevent any esm based web projects from getting polyfill issues (c8b7998)\n * write: add dry run - sync state - abortsignal - update interface (970bdef)\n * write: update utils - change error flow - update arweave constructor props (0a81c92)\n * write: update write methods on warp (9c0540b)\n * yarn: update lockfile (fd5e0ee)\n\n\n# features\n\n * ant: add ant read interface (c941c96)\n * ant: create ant contract class for interacting with ant contracts (6eb7ef5)\n * ants: add readable-writable framework to the ant client and implement write methods (3019f53)\n * ario contract: add distributions and observation apis (21e38d1)\n * ariocontract: update ario interface and ariocontract interface (5d87e2e)\n * auctions: add auctions apis (faf08c5)\n * contract: add distribution, observations apis, update readme and examples (0208317)\n * contract: create new contract classes that impelement both warp and remote cache for ant contract and ar-io contracts (855da2d)\n * first issue: setup examples, readme, and initial gateways provider (5a9e232)\n * gar methods: add gar write methods to the ario client (e01b08b)\n * inital providers: scaffold initial providers (4949514)\n * io transfer: add transfer api to ario writable client (0d37623)\n * observerations: add saveobservations write interaction (8dd977c)\n * observers: add api for fetching prescribed observers (a18e130)\n * observers: add api for fetching prescribed observers (#17) (17ce6de)\n * pe-5742: add records api to arns remote cache (#8) (c46cd39)\n * pe-5751: add blockheight and sortkey eval filters (#12) (832a1ad)\n * pe-5758: add signer to ario class (#20) (1b82077)\n * pe-5759: observations and distributions apis (#16) (dded361)\n * pe-5773: add auctions read apis (#18) (e0c6fca)\n * pe-5800: add epoch apis (48ee4ba)\n * pe-5800: epoch apis (#15) (70563b1)\n * pe-5825: ant read interface (#19) (6a0c477)\n * records: add records api to arns remote cache (1b7f54f)\n * signer: add arweave signer to ario class (7e08097)\n * write: add write interface and base implementation on warp-contract (6dfc969)",charsets:{}},{title:"ar-io sdk",frontmatter:{prev:!1,next:!1,permalink:"/sdk"},regularPath:"/guides/sdk.html",relativePath:"guides/sdk.md",key:"v-e8e2a6fc",path:"/sdk/",headers:[{level:2,title:"Prerequisites",slug:"prerequisites",normalizedTitle:"prerequisites",charIndex:218},{level:2,title:"Installation",slug:"installation",normalizedTitle:"installation",charIndex:269},{level:2,title:"Quick Start",slug:"quick-start",normalizedTitle:"quick start",charIndex:337},{level:2,title:"Usage",slug:"usage",normalizedTitle:"usage",charIndex:1523},{level:3,title:"Web",slug:"web",normalizedTitle:"web",charIndex:196},{level:2,title:"Typescript",slug:"typescript",normalizedTitle:"typescript",charIndex:2227},{level:2,title:"IOToken & mIOToken",slug:"iotoken-miotoken",normalizedTitle:"iotoken &amp; miotoken",charIndex:null},{level:3,title:"Converting IO to mIO",slug:"converting-io-to-mio",normalizedTitle:"converting io to mio",charIndex:3829},{level:2,title:"IO Process",slug:"io-process",normalizedTitle:"io process",charIndex:4119},{level:3,title:"APIs",slug:"apis",normalizedTitle:"apis",charIndex:4134},{level:3,title:"Configuration",slug:"configuration",normalizedTitle:"configuration",charIndex:21911},{level:2,title:"Arweave Name Tokens (ANT's)",slug:"arweave-name-tokens-ant-s",normalizedTitle:"arweave name tokens (ant's)",charIndex:22584},{level:3,title:"APIs",slug:"apis-2",normalizedTitle:"apis",charIndex:4134},{level:3,title:"Configuration",slug:"configuration-2",normalizedTitle:"configuration",charIndex:21911},{level:2,title:"Logging",slug:"logging",normalizedTitle:"logging",charIndex:28284},{level:3,title:"Configuration",slug:"configuration-3",normalizedTitle:"configuration",charIndex:21911},{level:2,title:"Pagination",slug:"pagination",normalizedTitle:"pagination",charIndex:28840},{level:2,title:"Developers",slug:"developers",normalizedTitle:"developers",charIndex:30161},{level:3,title:"Requirements",slug:"requirements",normalizedTitle:"requirements",charIndex:30176},{level:3,title:"Setup & Build",slug:"setup-build",normalizedTitle:"setup &amp; build",charIndex:null},{level:3,title:"Testing",slug:"testing",normalizedTitle:"testing",charIndex:30413},{level:3,title:"Linting & Formatting",slug:"linting-formatting",normalizedTitle:"linting &amp; formatting",charIndex:null},{level:3,title:"Architecture",slug:"architecture",normalizedTitle:"architecture",charIndex:30869}],headersStr:"Prerequisites Installation Quick Start Usage Web Typescript IOToken & mIOToken Converting IO to mIO IO Process APIs Configuration Arweave Name Tokens (ANT's) APIs Configuration Logging Configuration Pagination Developers Requirements Setup & Build Testing Linting & Formatting Architecture",content:'# ar-io sdk\n\nThe ar.io SDK provides functionality for interacting with the ar.io ecosystem of services (e.g. gateways and observers) and protocols (e.g. ArNS). It is available for both NodeJS and Web environments.\n\n\n# Prerequisites\n\n * node>=v18.0.0\n * npm or yarn\n\n\n# Installation\n\nnpm install @ar.io/sdk\n\n\nor\n\nyarn add @ar.io/sdk\n\n\n\n# Quick Start\n\nLoading the gateway list in NodeJS.\n\nimport { IO } from \'@ar.io/sdk\';\n\nconst io = IO.init();\nconst gateways = await io.getGateways();\n\nconsole.log(gateways);\n\n\nOutput\n\n{\n  "QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ": {\n    "end": 0,\n    "observerWallet": "IPdwa3Mb_9pDD8c2IaJx6aad51Ss-_TfStVwBuhtXMs",\n    "operatorStake": 250000000000, // value in mIO\n    "settings": {\n      "fqdn": "ar-io.dev",\n      "label": "AR.IO Test",\n      "note": "Test Gateway operated by PDS for the AR.IO ecosystem.",\n      "port": 443,\n      "properties": "raJgvbFU-YAnku-WsupIdbTsqqGLQiYpGzoqk9SCVgY",\n      "protocol": "https"\n    },\n    "start": 1256694,\n    "stats": {\n      "failedConsecutiveEpochs": 0,\n      "passedEpochCount": 30,\n      "submittedEpochCount": 30,\n      "totalEpochParticipationCount": 31,\n      "totalEpochsPrescribedCount": 31\n    },\n    "status": "joined",\n    "vaults": {},\n    "weights": {\n      "stakeWeight": 25,\n      "tenureWeight": 0.9031327160493827,\n      "gatewayRewardRatioWeight": 0.96875,\n      "observerRewardRatioWeight": 0.96875,\n      "compositeWeight": 21.189222170982834,\n      "normalizedCompositeWeight": 0.27485583057217183\n    }\n  }\n}\n\n\n\n# Usage\n\nThe SDK is provided in both CommonJS and ESM formats and is compatible with bundlers such as Webpack, Rollup, and ESbuild. Utilize the appropriately named exports provided by this SDK\'s package.json based on your project\'s configuration. Refer to the examples directory to see how to use the SDK in various environments.\n\n\n# Web\n\n# Bundlers (Webpack, Rollup, ESbuild, etc.)\n\nimport { IO } from \'@ar.io/sdk/web\';\n\n// set up client\nconst io = IO.init();\n// fetch gateways\nconst gateways = await io.getGateways();\n\n\nNote: polyfills are only provided when using the named @ar.io/sdk/web export (which requires moduleResolution: nodenext in tsconfig.json). If you are using the default export within a Typescript project (e.g. moduleResolution: node), you will need to provide your own polyfills - specifically crypto, fs and buffer. Refer to examples/webpack and examples/vite for references in how to properly provide those polyfills. For other project configurations, refer to your bundler\'s documentation for more information on how to provide the necessary polyfills.\n\n# Browser\n\n<script type="module">\n  import { IO } from \'https://unpkg.com/@ar.io/sdk\';\n\n  // set up client\n  const io = IO.init();\n  // fetch gateways\n  const gateways = await io.getGateways();\n<\/script>\n\n\n# Node\n\n# ESM (NodeNext)\n\nimport { IO } from \'@ar.io/sdk/node\';\n\n// set up client\nconst io = IO.init();\n// fetch gateways\nconst gateways = await io.getGateways();\n\n\n# CJS\n\nimport { IO } from \'@ar.io/sdk\';\n\n// set up client\nconst io = IO.init();\n// fetch gateways\nconst gateways = await io.getGateways();\n\n\n\n# Typescript\n\nThe SDK provides TypeScript types. When you import the SDK in a TypeScript project types are exported from ./lib/types/[node/web]/index.d.ts and should be automatically recognized by package managers, offering benefits such as type-checking and autocompletion.\n\nNOTE: Typescript version 5.3 or higher is recommended.\n\n\n# IOToken & mIOToken\n\nThe ArIO contract stores all values as mIO (milli-IO) to avoid floating-point arithmetic issues. The SDK provides an IOToken and mIOToken classes to handle the conversion between IO and mIO, along with rounding logic for precision.\n\nAll contract interactions expect values in mIO. If numbers are provided as inputs, they are assumed to be in raw mIO values.\n\n\n# Converting IO to mIO\n\nimport { IOToken, mIOToken } from \'@ar.io/sdk\';\n\nconst ioValue = 1;\nconst mIOValue = new IOToken(ioValue).toMIO();\nconsole.log(mIOValue); // 1000000 (mIO)\n\nconst mIOValue = 1_000_000;\nconst ioValue = new mIOToken(mIOValue).toIO();\nconsole.log(ioValue); // 1 (IO)\n\n\n\n# IO Process\n\n\n# APIs\n\n# init({ signer })\n\nFactory function to that creates a read-only or writeable client. By providing a signer additional write APIs that require signing, like joinNetwork and delegateStake are available. By default, a read-only client is returned and no write APIs are available.\n\n// read-only client\nconst io = IO.init()\n\n// read-write client for browser environments\nconst io = IO.init({ signer: new ArConnectSigner(window.arweaveWallet, Arweave.init({}))});\n\n// read-write client for node environments\nconst io = IO.init({ signer: new ArweaveSigner(JWK) });\n\n\n# getInfo()\n\nRetrieves the information of the IO process.\n\nconst io = IO.init();\nconst info = await io.getInfo();\n\n\nOutput\n\n{\n  "name": "Testnet IO",\n  "ticker": "tIO",\n  "owner": "QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ",\n  "denomination": "IO"\n}\n\n\n# getBalance({ address })\n\nRetrieves the balance of the specified wallet address.\n\nconst io = IO.init();\n// the balance will be returned in mIO as a value\nconst balance = await io\n  .getBalance({\n    address: \'INSERT_WALLET_ADDRESS\',\n  })\n  .then((balance) => new mIOToken().toIO());\n\nconsole.log(balance.valueOf());\n\n\nOutput\n\n// value in IO\n1_000_000\n\n\n# getBalances({ cursor, limit, sortBy, sortOrder })\n\nRetrieves the balances of the IO process in mIO, paginated and sorted by the specified criteria. The cursor used for pagination is the last wallet address from the previous request.\n\nconst io = IO.init();\nconst balances = await io.getBalances({\n  cursor: \'-4xgjroXENKYhTWqrBo57HQwvDL51mMdfsdsxJy6Y2Z_sA\',\n  limit: 1,\n  sortBy: \'balance\',\n  sortOrder: \'desc\',\n});\n\n\nOutput\n\n{\n  "items": [\n    {\n      "address": "-4xgjroXENKYhTWqrBo57HQwvDL51mMvSxJy6Y2Z_sA",\n      "balance": 1000000\n    }\n  ],\n  "hasMore": true,\n  "nextCursor": "-7vXsQZQDk8TMDlpiSLy3CnLi5PDPlAaN2DaynORpck",\n  "totalItems": 1789,\n  "sortBy": "balance",\n  "sortOrder": "desc"\n}\n\n\n# getGateway({ address })\n\nRetrieves a gateway\'s info by its staking wallet address.\n\nconst io = IO.init();\nconst gateway = await io.getGateway({\n  address: \'INSERT_GATEWAY_ADDRESS\',\n});\n\n\nOutput\n\n{\n  "end": 0,\n  "observerWallet": "IPdwa3Mb_9pDD8c2IaJx6aad51Ss-_TfStVwBuhtXMs",\n  "operatorStake": 250000000000, // value in mIO\n  "settings": {\n    "fqdn": "ar-io.dev",\n    "label": "AR.IO Test",\n    "note": "Test Gateway operated by PDS for the AR.IO ecosystem.",\n    "port": 443,\n    "properties": "raJgvbFU-YAnku-WsupIdbTsqqGLQiYpGzoqk9SCVgY",\n    "protocol": "https"\n  },\n  "start": 1256694,\n  "stats": {\n    "failedConsecutiveEpochs": 0,\n    "passedEpochCount": 30,\n    "submittedEpochCount": 30,\n    "totalEpochParticipationCount": 31,\n    "totalEpochsPrescribedCount": 31\n  },\n  "status": "joined",\n  "vaults": {}\n}\n\n\n# getGateways({ cursor, limit, sortBy, sortOrder })\n\nRetrieves registered gateways of the IO process, using pagination and sorting by the specified criteria. The cursor used for pagination is the last gateway address from the previous request.\n\nconst io = IO.init();\nconst gateways = await io.getGateways({\n  limit: 1,\n  sortOrder: \'desc\',\n  sortBy: \'operatorStake\',\n});\n\n\nAvailable sortBy options are any of the keys on the gateway object, e.g. operatorStake, start, status, settings.fqdn, settings.label, settings.note, settings.port, settings.protocol, stats.failedConsecutiveEpochs, stats.passedConsecutiveEpochs, etc.\n\nOutput\n\n{\n  "items": [\n    {\n      "gatewayAddress": "QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ",\n      "observerAddress": "IPdwa3Mb_9pDD8c2IaJx6aad51Ss-_TfStVwBuhtXMs",\n      "operatorStake": 250000000000,\n      "settings": {\n        "fqdn": "ar-io.dev",\n        "label": "AR.IO Test",\n        "note": "Test Gateway operated by PDS for the AR.IO ecosystem.",\n        "port": 443,\n        "properties": "raJgvbFU-YAnku-WsupIdbTsqqGLQiYpGzoqk9SCVgY",\n        "protocol": "https"\n      },\n      "startTimestamp": 1720720620813,\n      "stats": {\n        "failedConsecutiveEpochs": 0,\n        "passedEpochCount": 30,\n        "submittedEpochCount": 30,\n        "totalEpochParticipationCount": 31,\n        "totalEpochsPrescribedCount": 31\n      },\n      "status": "joined",\n      "vaults": {}\n    }\n  ],\n  "hasMore": true,\n  "nextCursor": "-4xgjroXENKYhTWqrBo57HQwvDL51mMdfsdsxJy6Y2Z_sA",\n  "totalItems": 316,\n  "sortBy": "operatorStake",\n  "sortOrder": "desc"\n}\n\n\n# getArNSRecord({ name })\n\nRetrieves the record info of the specified ArNS name.\n\nconst io = IO.init();\nconst record = await io.getArNSRecord({ name: \'ardrive\' });\n\n\nOutput\n\n{\n  "processId": "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n  "endTimestamp": 1711122739,\n  "startTimestamp": 1694101828,\n  "type": "lease",\n  "undernames": 100\n}\n\n\n# getArNSRecords({ cursor, limit, sortBy, sortOrder })\n\nRetrieves all registered ArNS records of the IO process, paginated and sorted by the specified criteria. The cursor used for pagination is the last ArNS name from the previous request.\n\nconst io = IO.init();\n// get the 5 newest names\nconst records = await io.getArNSRecords({\n  limit: 5,\n  sortBy: \'startTimestamp\',\n  sortOrder: \'desc\',\n});\n\n\nAvailable sortBy options are any of the keys on the record object, e.g. name, processId, endTimestamp, startTimestamp, type, undernames.\n\nOutput\n\n{\n  "items": [\n    {\n      "name": "ao",\n      "processId": "eNey-H9RB9uCdoJUvPULb35qhZVXZcEXv8xds4aHhkQ",\n      "purchasePrice": 75541282285,\n      "startTimestamp": 1720720621424,\n      "type": "permabuy",\n      "undernames": 10\n    },\n    {\n      "name": "ardrive",\n      "processId": "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n      "endTimestamp": 1720720819969,\n      "startTimestamp": 1720720620813,\n      "type": "lease",\n      "undernames": 100\n    },\n    {\n      "name": "arweave",\n      "processId": "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n      "endTimestamp": 1720720819969,\n      "startTimestamp": 1720720620800,\n      "type": "lease",\n      "undernames": 100\n    },\n    {\n      "name": "ar-io",\n      "processId": "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n      "endTimestamp": 1720720819969,\n      "startTimestamp": 1720720619000,\n      "type": "lease",\n      "undernames": 100\n    },\n    {\n      "name": "fwd",\n      "processId": "bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM",\n      "endTimestamp": 1720720819969,\n      "startTimestamp": 1720720220811,\n      "type": "lease",\n      "undernames": 100\n    }\n  ],\n  "hasMore": true,\n  "nextCursor": "fwdresearch",\n  "totalItems": 21740,\n  "sortBy": "startTimestamp",\n  "sortOrder": "desc"\n}\n\n\n# getObservations({ epochIndex })\n\nReturns the epoch-indexed observation list.\n\nconst io = IO.init();\nconst observations = await io.getObservations();\n\n\nOutput\n\n{\n  "0": {\n    "failureSummaries": {\n      "-Tk2DDk8k4zkwtppp_XFKKI5oUgh6IEHygAoN7mD-w8": [\n        "Ie2wEEUDKoU26c7IuckHNn3vMFdNQnMvfPBrFzAb3NA",\n        "Ie2wEEUDKoU26c7IuckHNn3vMFdNQnMvfPBrFzAb3NA"\n      ]\n    },\n    "reports": {\n      "IPdwa3Mb_9pDD8c2IaJx6aad51Ss-_TfStVwBuhtXMs": "B6UUjKWjjEWDBvDSMXWNmymfwvgR9EN27z5FTkEVlX4",\n      "Ie2wEEUDKoU26c7IuckHNn3vMFdNQnMvfPBrFzAb3NA": "7tKsiQ2fxv0D8ZVN_QEv29fZ8hwFIgHoEDrpeEG0DIs",\n      "osZP4D9cqeDvbVFBaEfjIxwc1QLIvRxUBRAxDIX9je8": "aatgznEvC_UPcxp1v0uw_RqydhIfKm4wtt1KCpONBB0",\n      "qZ90I67XG68BYIAFVNfm9PUdM7v1XtFTn7u-EOZFAtk": "Bd8SmFK9-ktJRmwIungS8ur6JM-JtpxrvMtjt5JkB1M"\n    }\n  }\n}\n\n\n# getDistributions({ epochIndex })\n\nReturns the current rewards distribution information.\n\nconst io = IO.init();\nconst distributions = await io.getDistributions();\n\n\nOutput\n\n{\n  "epochEndHeight": 1382379,\n  "epochPeriod": 43,\n  "epochStartHeight": 1381660,\n  "epochZeroStartHeight": 1350700,\n  "nextDistributionHeight": 1382394\n}\n\n\n# getEpoch({ epochIndex })\n\nReturns the epoch data for the specified block height.\n\nconst io = IO.init();\nconst epoch = await io.getEpoch({ epochIndex: 0 });\n\n\nOutput\n\n{\n  "epochIndex": 0,\n  "startTimestamp": 1694101828,\n  "endTimestamp": 1711122739,\n  "startHeight": 1350700,\n  "distributionTimestamp": 1711122739,\n  "observations": {\n    "failureSummaries": {\n      "-Tk2DDk8k4zkwtppp_XFKKI5oUgh6IEHygAoN7mD-w8": [\n        "Ie2wEEUDKoU26c7IuckHNn3vMFdNQnMvfPBrFzAb3NA"\n      ]\n    },\n    "reports": {\n      "IPdwa3Mb_9pDD8c2IaJx6aad51Ss-_TfStVwBuhtXMs": "B6UUjKWjjEWDBvDSMXWNmymfwvgR9EN27z5FTkEVlX4"\n    }\n  },\n  "prescribedNames": ["ardrive", "ar-io", "arweave", "fwd", "ao"],\n  "prescribedObservers": [\n    {\n      "gatewayAddress": "2Fk8lCmDegPg6jjprl57-UCpKmNgYiKwyhkU4vMNDnE",\n      "observerAddress": "2Fk8lCmDegPg6jjprl57-UCpKmNgYiKwyhkU4vMNDnE",\n      "stake": 10000000000, // value in mIO\n      "start": 1292450,\n      "stakeWeight": 1,\n      "tenureWeight": 0.4494598765432099,\n      "gatewayRewardRatioWeight": 1,\n      "observerRewardRatioWeight": 1,\n      "compositeWeight": 0.4494598765432099,\n      "normalizedCompositeWeight": 0.002057032496835938\n    }\n  ],\n  "distributions": {\n    "distributedTimestamp": 1711122739,\n    "totalEligibleRewards": 100000000,\n    "rewards": {\n      "IPdwa3Mb_9pDD8c2IaJx6aad51Ss-_TfStVwBuhtXMs": 100000000\n    }\n  }\n}\n\n\n# getCurrentEpoch()\n\nReturns the current epoch data.\n\nconst io = IO.init();\nconst epoch = await io.getCurrentEpoch();\n\n\nOutput\n\n{\n  "epochIndex": 0,\n  "startTimestamp": 1694101828,\n  "endTimestamp": 1711122739,\n  "startHeight": 1350700,\n  "distributionTimestamp": 1711122739,\n  "observations": {\n    "failureSummaries": {\n      "-Tk2DDk8k4zkwtppp_XFKKI5oUgh6IEHygAoN7mD-w8": [\n        "Ie2wEEUDKoU26c7IuckHNn3vMFdNQnMvfPBrFzAb3NA"\n      ]\n    },\n    "reports": {\n      "IPdwa3Mb_9pDD8c2IaJx6aad51Ss-_TfStVwBuhtXMs": "B6UUjKWjjEWDBvDSMXWNmymfwvgR9EN27z5FTkEVlX4"\n    }\n  },\n  "prescribedNames": ["ardrive", "ar-io", "arweave", "fwd", "ao"],\n  "prescribedObservers": [\n    {\n      "gatewayAddress": "2Fk8lCmDegPg6jjprl57-UCpKmNgYiKwyhkU4vMNDnE",\n      "observerAddress": "2Fk8lCmDegPg6jjprl57-UCpKmNgYiKwyhkU4vMNDnE",\n      "stake": 10000000000, // value in mIO\n      "start": 1292450,\n      "stakeWeight": 1,\n      "tenureWeight": 0.4494598765432099,\n      "gatewayRewardRatioWeight": 1,\n      "observerRewardRatioWeight": 1,\n      "compositeWeight": 0.4494598765432099,\n      "normalizedCompositeWeight": 0.002057032496835938\n    }\n  ],\n  "distributions": {\n    "distributedTimestamp": 1711122739,\n    "totalEligibleRewards": 100000000,\n    "rewards": {\n      "IPdwa3Mb_9pDD8c2IaJx6aad51Ss-_TfStVwBuhtXMs": 100000000\n    }\n  }\n}\n\n\n# getPrescribedObservers({ epochIndex })\n\nRetrieves the prescribed observers of the IO process. To fetch prescribed observers for a previous epoch set the epochIndex to the desired epoch.\n\nconst io = IO.init();\nconst observers = await io.getPrescribedObservers({ epochIndex: 0 });\n\n\nOutput\n\n[\n  {\n    "gatewayAddress": "BpQlyhREz4lNGS-y3rSS1WxADfxPpAuing9Lgfdrj2U",\n    "observerAddress": "2Fk8lCmDegPg6jjprl57-UCpKmNgYiKwyhkU4vMNDnE",\n    "stake": 10000000000, // value in mIO\n    "start": 1296976,\n    "stakeWeight": 1,\n    "tenureWeight": 0.41453703703703704,\n    "gatewayRewardRatioWeight": 1,\n    "observerRewardRatioWeight": 1,\n    "compositeWeight": 0.41453703703703704,\n    "normalizedCompositeWeight": 0.0018972019546783507\n  }\n]\n\n\n# getTokenCost({ intent, ...args })\n\nCalculates the price in mIO to perform the interaction in question, e.g. a Buy-record interaction, where args are the specific params for that interaction.\n\nconst price = await io\n  .getTokenCost({\n    intent: \'Buy-Record\',\n    name: \'ar-io\',\n    type: \'permabuy\',\n  })\n  .then((p) => new mIOToken(p).toIO());\n// Price is returned as mio, convert to IO and log it out\nconsole.log({ price: price.valueOf() });\n\n\nOutput\n\n{ "price": 1642.62 }\n\n\n# joinNetwork( params )\n\nJoins a gateway to the ar.io network via its associated wallet.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.joinNetwork(\n  {\n    qty: new IOToken(10_000).toMIO(), // minimum operator stake allowed\n    autoStake: true, // auto-stake operator rewards to the gateway\n    allowDelegatedStaking: true, // allows delegated staking\n    minDelegatedStake: new IOToken(100).toMIO(), // minimum delegated stake allowed\n    delegateRewardShareRatio: 10, // percentage of rewards to share with delegates (e.g. 10%)\n    label: \'john smith\', // min 1, max 64 characters\n    note: \'The example gateway\', // max 256 characters\n    properties: \'FH1aVetOoulPGqgYukj0VE0wIhDy90WiQoV3U2PeY44\', // Arweave transaction ID containing additional properties of the Gateway\n    observerWallet: \'0VE0wIhDy90WiQoV3U2PeY44FH1aVetOoulPGqgYukj\', // wallet address of the observer, must match OBSERVER_WALLET on the observer\n    fqdn: \'example.com\', // fully qualified domain name - note: you must own the domain and set the OBSERVER_WALLET on your gateway to match `observerWallet`\n    port: 443, // port number\n    protocol: \'https\', // only \'https\' is supported\n  },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# leaveNetwork()\n\nSets the gateway as leaving on the ar.io network. Requires signer to be provided on IO.init to sign the transaction. The gateway\'s operator and delegated stakes are vaulted and will be returned after the leave periods. The gateway will be removed from the network after the leave period.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\n\nconst { id: txId } = await io.leaveNetwork(\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# updateGatewaySettings( gatewaySettings )\n\nWrites new gateway settings to the caller\'s gateway configuration.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.updateGatewaySettings(\n  {\n    // any other settings you want to update\n    minDelegatedStake: new IOToken(100).toMIO(),\n  },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n// t4Xr0_J4Iurt7caNST02cMotaz2FIbWQ4Kbj616RHl3\n\n\n# increaseDelegateStake({ target, qty })\n\nIncreases the caller\'s stake on the target gateway.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.increaseDelegateStake(\n  {\n    target: \'t4Xr0_J4Iurt7caNST02cMotaz2FIbWQ4Kbj616RHl3\',\n    qty: new IOToken(100).toMIO(),\n  },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# decreaseDelegateStake({ target, qty })\n\nDecrease the caller\'s stake on the target gateway.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.decreaseDelegateStake(\n  {\n    target: \'t4Xr0_J4Iurt7caNST02cMotaz2FIbWQ4Kbj616RHl3\',\n    qty: new IOToken(100).toMIO(),\n  },\n  {\n    tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }],\n  },\n);\n\n\n# increaseOperatorStake({ qty })\n\nIncreases the caller\'s operator stake. Must be executed with a wallet registered as a gateway operator.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.increaseOperatorStake(\n  {\n    qty: new IOToken(100).toMIO(),\n  },\n  {\n    tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }],\n  },\n);\n\n\n# decreaseOperatorStake({ qty })\n\nDecreases the caller\'s operator stake. Must be executed with a wallet registered as a gateway operator.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.decreaseOperatorStake(\n  {\n    qty: new IOToken(100).toMIO(),\n  },\n  {\n    tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }],\n  },\n);\n\n\n# saveObservations({ reportTxId, failedGateways })\n\nSaves the observations of the current epoch.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.saveObservations(\n  {\n    reportTxId: \'fDrr0_J4Iurt7caNST02cMotaz2FIbWQ4Kcj616RHl3\',\n    failedGateways: [\'t4Xr0_J4Iurt7caNST02cMotaz2FIbWQ4Kbj616RHl3\'],\n  },\n  {\n    tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }],\n  },\n);\n\n\n# transfer({ target, qty, denomination })\n\nTransfers IO or mIO depending on the denomination selected, defaulting as IO, to the designated target recipient address.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.transfer(\n  {\n    target: \'-5dV7nk7waR8v4STuwPnTck1zFVkQqJh5K9q9Zik4Y5\',\n    qty: new IOToken(1000).toMIO(),\n    denomination: \'IO\',\n  },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# increaseUndernameLimit({ name, qty })\n\nIncreases the undername support of a domain up to a maximum of 10k. Domains, by default, support up to 10 undernames.\n\nNOTE: Requires signer to be provided on IO.init to sign the transaction.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.increaseUndernameLimit(\n  {\n    name: \'ar-io\',\n    qty: 420,\n  },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# extendLease({ name, years })\n\nExtends the lease of a registered ArNS domain, with an extension of 1-5 years depending on grace period status. Permanently registered domains cannot be extended.\n\nconst io = IO.init({ signer: new ArweaveSigner(jwk) });\nconst { id: txId } = await io.extendLease(\n  {\n    name: \'ar-io\',\n    years: 1,\n  },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n\n# Configuration\n\nThe IO client class exposes APIs relevenat to the ar.io process. It can be configured to use any AO Process ID that adheres to the IO Network Spec. By default, it will use the current IO testnet process. Refer to AO Connect for more information on how to configure an IO process to use specific AO infrastructure.\n\n// provide a custom ao infrastructure and process id\nconst io = IO.init({\n  process: new AoProcess({\n    processId: \'IO_PROCESS_ID\'\n    ao: connect({\n      MU_URL: \'https://mu-testnet.xyz\',\n      CU_URL: \'https://cu-testnet.xyz\',\n      GRAPHQL_URL: \'https://arweave.net/graphql\',\n      GATEWAY_URL: \'https://arweave.net\',\n    })\n  })\n});\n\n\n\n# Arweave Name Tokens (ANT\'s)\n\nThe ANT client class exposes APIs relevant to compliant Arweave Name Token processes. It can be configured to use any process ID that adheres to the ANT process spec. You must provide either a custom process data provider or a processId to the ANT class constructor to use.\n\n\n# APIs\n\n# init({signer, processId })\n\nFactory function to that creates a read-only or writeable client. By providing a signer additional write APIs that require signing, like setRecord and transfer are available. By default, a read-only client is returned and no write APIs are available.\n\n// in a browser environment with ArConnect\nconst ant = ANT.init({\n  signer: new ArConnectSigner(window.arweaveWallet, Arweave.init({})),\n  processId: \'bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM\'\n});\n\n// in a node environment\nconst ant = ANT.init({\n  signer: new ArweaveSigner(JWK),\n  processId: \'bh9l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM\'\n});\n\n\n# getInfo()\n\nRetrieves the information about the ANT process.\n\nconst info = await ant.getInfo();\n\n\nOutput\n\n{\n  "name": "Ardrive",\n  "ticker": "ANT-ARDRIVE",\n  "owner": "QGWqtJdLLgm2ehFWiiPzMaoFLD50CnGuzZIPEdoDRGQ"\n}\n\n\n# getOwner()\n\nReturns the owner of the configured ANT process.\n\nconst owner = await ant.getOwner();\n\n\nOutput\n\n"ccp3blG__gKUvG3hsGC2u06aDmqv4CuhuDJGOIg0jw4"\n\n\n# getControllers()\n\nReturns the controllers of the configured ANT process.\n\nconst controllers = await ant.getControllers();\n\n\nOutput\n\n["ccp3blG__gKUvG3hsGC2u06aDmqv4CuhuDJGOIg0jw4"]\n\n\n# getRecords()\n\nReturns all records on the configured ANT process, including the required @ record that resolve connected ArNS names.\n\nconst records = await ant.getRecords();\n\n\nOutput\n\n{\n  "@": {\n    "transactionId": "nOXJjj_vk0Dc1yCgdWD8kti_1iHruGzLQLNNBHVpN0Y",\n    "ttlSeconds": 3600\n  },\n  "cn": {\n    "transactionId": "_HquerT6pfGFXrVxRxQTkJ7PV5RciZCqvMjLtUY0C1k",\n    "ttlSeconds": 3300\n  },\n  "dapp": {\n    "transactionId": "hxlxVgAG0K4o3fVD9T6Q4VBWpPmMZwMWgRh1kcuh3WU",\n    "ttlSeconds": 3600\n  },\n  "logo": {\n    "transactionId": "KKmRbIfrc7wiLcG0zvY1etlO0NBx1926dSCksxCIN3A",\n    "ttlSeconds": 3600\n  },\n  "og": {\n    "transactionId": "YzD_Pm5VAfYpMD3zQCgMUcKKuleGhEH7axlrnrDCKBo",\n    "ttlSeconds": 3600\n  },\n  "og_dapp": {\n    "transactionId": "5iR4wBu4KUV1pUz1YpYE1ARXSRHUT5G2ptMuoN2JDlI",\n    "ttlSeconds": 3600\n  },\n  "og_logo": {\n    "transactionId": "TB2wJyKrPnkAW79DAwlJYwpgdHKpijEJWQfcwX715Co",\n    "ttlSeconds": 3600\n  }\n}\n\n\n# transfer({ target })\n\nTransfers ownership of the ANT to a new target address. Target MUST be an Arweave address.\n\nNOTE: Requires signer to be provided on ANT.init to sign the transaction.\n\nconst { id: txId } = await ant.transfer(\n  { target: \'aGzM_yjralacHIUo8_nQXMbh9l1cy0aksiL_x9M359f\' },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# setController({ controller })\n\nAdds a new controller to the list of approved controllers on the ANT. Controllers can set records and change the ticker and name of the ANT process.\n\nNOTE: Requires signer to be provided on ANT.init to sign the transaction.\n\nconst { id: txId } = await ant.setController(\n  { controller: \'aGzM_yjralacHIUo8_nQXMbh9l1cy0aksiL_x9M359f\' },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# removeController({ controller })\n\nRemoves a controller from the list of approved controllers on the ANT.\n\nNOTE: Requires signer to be provided on ANT.init to sign the transaction.\n\nconst { id: txId } = await ant.removeController(\n  { controller: \'aGzM_yjralacHIUo8_nQXMbh9l1cy0aksiL_x9M359f\' },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# setRecord({ subDomain, transactionId, ttlSeconds })\n\nUpdates or creates a record in the ANT process.\n\nRecords, or undernames are configured with the transactionId - the arweave transaction id the record resolves - and ttlSeconds, the Time To Live in the cache of client applications.\n\nNOTE: Requires signer to be provided on ANT.init to sign the transaction.\n\nconst { id: txId } = await ant.setRecord(\n  {\n    undername: \'@\',\n    transactionId: \'432l1cy0aksiL_x9M359faGzM_yjralacHIUo8_nQXM\'\n    ttlSeconds: 3600\n  },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# removeRecord({ undername })\n\nRemoves a record from the ANT process.\n\nNOTE: Requires signer to be provided on ANT.init to sign the transaction.\n\nconst { id: txId } = await ant.removeRecord(\n  { undername: \'remove-domemain\' },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# setName({ name })\n\nSets the name of the ANT process.\n\nNOTE: Requires signer to be provided on ANT.init to sign the transaction.\n\nconst { id: txId } = await ant.setName(\n  { name: \'My ANT\' },\n  // optional additional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n# setTicker({ ticker })\n\nSets the ticker of the ANT contract.\n\nNOTE: Requires signer to be provided on ANT.init to sign the transaction.\n\nconst { id: txId } = await ant.setTicker(\n  { ticker: \'ANT-NEW-TICKER\' },\n  // optional tags\n  { tags: [{ name: \'App-Name\', value: \'My-Awesome-App\' }] },\n);\n\n\n\n# Configuration\n\nANT clients can be configured to use custom AO processes. Refer to AO Connect for more information on how to configure the AO process to use specific AO infrastructure.\n\nconst ant = ANT.init({\n  process: new AoProcess({\n    processId: \'ANT_PROCESS_ID\'\n    ao: connect({\n      MU_URL: \'https://mu-testnet.xyz\',\n      CU_URL: \'https://cu-testnet.xyz\',\n      GRAPHQL_URL: \'https://arweave.net/graphql\',\n      GATEWAY_URL: \'https://arweave.net\',\n    })\n  })\n});\n\n\n\n# Logging\n\nThe library uses the Winston logger for node based projects, and console logger for web based projects by default. You can configure the log level via setLogLevel() API. Alternatively you can set a custom logger as the default logger so long as it satisfies the ILogger interface.\n\n\n# Configuration\n\nimport { Logger } from \'@ar.io/sdk\';\n\n// set the log level\nLogger.default.setLogLevel(\'debug\');\n\n// provide your own logger\nLogger.default = winston.createLogger({ ...loggerConfigs }); // or some other logger that satisifes ILogger interface\n\n\n\n# Pagination\n\nCertain APIs that could return a large amount of data are paginated using cursors. The SDK uses the cursor pattern (as opposed to pages) to better protect against changing data while paginating through a list of items. For more information on pagination strategies refer to this article.\n\nPaginated results include the following properties:\n\n * items: the list of items on the current request, defaulted to 100 items.\n * nextCursor: the cursor to use for the next batch of items. This is undefined if there are no more items to fetch.\n * hasMore: a boolean indicating if there are more items to fetch. This is false if there are no more items to fetch.\n * totalItems: the total number of items available. This may change as new items are added to the list, only use this for informational purposes.\n * sortBy: the field used to sort the items, by default this is startTimestamp.\n * sortOrder: the order used to sort the items, by default this is desc.\n\nTo request all the items in a list, you can iterate through the list using the nextCursor until hasMore is false.\n\nlet hasMore = true;\nlet cursor: string | undefined;\nconst gateaways = [];\nwhile (hasMore) {\n  const page = await io.getGateways({ limit: 10, cursor });\n  gateaways.push(...items);\n  cursor = page.nextCursor;\n  hasMore = page.hasMore;\n}\n\n\n\n# Developers\n\n\n# Requirements\n\n * node >= v18.0.0\n * npm or yarn\n * docker (recommended for testing)\n\n\n# Setup & Build\n\n * nvm use - use the correct node version\n * yarn install - installs dependencies\n * yarn build - builds web/node/bundled outputs\n\n\n# Testing\n\n * yarn test:integration - runs integration tests against a local arns-service\n * yarn example:web - opens up the example web page\n * yarn example:cjs - runs example CJS node script\n * yarn example:esm - runs example ESM node script\n\n\n# Linting & Formatting\n\n * yarn lint:check - checks for linting errors\n * yarn lint:fix - fixes linting errors\n * yarn format:check - checks for formatting errors\n * yarn format:fix - fixes formatting errors\n\n\n# Architecture\n\n * Code to interfaces.\n * Prefer type safety over runtime safety.\n * Prefer composition over inheritance.\n * Prefer integration tests over unit tests.',normalizedContent:'# ar-io sdk\n\nthe ar.io sdk provides functionality for interacting with the ar.io ecosystem of services (e.g. gateways and observers) and protocols (e.g. arns). it is available for both nodejs and web environments.\n\n\n# prerequisites\n\n * node>=v18.0.0\n * npm or yarn\n\n\n# installation\n\nnpm install @ar.io/sdk\n\n\nor\n\nyarn add @ar.io/sdk\n\n\n\n# quick start\n\nloading the gateway list in nodejs.\n\nimport { io } from \'@ar.io/sdk\';\n\nconst io = io.init();\nconst gateways = await io.getgateways();\n\nconsole.log(gateways);\n\n\noutput\n\n{\n  "qgwqtjdllgm2ehfwiipzmaofld50cnguzzipedodrgq": {\n    "end": 0,\n    "observerwallet": "ipdwa3mb_9pdd8c2iajx6aad51ss-_tfstvwbuhtxms",\n    "operatorstake": 250000000000, // value in mio\n    "settings": {\n      "fqdn": "ar-io.dev",\n      "label": "ar.io test",\n      "note": "test gateway operated by pds for the ar.io ecosystem.",\n      "port": 443,\n      "properties": "rajgvbfu-yanku-wsupidbtsqqglqiypgzoqk9scvgy",\n      "protocol": "https"\n    },\n    "start": 1256694,\n    "stats": {\n      "failedconsecutiveepochs": 0,\n      "passedepochcount": 30,\n      "submittedepochcount": 30,\n      "totalepochparticipationcount": 31,\n      "totalepochsprescribedcount": 31\n    },\n    "status": "joined",\n    "vaults": {},\n    "weights": {\n      "stakeweight": 25,\n      "tenureweight": 0.9031327160493827,\n      "gatewayrewardratioweight": 0.96875,\n      "observerrewardratioweight": 0.96875,\n      "compositeweight": 21.189222170982834,\n      "normalizedcompositeweight": 0.27485583057217183\n    }\n  }\n}\n\n\n\n# usage\n\nthe sdk is provided in both commonjs and esm formats and is compatible with bundlers such as webpack, rollup, and esbuild. utilize the appropriately named exports provided by this sdk\'s package.json based on your project\'s configuration. refer to the examples directory to see how to use the sdk in various environments.\n\n\n# web\n\n# bundlers (webpack, rollup, esbuild, etc.)\n\nimport { io } from \'@ar.io/sdk/web\';\n\n// set up client\nconst io = io.init();\n// fetch gateways\nconst gateways = await io.getgateways();\n\n\nnote: polyfills are only provided when using the named @ar.io/sdk/web export (which requires moduleresolution: nodenext in tsconfig.json). if you are using the default export within a typescript project (e.g. moduleresolution: node), you will need to provide your own polyfills - specifically crypto, fs and buffer. refer to examples/webpack and examples/vite for references in how to properly provide those polyfills. for other project configurations, refer to your bundler\'s documentation for more information on how to provide the necessary polyfills.\n\n# browser\n\n<script type="module">\n  import { io } from \'https://unpkg.com/@ar.io/sdk\';\n\n  // set up client\n  const io = io.init();\n  // fetch gateways\n  const gateways = await io.getgateways();\n<\/script>\n\n\n# node\n\n# esm (nodenext)\n\nimport { io } from \'@ar.io/sdk/node\';\n\n// set up client\nconst io = io.init();\n// fetch gateways\nconst gateways = await io.getgateways();\n\n\n# cjs\n\nimport { io } from \'@ar.io/sdk\';\n\n// set up client\nconst io = io.init();\n// fetch gateways\nconst gateways = await io.getgateways();\n\n\n\n# typescript\n\nthe sdk provides typescript types. when you import the sdk in a typescript project types are exported from ./lib/types/[node/web]/index.d.ts and should be automatically recognized by package managers, offering benefits such as type-checking and autocompletion.\n\nnote: typescript version 5.3 or higher is recommended.\n\n\n# iotoken & miotoken\n\nthe ario contract stores all values as mio (milli-io) to avoid floating-point arithmetic issues. the sdk provides an iotoken and miotoken classes to handle the conversion between io and mio, along with rounding logic for precision.\n\nall contract interactions expect values in mio. if numbers are provided as inputs, they are assumed to be in raw mio values.\n\n\n# converting io to mio\n\nimport { iotoken, miotoken } from \'@ar.io/sdk\';\n\nconst iovalue = 1;\nconst miovalue = new iotoken(iovalue).tomio();\nconsole.log(miovalue); // 1000000 (mio)\n\nconst miovalue = 1_000_000;\nconst iovalue = new miotoken(miovalue).toio();\nconsole.log(iovalue); // 1 (io)\n\n\n\n# io process\n\n\n# apis\n\n# init({ signer })\n\nfactory function to that creates a read-only or writeable client. by providing a signer additional write apis that require signing, like joinnetwork and delegatestake are available. by default, a read-only client is returned and no write apis are available.\n\n// read-only client\nconst io = io.init()\n\n// read-write client for browser environments\nconst io = io.init({ signer: new arconnectsigner(window.arweavewallet, arweave.init({}))});\n\n// read-write client for node environments\nconst io = io.init({ signer: new arweavesigner(jwk) });\n\n\n# getinfo()\n\nretrieves the information of the io process.\n\nconst io = io.init();\nconst info = await io.getinfo();\n\n\noutput\n\n{\n  "name": "testnet io",\n  "ticker": "tio",\n  "owner": "qgwqtjdllgm2ehfwiipzmaofld50cnguzzipedodrgq",\n  "denomination": "io"\n}\n\n\n# getbalance({ address })\n\nretrieves the balance of the specified wallet address.\n\nconst io = io.init();\n// the balance will be returned in mio as a value\nconst balance = await io\n  .getbalance({\n    address: \'insert_wallet_address\',\n  })\n  .then((balance) => new miotoken().toio());\n\nconsole.log(balance.valueof());\n\n\noutput\n\n// value in io\n1_000_000\n\n\n# getbalances({ cursor, limit, sortby, sortorder })\n\nretrieves the balances of the io process in mio, paginated and sorted by the specified criteria. the cursor used for pagination is the last wallet address from the previous request.\n\nconst io = io.init();\nconst balances = await io.getbalances({\n  cursor: \'-4xgjroxenkyhtwqrbo57hqwvdl51mmdfsdsxjy6y2z_sa\',\n  limit: 1,\n  sortby: \'balance\',\n  sortorder: \'desc\',\n});\n\n\noutput\n\n{\n  "items": [\n    {\n      "address": "-4xgjroxenkyhtwqrbo57hqwvdl51mmvsxjy6y2z_sa",\n      "balance": 1000000\n    }\n  ],\n  "hasmore": true,\n  "nextcursor": "-7vxsqzqdk8tmdlpisly3cnli5pdplaan2daynorpck",\n  "totalitems": 1789,\n  "sortby": "balance",\n  "sortorder": "desc"\n}\n\n\n# getgateway({ address })\n\nretrieves a gateway\'s info by its staking wallet address.\n\nconst io = io.init();\nconst gateway = await io.getgateway({\n  address: \'insert_gateway_address\',\n});\n\n\noutput\n\n{\n  "end": 0,\n  "observerwallet": "ipdwa3mb_9pdd8c2iajx6aad51ss-_tfstvwbuhtxms",\n  "operatorstake": 250000000000, // value in mio\n  "settings": {\n    "fqdn": "ar-io.dev",\n    "label": "ar.io test",\n    "note": "test gateway operated by pds for the ar.io ecosystem.",\n    "port": 443,\n    "properties": "rajgvbfu-yanku-wsupidbtsqqglqiypgzoqk9scvgy",\n    "protocol": "https"\n  },\n  "start": 1256694,\n  "stats": {\n    "failedconsecutiveepochs": 0,\n    "passedepochcount": 30,\n    "submittedepochcount": 30,\n    "totalepochparticipationcount": 31,\n    "totalepochsprescribedcount": 31\n  },\n  "status": "joined",\n  "vaults": {}\n}\n\n\n# getgateways({ cursor, limit, sortby, sortorder })\n\nretrieves registered gateways of the io process, using pagination and sorting by the specified criteria. the cursor used for pagination is the last gateway address from the previous request.\n\nconst io = io.init();\nconst gateways = await io.getgateways({\n  limit: 1,\n  sortorder: \'desc\',\n  sortby: \'operatorstake\',\n});\n\n\navailable sortby options are any of the keys on the gateway object, e.g. operatorstake, start, status, settings.fqdn, settings.label, settings.note, settings.port, settings.protocol, stats.failedconsecutiveepochs, stats.passedconsecutiveepochs, etc.\n\noutput\n\n{\n  "items": [\n    {\n      "gatewayaddress": "qgwqtjdllgm2ehfwiipzmaofld50cnguzzipedodrgq",\n      "observeraddress": "ipdwa3mb_9pdd8c2iajx6aad51ss-_tfstvwbuhtxms",\n      "operatorstake": 250000000000,\n      "settings": {\n        "fqdn": "ar-io.dev",\n        "label": "ar.io test",\n        "note": "test gateway operated by pds for the ar.io ecosystem.",\n        "port": 443,\n        "properties": "rajgvbfu-yanku-wsupidbtsqqglqiypgzoqk9scvgy",\n        "protocol": "https"\n      },\n      "starttimestamp": 1720720620813,\n      "stats": {\n        "failedconsecutiveepochs": 0,\n        "passedepochcount": 30,\n        "submittedepochcount": 30,\n        "totalepochparticipationcount": 31,\n        "totalepochsprescribedcount": 31\n      },\n      "status": "joined",\n      "vaults": {}\n    }\n  ],\n  "hasmore": true,\n  "nextcursor": "-4xgjroxenkyhtwqrbo57hqwvdl51mmdfsdsxjy6y2z_sa",\n  "totalitems": 316,\n  "sortby": "operatorstake",\n  "sortorder": "desc"\n}\n\n\n# getarnsrecord({ name })\n\nretrieves the record info of the specified arns name.\n\nconst io = io.init();\nconst record = await io.getarnsrecord({ name: \'ardrive\' });\n\n\noutput\n\n{\n  "processid": "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n  "endtimestamp": 1711122739,\n  "starttimestamp": 1694101828,\n  "type": "lease",\n  "undernames": 100\n}\n\n\n# getarnsrecords({ cursor, limit, sortby, sortorder })\n\nretrieves all registered arns records of the io process, paginated and sorted by the specified criteria. the cursor used for pagination is the last arns name from the previous request.\n\nconst io = io.init();\n// get the 5 newest names\nconst records = await io.getarnsrecords({\n  limit: 5,\n  sortby: \'starttimestamp\',\n  sortorder: \'desc\',\n});\n\n\navailable sortby options are any of the keys on the record object, e.g. name, processid, endtimestamp, starttimestamp, type, undernames.\n\noutput\n\n{\n  "items": [\n    {\n      "name": "ao",\n      "processid": "eney-h9rb9ucdojuvpulb35qhzvxzcexv8xds4ahhkq",\n      "purchaseprice": 75541282285,\n      "starttimestamp": 1720720621424,\n      "type": "permabuy",\n      "undernames": 10\n    },\n    {\n      "name": "ardrive",\n      "processid": "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n      "endtimestamp": 1720720819969,\n      "starttimestamp": 1720720620813,\n      "type": "lease",\n      "undernames": 100\n    },\n    {\n      "name": "arweave",\n      "processid": "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n      "endtimestamp": 1720720819969,\n      "starttimestamp": 1720720620800,\n      "type": "lease",\n      "undernames": 100\n    },\n    {\n      "name": "ar-io",\n      "processid": "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n      "endtimestamp": 1720720819969,\n      "starttimestamp": 1720720619000,\n      "type": "lease",\n      "undernames": 100\n    },\n    {\n      "name": "fwd",\n      "processid": "bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm",\n      "endtimestamp": 1720720819969,\n      "starttimestamp": 1720720220811,\n      "type": "lease",\n      "undernames": 100\n    }\n  ],\n  "hasmore": true,\n  "nextcursor": "fwdresearch",\n  "totalitems": 21740,\n  "sortby": "starttimestamp",\n  "sortorder": "desc"\n}\n\n\n# getobservations({ epochindex })\n\nreturns the epoch-indexed observation list.\n\nconst io = io.init();\nconst observations = await io.getobservations();\n\n\noutput\n\n{\n  "0": {\n    "failuresummaries": {\n      "-tk2ddk8k4zkwtppp_xfkki5ough6iehygaon7md-w8": [\n        "ie2weeudkou26c7iuckhnn3vmfdnqnmvfpbrfzab3na",\n        "ie2weeudkou26c7iuckhnn3vmfdnqnmvfpbrfzab3na"\n      ]\n    },\n    "reports": {\n      "ipdwa3mb_9pdd8c2iajx6aad51ss-_tfstvwbuhtxms": "b6uujkwjjewdbvdsmxwnmymfwvgr9en27z5ftkevlx4",\n      "ie2weeudkou26c7iuckhnn3vmfdnqnmvfpbrfzab3na": "7tksiq2fxv0d8zvn_qev29fz8hwfighoedrpeeg0dis",\n      "oszp4d9cqedvbvfbaefjixwc1qlivrxubraxdix9je8": "aatgznevc_upcxp1v0uw_rqydhifkm4wtt1kcponbb0",\n      "qz90i67xg68byiafvnfm9pudm7v1xtftn7u-eozfatk": "bd8smfk9-ktjrmwiungs8ur6jm-jtpxrvmtjt5jkb1m"\n    }\n  }\n}\n\n\n# getdistributions({ epochindex })\n\nreturns the current rewards distribution information.\n\nconst io = io.init();\nconst distributions = await io.getdistributions();\n\n\noutput\n\n{\n  "epochendheight": 1382379,\n  "epochperiod": 43,\n  "epochstartheight": 1381660,\n  "epochzerostartheight": 1350700,\n  "nextdistributionheight": 1382394\n}\n\n\n# getepoch({ epochindex })\n\nreturns the epoch data for the specified block height.\n\nconst io = io.init();\nconst epoch = await io.getepoch({ epochindex: 0 });\n\n\noutput\n\n{\n  "epochindex": 0,\n  "starttimestamp": 1694101828,\n  "endtimestamp": 1711122739,\n  "startheight": 1350700,\n  "distributiontimestamp": 1711122739,\n  "observations": {\n    "failuresummaries": {\n      "-tk2ddk8k4zkwtppp_xfkki5ough6iehygaon7md-w8": [\n        "ie2weeudkou26c7iuckhnn3vmfdnqnmvfpbrfzab3na"\n      ]\n    },\n    "reports": {\n      "ipdwa3mb_9pdd8c2iajx6aad51ss-_tfstvwbuhtxms": "b6uujkwjjewdbvdsmxwnmymfwvgr9en27z5ftkevlx4"\n    }\n  },\n  "prescribednames": ["ardrive", "ar-io", "arweave", "fwd", "ao"],\n  "prescribedobservers": [\n    {\n      "gatewayaddress": "2fk8lcmdegpg6jjprl57-ucpkmngyikwyhku4vmndne",\n      "observeraddress": "2fk8lcmdegpg6jjprl57-ucpkmngyikwyhku4vmndne",\n      "stake": 10000000000, // value in mio\n      "start": 1292450,\n      "stakeweight": 1,\n      "tenureweight": 0.4494598765432099,\n      "gatewayrewardratioweight": 1,\n      "observerrewardratioweight": 1,\n      "compositeweight": 0.4494598765432099,\n      "normalizedcompositeweight": 0.002057032496835938\n    }\n  ],\n  "distributions": {\n    "distributedtimestamp": 1711122739,\n    "totaleligiblerewards": 100000000,\n    "rewards": {\n      "ipdwa3mb_9pdd8c2iajx6aad51ss-_tfstvwbuhtxms": 100000000\n    }\n  }\n}\n\n\n# getcurrentepoch()\n\nreturns the current epoch data.\n\nconst io = io.init();\nconst epoch = await io.getcurrentepoch();\n\n\noutput\n\n{\n  "epochindex": 0,\n  "starttimestamp": 1694101828,\n  "endtimestamp": 1711122739,\n  "startheight": 1350700,\n  "distributiontimestamp": 1711122739,\n  "observations": {\n    "failuresummaries": {\n      "-tk2ddk8k4zkwtppp_xfkki5ough6iehygaon7md-w8": [\n        "ie2weeudkou26c7iuckhnn3vmfdnqnmvfpbrfzab3na"\n      ]\n    },\n    "reports": {\n      "ipdwa3mb_9pdd8c2iajx6aad51ss-_tfstvwbuhtxms": "b6uujkwjjewdbvdsmxwnmymfwvgr9en27z5ftkevlx4"\n    }\n  },\n  "prescribednames": ["ardrive", "ar-io", "arweave", "fwd", "ao"],\n  "prescribedobservers": [\n    {\n      "gatewayaddress": "2fk8lcmdegpg6jjprl57-ucpkmngyikwyhku4vmndne",\n      "observeraddress": "2fk8lcmdegpg6jjprl57-ucpkmngyikwyhku4vmndne",\n      "stake": 10000000000, // value in mio\n      "start": 1292450,\n      "stakeweight": 1,\n      "tenureweight": 0.4494598765432099,\n      "gatewayrewardratioweight": 1,\n      "observerrewardratioweight": 1,\n      "compositeweight": 0.4494598765432099,\n      "normalizedcompositeweight": 0.002057032496835938\n    }\n  ],\n  "distributions": {\n    "distributedtimestamp": 1711122739,\n    "totaleligiblerewards": 100000000,\n    "rewards": {\n      "ipdwa3mb_9pdd8c2iajx6aad51ss-_tfstvwbuhtxms": 100000000\n    }\n  }\n}\n\n\n# getprescribedobservers({ epochindex })\n\nretrieves the prescribed observers of the io process. to fetch prescribed observers for a previous epoch set the epochindex to the desired epoch.\n\nconst io = io.init();\nconst observers = await io.getprescribedobservers({ epochindex: 0 });\n\n\noutput\n\n[\n  {\n    "gatewayaddress": "bpqlyhrez4lngs-y3rss1wxadfxppauing9lgfdrj2u",\n    "observeraddress": "2fk8lcmdegpg6jjprl57-ucpkmngyikwyhku4vmndne",\n    "stake": 10000000000, // value in mio\n    "start": 1296976,\n    "stakeweight": 1,\n    "tenureweight": 0.41453703703703704,\n    "gatewayrewardratioweight": 1,\n    "observerrewardratioweight": 1,\n    "compositeweight": 0.41453703703703704,\n    "normalizedcompositeweight": 0.0018972019546783507\n  }\n]\n\n\n# gettokencost({ intent, ...args })\n\ncalculates the price in mio to perform the interaction in question, e.g. a buy-record interaction, where args are the specific params for that interaction.\n\nconst price = await io\n  .gettokencost({\n    intent: \'buy-record\',\n    name: \'ar-io\',\n    type: \'permabuy\',\n  })\n  .then((p) => new miotoken(p).toio());\n// price is returned as mio, convert to io and log it out\nconsole.log({ price: price.valueof() });\n\n\noutput\n\n{ "price": 1642.62 }\n\n\n# joinnetwork( params )\n\njoins a gateway to the ar.io network via its associated wallet.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.joinnetwork(\n  {\n    qty: new iotoken(10_000).tomio(), // minimum operator stake allowed\n    autostake: true, // auto-stake operator rewards to the gateway\n    allowdelegatedstaking: true, // allows delegated staking\n    mindelegatedstake: new iotoken(100).tomio(), // minimum delegated stake allowed\n    delegaterewardshareratio: 10, // percentage of rewards to share with delegates (e.g. 10%)\n    label: \'john smith\', // min 1, max 64 characters\n    note: \'the example gateway\', // max 256 characters\n    properties: \'fh1avetooulpgqgyukj0ve0wihdy90wiqov3u2pey44\', // arweave transaction id containing additional properties of the gateway\n    observerwallet: \'0ve0wihdy90wiqov3u2pey44fh1avetooulpgqgyukj\', // wallet address of the observer, must match observer_wallet on the observer\n    fqdn: \'example.com\', // fully qualified domain name - note: you must own the domain and set the observer_wallet on your gateway to match `observerwallet`\n    port: 443, // port number\n    protocol: \'https\', // only \'https\' is supported\n  },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# leavenetwork()\n\nsets the gateway as leaving on the ar.io network. requires signer to be provided on io.init to sign the transaction. the gateway\'s operator and delegated stakes are vaulted and will be returned after the leave periods. the gateway will be removed from the network after the leave period.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\n\nconst { id: txid } = await io.leavenetwork(\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# updategatewaysettings( gatewaysettings )\n\nwrites new gateway settings to the caller\'s gateway configuration.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.updategatewaysettings(\n  {\n    // any other settings you want to update\n    mindelegatedstake: new iotoken(100).tomio(),\n  },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n// t4xr0_j4iurt7canst02cmotaz2fibwq4kbj616rhl3\n\n\n# increasedelegatestake({ target, qty })\n\nincreases the caller\'s stake on the target gateway.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.increasedelegatestake(\n  {\n    target: \'t4xr0_j4iurt7canst02cmotaz2fibwq4kbj616rhl3\',\n    qty: new iotoken(100).tomio(),\n  },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# decreasedelegatestake({ target, qty })\n\ndecrease the caller\'s stake on the target gateway.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.decreasedelegatestake(\n  {\n    target: \'t4xr0_j4iurt7canst02cmotaz2fibwq4kbj616rhl3\',\n    qty: new iotoken(100).tomio(),\n  },\n  {\n    tags: [{ name: \'app-name\', value: \'my-awesome-app\' }],\n  },\n);\n\n\n# increaseoperatorstake({ qty })\n\nincreases the caller\'s operator stake. must be executed with a wallet registered as a gateway operator.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.increaseoperatorstake(\n  {\n    qty: new iotoken(100).tomio(),\n  },\n  {\n    tags: [{ name: \'app-name\', value: \'my-awesome-app\' }],\n  },\n);\n\n\n# decreaseoperatorstake({ qty })\n\ndecreases the caller\'s operator stake. must be executed with a wallet registered as a gateway operator.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.decreaseoperatorstake(\n  {\n    qty: new iotoken(100).tomio(),\n  },\n  {\n    tags: [{ name: \'app-name\', value: \'my-awesome-app\' }],\n  },\n);\n\n\n# saveobservations({ reporttxid, failedgateways })\n\nsaves the observations of the current epoch.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.saveobservations(\n  {\n    reporttxid: \'fdrr0_j4iurt7canst02cmotaz2fibwq4kcj616rhl3\',\n    failedgateways: [\'t4xr0_j4iurt7canst02cmotaz2fibwq4kbj616rhl3\'],\n  },\n  {\n    tags: [{ name: \'app-name\', value: \'my-awesome-app\' }],\n  },\n);\n\n\n# transfer({ target, qty, denomination })\n\ntransfers io or mio depending on the denomination selected, defaulting as io, to the designated target recipient address.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.transfer(\n  {\n    target: \'-5dv7nk7war8v4stuwpntck1zfvkqqjh5k9q9zik4y5\',\n    qty: new iotoken(1000).tomio(),\n    denomination: \'io\',\n  },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# increaseundernamelimit({ name, qty })\n\nincreases the undername support of a domain up to a maximum of 10k. domains, by default, support up to 10 undernames.\n\nnote: requires signer to be provided on io.init to sign the transaction.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.increaseundernamelimit(\n  {\n    name: \'ar-io\',\n    qty: 420,\n  },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# extendlease({ name, years })\n\nextends the lease of a registered arns domain, with an extension of 1-5 years depending on grace period status. permanently registered domains cannot be extended.\n\nconst io = io.init({ signer: new arweavesigner(jwk) });\nconst { id: txid } = await io.extendlease(\n  {\n    name: \'ar-io\',\n    years: 1,\n  },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n\n# configuration\n\nthe io client class exposes apis relevenat to the ar.io process. it can be configured to use any ao process id that adheres to the io network spec. by default, it will use the current io testnet process. refer to ao connect for more information on how to configure an io process to use specific ao infrastructure.\n\n// provide a custom ao infrastructure and process id\nconst io = io.init({\n  process: new aoprocess({\n    processid: \'io_process_id\'\n    ao: connect({\n      mu_url: \'https://mu-testnet.xyz\',\n      cu_url: \'https://cu-testnet.xyz\',\n      graphql_url: \'https://arweave.net/graphql\',\n      gateway_url: \'https://arweave.net\',\n    })\n  })\n});\n\n\n\n# arweave name tokens (ant\'s)\n\nthe ant client class exposes apis relevant to compliant arweave name token processes. it can be configured to use any process id that adheres to the ant process spec. you must provide either a custom process data provider or a processid to the ant class constructor to use.\n\n\n# apis\n\n# init({signer, processid })\n\nfactory function to that creates a read-only or writeable client. by providing a signer additional write apis that require signing, like setrecord and transfer are available. by default, a read-only client is returned and no write apis are available.\n\n// in a browser environment with arconnect\nconst ant = ant.init({\n  signer: new arconnectsigner(window.arweavewallet, arweave.init({})),\n  processid: \'bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm\'\n});\n\n// in a node environment\nconst ant = ant.init({\n  signer: new arweavesigner(jwk),\n  processid: \'bh9l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm\'\n});\n\n\n# getinfo()\n\nretrieves the information about the ant process.\n\nconst info = await ant.getinfo();\n\n\noutput\n\n{\n  "name": "ardrive",\n  "ticker": "ant-ardrive",\n  "owner": "qgwqtjdllgm2ehfwiipzmaofld50cnguzzipedodrgq"\n}\n\n\n# getowner()\n\nreturns the owner of the configured ant process.\n\nconst owner = await ant.getowner();\n\n\noutput\n\n"ccp3blg__gkuvg3hsgc2u06admqv4cuhudjgoig0jw4"\n\n\n# getcontrollers()\n\nreturns the controllers of the configured ant process.\n\nconst controllers = await ant.getcontrollers();\n\n\noutput\n\n["ccp3blg__gkuvg3hsgc2u06admqv4cuhudjgoig0jw4"]\n\n\n# getrecords()\n\nreturns all records on the configured ant process, including the required @ record that resolve connected arns names.\n\nconst records = await ant.getrecords();\n\n\noutput\n\n{\n  "@": {\n    "transactionid": "noxjjj_vk0dc1ycgdwd8kti_1ihrugzlqlnnbhvpn0y",\n    "ttlseconds": 3600\n  },\n  "cn": {\n    "transactionid": "_hquert6pfgfxrvxrxqtkj7pv5rcizcqvmjltuy0c1k",\n    "ttlseconds": 3300\n  },\n  "dapp": {\n    "transactionid": "hxlxvgag0k4o3fvd9t6q4vbwppmmzwmwgrh1kcuh3wu",\n    "ttlseconds": 3600\n  },\n  "logo": {\n    "transactionid": "kkmrbifrc7wilcg0zvy1etlo0nbx1926dscksxcin3a",\n    "ttlseconds": 3600\n  },\n  "og": {\n    "transactionid": "yzd_pm5vafypmd3zqcgmuckkulegheh7axlrnrdckbo",\n    "ttlseconds": 3600\n  },\n  "og_dapp": {\n    "transactionid": "5ir4wbu4kuv1puz1ypye1arxsrhut5g2ptmuon2jdli",\n    "ttlseconds": 3600\n  },\n  "og_logo": {\n    "transactionid": "tb2wjykrpnkaw79dawljywpgdhkpijejwqfcwx715co",\n    "ttlseconds": 3600\n  }\n}\n\n\n# transfer({ target })\n\ntransfers ownership of the ant to a new target address. target must be an arweave address.\n\nnote: requires signer to be provided on ant.init to sign the transaction.\n\nconst { id: txid } = await ant.transfer(\n  { target: \'agzm_yjralachiuo8_nqxmbh9l1cy0aksil_x9m359f\' },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# setcontroller({ controller })\n\nadds a new controller to the list of approved controllers on the ant. controllers can set records and change the ticker and name of the ant process.\n\nnote: requires signer to be provided on ant.init to sign the transaction.\n\nconst { id: txid } = await ant.setcontroller(\n  { controller: \'agzm_yjralachiuo8_nqxmbh9l1cy0aksil_x9m359f\' },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# removecontroller({ controller })\n\nremoves a controller from the list of approved controllers on the ant.\n\nnote: requires signer to be provided on ant.init to sign the transaction.\n\nconst { id: txid } = await ant.removecontroller(\n  { controller: \'agzm_yjralachiuo8_nqxmbh9l1cy0aksil_x9m359f\' },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# setrecord({ subdomain, transactionid, ttlseconds })\n\nupdates or creates a record in the ant process.\n\nrecords, or undernames are configured with the transactionid - the arweave transaction id the record resolves - and ttlseconds, the time to live in the cache of client applications.\n\nnote: requires signer to be provided on ant.init to sign the transaction.\n\nconst { id: txid } = await ant.setrecord(\n  {\n    undername: \'@\',\n    transactionid: \'432l1cy0aksil_x9m359fagzm_yjralachiuo8_nqxm\'\n    ttlseconds: 3600\n  },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# removerecord({ undername })\n\nremoves a record from the ant process.\n\nnote: requires signer to be provided on ant.init to sign the transaction.\n\nconst { id: txid } = await ant.removerecord(\n  { undername: \'remove-domemain\' },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# setname({ name })\n\nsets the name of the ant process.\n\nnote: requires signer to be provided on ant.init to sign the transaction.\n\nconst { id: txid } = await ant.setname(\n  { name: \'my ant\' },\n  // optional additional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n# setticker({ ticker })\n\nsets the ticker of the ant contract.\n\nnote: requires signer to be provided on ant.init to sign the transaction.\n\nconst { id: txid } = await ant.setticker(\n  { ticker: \'ant-new-ticker\' },\n  // optional tags\n  { tags: [{ name: \'app-name\', value: \'my-awesome-app\' }] },\n);\n\n\n\n# configuration\n\nant clients can be configured to use custom ao processes. refer to ao connect for more information on how to configure the ao process to use specific ao infrastructure.\n\nconst ant = ant.init({\n  process: new aoprocess({\n    processid: \'ant_process_id\'\n    ao: connect({\n      mu_url: \'https://mu-testnet.xyz\',\n      cu_url: \'https://cu-testnet.xyz\',\n      graphql_url: \'https://arweave.net/graphql\',\n      gateway_url: \'https://arweave.net\',\n    })\n  })\n});\n\n\n\n# logging\n\nthe library uses the winston logger for node based projects, and console logger for web based projects by default. you can configure the log level via setloglevel() api. alternatively you can set a custom logger as the default logger so long as it satisfies the ilogger interface.\n\n\n# configuration\n\nimport { logger } from \'@ar.io/sdk\';\n\n// set the log level\nlogger.default.setloglevel(\'debug\');\n\n// provide your own logger\nlogger.default = winston.createlogger({ ...loggerconfigs }); // or some other logger that satisifes ilogger interface\n\n\n\n# pagination\n\ncertain apis that could return a large amount of data are paginated using cursors. the sdk uses the cursor pattern (as opposed to pages) to better protect against changing data while paginating through a list of items. for more information on pagination strategies refer to this article.\n\npaginated results include the following properties:\n\n * items: the list of items on the current request, defaulted to 100 items.\n * nextcursor: the cursor to use for the next batch of items. this is undefined if there are no more items to fetch.\n * hasmore: a boolean indicating if there are more items to fetch. this is false if there are no more items to fetch.\n * totalitems: the total number of items available. this may change as new items are added to the list, only use this for informational purposes.\n * sortby: the field used to sort the items, by default this is starttimestamp.\n * sortorder: the order used to sort the items, by default this is desc.\n\nto request all the items in a list, you can iterate through the list using the nextcursor until hasmore is false.\n\nlet hasmore = true;\nlet cursor: string | undefined;\nconst gateaways = [];\nwhile (hasmore) {\n  const page = await io.getgateways({ limit: 10, cursor });\n  gateaways.push(...items);\n  cursor = page.nextcursor;\n  hasmore = page.hasmore;\n}\n\n\n\n# developers\n\n\n# requirements\n\n * node >= v18.0.0\n * npm or yarn\n * docker (recommended for testing)\n\n\n# setup & build\n\n * nvm use - use the correct node version\n * yarn install - installs dependencies\n * yarn build - builds web/node/bundled outputs\n\n\n# testing\n\n * yarn test:integration - runs integration tests against a local arns-service\n * yarn example:web - opens up the example web page\n * yarn example:cjs - runs example cjs node script\n * yarn example:esm - runs example esm node script\n\n\n# linting & formatting\n\n * yarn lint:check - checks for linting errors\n * yarn lint:fix - fixes linting errors\n * yarn format:check - checks for formatting errors\n * yarn format:fix - fixes formatting errors\n\n\n# architecture\n\n * code to interfaces.\n * prefer type safety over runtime safety.\n * prefer composition over inheritance.\n * prefer integration tests over unit tests.',charsets:{cjk:!0}},{title:"Welcome to the Permaweb",frontmatter:{homepage:!0},regularPath:"/",relativePath:"index.md",key:"v-a40710da",path:"/",headersStr:null,content:"# Welcome to the Permaweb\n\nData in paradise. The AR.IO ecosystem is dedicated to cultivating products and protocols for sustaining access to digital permanence, making the permaweb available to everyone. Powered by the IO Token, this global network of Gateways connects users to permanently stored data, files, applications, and web pages on the Arweave decentralized storage network.\n\n\nar.io Gateways\n\nar.io's modular gateways are built for the Arweave permanent data storage network and optimized for data retrieval, caching, serving and indexing transactions.\n\n\nArNS Names\n\nArNS is a censorship-resistant naming system stored on Arweave, enabling user-friendly domain names that link to permaweb dApps, web pages, data, and identities.\n\n\nIO Token\n\nIO powers the AR.IO Network and its suite of permaweb applications as a permissionless and censorship resistant medium of common value for the network.\n\n\nWhite Paper\n\nA comprehensive document that details a decentralized and incentivized gateway network aimed at making the permaweb more accessible to all.\n\n\nThe Permaweb\n\nLearn more about the Arweave network, the permaweb and the reason the ar.io gateway network was built.\n\n\nar://\n\nThe ARCSS protocol transforms traditional Arweave URLs into more concise and user-friendly forms.\n\n\n\nar.io = Arweave Input & Output\n\n\n\n\n\n\nQuestions? Join our Discord\n\nar.io Discord",normalizedContent:"# welcome to the permaweb\n\ndata in paradise. the ar.io ecosystem is dedicated to cultivating products and protocols for sustaining access to digital permanence, making the permaweb available to everyone. powered by the io token, this global network of gateways connects users to permanently stored data, files, applications, and web pages on the arweave decentralized storage network.\n\n\nar.io gateways\n\nar.io's modular gateways are built for the arweave permanent data storage network and optimized for data retrieval, caching, serving and indexing transactions.\n\n\narns names\n\narns is a censorship-resistant naming system stored on arweave, enabling user-friendly domain names that link to permaweb dapps, web pages, data, and identities.\n\n\nio token\n\nio powers the ar.io network and its suite of permaweb applications as a permissionless and censorship resistant medium of common value for the network.\n\n\nwhite paper\n\na comprehensive document that details a decentralized and incentivized gateway network aimed at making the permaweb more accessible to all.\n\n\nthe permaweb\n\nlearn more about the arweave network, the permaweb and the reason the ar.io gateway network was built.\n\n\nar://\n\nthe arcss protocol transforms traditional arweave urls into more concise and user-friendly forms.\n\n\n\nar.io = arweave input & output\n\n\n\n\n\n\nquestions? join our discord\n\nar.io discord",charsets:{}},{title:"Introduction",frontmatter:{permalink:"/introduction/",prev:!1},regularPath:"/introduction.html",relativePath:"introduction.md",key:"v-4d71a012",path:"/introduction/",headers:[{level:2,title:"TL;DR",slug:"tl-dr",normalizedTitle:"tl;dr",charIndex:19},{level:2,title:"What is AR.IO",slug:"what-is-ar-io",normalizedTitle:"what is ar.io",charIndex:546},{level:2,title:"Why AR.IO ?",slug:"why-ar-io",normalizedTitle:"why ar.io ?",charIndex:1540}],headersStr:"TL;DR What is AR.IO Why AR.IO ?",content:"# Introduction\n\n\n# TL;DR\n\nThe goal of AR.IO is to create a decentralized and incentivized gateway network aimed at attracting more gateways to the Arweave network therefore making the permaweb more accessible to all. At the core of AR.IO’s incentivization mechanism is the IO Token, a utility token used for joining the network, payments, and protocol incentives. The network features modular and composable gateway infrastructure in addition to the Arweave Name System (ArNS) – a system for assigning friendly domain names to permaweb data.\n\n\n# What is AR.IO\n\nAR.IO is a global network, protocol, and currency that enables the permaweb. It is the decentralized and incentivized gateway node network of the Arweave ecosystem. Comprised of operators, developers, and end users, this network leverages a utility token to proliferate access to the permaweb: the files, applications, web pages and data permanently stored on the Arweave decentralized storage network.\n\nThe various nodes on the AR.IO Network, known as gateways, are the interface between users and the permaweb. Each gateway acts like a “Permaweb Service Provider” and supports multiple, value-added, services like reading, writing, querying, and indexing of Arweave data.\n\nThe AR.IO token, referred to as IO or ɸ, is an aoComputer based token used for protocol incentives, gateway accountability, and payments for services like the Arweave Name System (ArNS). It will enable gateways on the AR.IO Network to operate under a low-trust model with the users of their service.\n\n\n# Why AR.IO ?\n\nArweave (a Layer 1 blockchain network) offers scalable and permanent on-chain data storage in a sustainable manner. It does this by incentivizing miner nodes through a tokenomic endowment model which ensures data is globally stored and replicated for hundreds of years without the need for continual payment by its uploader.\n\nHowever, this Layer 1 protocol does not incorporate all the needs of permaweb applications like data indexing, querying, retrieval, and other vital services. Consequently, over the pasts few years, infrastructure services have been independently developed and deployed to meet the demands of the permaweb at scale. Users and apps have come to rely on these gateway utilities, but they are closed source, have complex codebases, and are expensive to operate.\n\nArweave also does not offer any tokenomic incentives to offset the expenses associated with operating a gateway, which has led to the community’s reliance on a single centrally controlled gateway subsidized for the betterment of the network: arweave.net. While arweave.net currently caches and indexes the entire weave with a high quality of service, it is a single bottleneck for the whole ecosystem.\n\nAR.IO seeks to reduce the barriers of entry and attract more gateway operators to the permaweb with the goal of further enhancing its overall health, resiliency, and functionality through decentralized mechanisms that are as trustless as possible.\n\nThe solution will be applied in two directions:\n\n 1. By reducing gateway overhead costs with open source, efficient modular networked architecture.\n\n 2. By creating an economic incentive layer with the IO Token.\n\nOur goal is to create a framework for a healthy and sustainable decentralized gateway network.",normalizedContent:"# introduction\n\n\n# tl;dr\n\nthe goal of ar.io is to create a decentralized and incentivized gateway network aimed at attracting more gateways to the arweave network therefore making the permaweb more accessible to all. at the core of ar.io’s incentivization mechanism is the io token, a utility token used for joining the network, payments, and protocol incentives. the network features modular and composable gateway infrastructure in addition to the arweave name system (arns) – a system for assigning friendly domain names to permaweb data.\n\n\n# what is ar.io\n\nar.io is a global network, protocol, and currency that enables the permaweb. it is the decentralized and incentivized gateway node network of the arweave ecosystem. comprised of operators, developers, and end users, this network leverages a utility token to proliferate access to the permaweb: the files, applications, web pages and data permanently stored on the arweave decentralized storage network.\n\nthe various nodes on the ar.io network, known as gateways, are the interface between users and the permaweb. each gateway acts like a “permaweb service provider” and supports multiple, value-added, services like reading, writing, querying, and indexing of arweave data.\n\nthe ar.io token, referred to as io or ɸ, is an aocomputer based token used for protocol incentives, gateway accountability, and payments for services like the arweave name system (arns). it will enable gateways on the ar.io network to operate under a low-trust model with the users of their service.\n\n\n# why ar.io ?\n\narweave (a layer 1 blockchain network) offers scalable and permanent on-chain data storage in a sustainable manner. it does this by incentivizing miner nodes through a tokenomic endowment model which ensures data is globally stored and replicated for hundreds of years without the need for continual payment by its uploader.\n\nhowever, this layer 1 protocol does not incorporate all the needs of permaweb applications like data indexing, querying, retrieval, and other vital services. consequently, over the pasts few years, infrastructure services have been independently developed and deployed to meet the demands of the permaweb at scale. users and apps have come to rely on these gateway utilities, but they are closed source, have complex codebases, and are expensive to operate.\n\narweave also does not offer any tokenomic incentives to offset the expenses associated with operating a gateway, which has led to the community’s reliance on a single centrally controlled gateway subsidized for the betterment of the network: arweave.net. while arweave.net currently caches and indexes the entire weave with a high quality of service, it is a single bottleneck for the whole ecosystem.\n\nar.io seeks to reduce the barriers of entry and attract more gateway operators to the permaweb with the goal of further enhancing its overall health, resiliency, and functionality through decentralized mechanisms that are as trustless as possible.\n\nthe solution will be applied in two directions:\n\n 1. by reducing gateway overhead costs with open source, efficient modular networked architecture.\n\n 2. by creating an economic incentive layer with the io token.\n\nour goal is to create a framework for a healthy and sustainable decentralized gateway network.",charsets:{}},{title:"AR.IO Labs",frontmatter:{permalink:"/labs/"},regularPath:"/labs.html",relativePath:"labs.md",key:"v-3798e78c",path:"/labs/",headers:[{level:2,title:"What is AR.IO Labs?",slug:"what-is-ar-io-labs",normalizedTitle:"what is ar.io labs?",charIndex:17}],headersStr:"What is AR.IO Labs?",content:"# AR.IO Labs\n\n\n# What is AR.IO Labs?\n\nAR.IO Labs serves as the for-profit arm of the AR.IO ecosystem, playing a crucial role in driving innovation, commercial development, and entrepreneurial initiatives. While the AR.IO Foundation focuses on the non-profit aspects and sustenance of the AR.IO Network, AR.IO Labs is geared towards harnessing the network's potential to create profitable ventures and cutting-edge products.\n\nKey focuses of AR.IO Labs include:\n\n * Innovation and research\n\n * Commercial development\n\n * Incubation of startups\n\n * Collaboration with external entities\n\n * Token and asset management\n\n * Revenue generation for ecosystem sustainability\n\n * Adoption and marketing\n\n * Resilience and growth\n\nAs the for-profit arm of the AR.IO ecosystem, AR.IO Labs works in tandem with the AR.IO Foundation to create a sustainable and flourishing decentralized network that thrives both commercially and altruistically, fostering a balanced and impactful presence within the blockchain and decentralized technology landscape.",normalizedContent:"# ar.io labs\n\n\n# what is ar.io labs?\n\nar.io labs serves as the for-profit arm of the ar.io ecosystem, playing a crucial role in driving innovation, commercial development, and entrepreneurial initiatives. while the ar.io foundation focuses on the non-profit aspects and sustenance of the ar.io network, ar.io labs is geared towards harnessing the network's potential to create profitable ventures and cutting-edge products.\n\nkey focuses of ar.io labs include:\n\n * innovation and research\n\n * commercial development\n\n * incubation of startups\n\n * collaboration with external entities\n\n * token and asset management\n\n * revenue generation for ecosystem sustainability\n\n * adoption and marketing\n\n * resilience and growth\n\nas the for-profit arm of the ar.io ecosystem, ar.io labs works in tandem with the ar.io foundation to create a sustainable and flourishing decentralized network that thrives both commercially and altruistically, fostering a balanced and impactful presence within the blockchain and decentralized technology landscape.",charsets:{}},{title:"The IO Token",frontmatter:{permalink:"/token/"},regularPath:"/token.html",relativePath:"token.md",key:"v-fc9b918c",path:"/token/",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:125}],headersStr:"Overview",content:"# The IO Token\n\nNOTE: The IO Token and its associated functions are still in development and have not yet been released.\n\n\n# Overview\n\nIO is the multifunction aoComputer based token that powers The AR.IO Network and its suite of permaweb applications. The IO Token (ɸ) has many uses, including:\n\n * Protocol incentives,\n\n * Staking by gateways,\n\n * Payments for services like the Arweave Name System (ArNS),\n\n * Gateway delegated staking\n\nThe token acts as a permissionless and censorship resistant medium of common value for the network.",normalizedContent:"# the io token\n\nnote: the io token and its associated functions are still in development and have not yet been released.\n\n\n# overview\n\nio is the multifunction aocomputer based token that powers the ar.io network and its suite of permaweb applications. the io token (ɸ) has many uses, including:\n\n * protocol incentives,\n\n * staking by gateways,\n\n * payments for services like the arweave name system (arns),\n\n * gateway delegated staking\n\nthe token acts as a permissionless and censorship resistant medium of common value for the network.",charsets:{}},{title:"Operation",frontmatter:{prev:"./windows-setup",next:"./linux-setup"},regularPath:"/gateways/ar-io-node/operation.html",relativePath:"gateways/ar-io-node/operation.md",key:"v-2c88928c",path:"/gateways/ar-io-node/operation.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:16},{level:3,title:"Errors",slug:"errors",normalizedTitle:"errors",charIndex:703},{level:3,title:"Authentication",slug:"authentication",normalizedTitle:"authentication",charIndex:806},{level:2,title:"Cache",slug:"cache",normalizedTitle:"cache",charIndex:1076},{level:3,title:"Transaction",slug:"transaction",normalizedTitle:"transaction",charIndex:1130},{level:3,title:"Raw Transation",slug:"raw-transation",normalizedTitle:"raw transation",charIndex:1432},{level:2,title:"Network",slug:"network",normalizedTitle:"network",charIndex:2479},{level:3,title:"Network information",slug:"network-information",normalizedTitle:"network information",charIndex:2621},{level:3,title:"Peer information",slug:"peer-information",normalizedTitle:"peer information",charIndex:3115},{level:3,title:"Network Block Height",slug:"network-block-height",normalizedTitle:"network block height",charIndex:3457},{level:2,title:"Pricing",slug:"pricing",normalizedTitle:"pricing",charIndex:3609},{level:3,title:"Upload",slug:"upload",normalizedTitle:"upload",charIndex:3621},{level:3,title:"Transfer and Upload",slug:"transfer-and-upload",normalizedTitle:"transfer and upload",charIndex:3803},{level:2,title:"Wallets",slug:"wallets",normalizedTitle:"wallets",charIndex:4033},{level:3,title:"Balance",slug:"balance",normalizedTitle:"balance",charIndex:4105},{level:3,title:"Last Transaction",slug:"last-transaction",normalizedTitle:"last transaction",charIndex:4340},{level:2,title:"Blocks",slug:"blocks",normalizedTitle:"blocks",charIndex:4569},{level:3,title:"Current Block",slug:"current-block",normalizedTitle:"current block",charIndex:4638},{level:3,title:"Specific Block",slug:"specific-block",normalizedTitle:"specific block",charIndex:367935},{level:3,title:"Get Block by Hash",slug:"get-block-by-hash",normalizedTitle:"get block by hash",charIndex:369122},{level:2,title:"Transactions",slug:"transactions",normalizedTitle:"transactions",charIndex:370370},{level:3,title:"Pending",slug:"pending",normalizedTitle:"pending",charIndex:370434},{level:3,title:"Transaction",slug:"transaction-2",normalizedTitle:"transaction",charIndex:1130},{level:3,title:"Offset",slug:"offset",normalizedTitle:"offset",charIndex:374288},{level:3,title:"Status",slug:"status",normalizedTitle:"status",charIndex:374531},{level:2,title:"Chunks",slug:"chunks",normalizedTitle:"chunks",charIndex:374866}],headersStr:"Overview Errors Authentication Cache Transaction Raw Transation Network Network information Peer information Network Block Height Pricing Upload Transfer and Upload Wallets Balance Last Transaction Blocks Current Block Specific Block Get Block by Hash Transactions Pending Transaction Offset Status Chunks",content:'# Operation\n\n\n# Overview\n\nAR.IO Gateways are the interface between users and the Permaweb. Each Gateway acts like a "Permaweb Service Provider" and supports multiple, value-added, low-trust services for users and applications. The AR.IO HTTP API is served by all AR.IO Gateways, and is used by all Arweave clients looking to read, write, and query data. It supports the following capabilities:\n\n * Seeding layer one transactions to the greater Arweave network\n * Caching and serving chain and transaction data\n * Resolving friendly names to transaction data with the Arweave Name System\n * Indexing and querying layer one and two transactions\n * Proxy for Arweave nodes serving the Arweave HTTP API\n\n\n# Errors\n\nThe API uses standard HTTP status codes to indicate the success of failure of the API call\n\n\n# Authentication\n\nAll inbound transactions to the Arweave network must contain a valid signature from an Arweave wallet with the appropriate amount of AR Tokens. At this time, clients are not required to sign their requests for outbound data from the Arweave network.\n\n\n# Cache\n\nProvides data from the AR.IO Gateway cache\n\n\n# Transaction\n\nGets Transaction data\n\n/{txId}\n\nExample\n\nRequest\n\nhttps://arweave.net/dBSTUg33LAsC5ThFwiTXao873v34QNM_x-BvaaOK13E\n\n\nResponse\n\n{"name":"Bananas.jpg","size":587828,"lastModifiedDate":1684980169000,"dataTxId":"h6sV7ST1gKAlRSvdOLoSiGg2nL2vZky_KYTj9M0GVS0","dataContentType":"image/jpeg"}\n\n\n\n# Raw Transation\n\nGets the Raw data from a transaction, for example it can display the contents of an Arweave Manifest instead of directing your gateway to where the Manifest is pointing.\n\n/raw/{txId}\n\nExample\n\nRequest\n\nhttps://arweave.net/raw/GPOX8dgUpFpt8IVUyyfBMiPpfWZ9eXHZjNi42W4-_50\n\n\nResponse\n\n{"manifest":"arweave/paths","version":"0.1.0","index":{"path":"index.html"},"paths":{"about.html":{"id":"fOAhaHRcaVzbMgmWAEdPncX-ZsKVZgrFOor2BOQkLU4"},"index.html":{"id":"M4TIc72VRXUPfFZOnmqL1CsLLzdMrpONNelpyoD31KI"},"style.css":{"id":"CvGTQ3YpFsOQ6Xh1hPhSnyTQFPa6TUpGFmGZsIwaZDU"},"script.js":{"id":"xR8THTsuYrSnEmXueECknpbipvDcCKqqCg79Thos_I4"},"home.html":{"id":"2SzIqpI_fWuxX0j-FYMfIVUXtf7de0aaQJvp39d12UU"},"deploy.html":{"id":"HPdPumduTm17_aWnD2VDeaXJJHc_eGD2QloP0Zc0Byk"},"hash.html":{"id":"0p6gssMZ3R9iDFScwD9JKcW9snWTw5rqHnr5o8JXYy4"},"paths.html":{"id":"6nCmNdMxfb9zMYsl3pwFzFQ-AFIPjhVC9W4ZRs4QH4c"},"update.html":{"id":"BNKaYC6zmeS7ABycqmhLcmEHQKXw4B5RtD-v3nZ2rdk"},"code.html":{"id":"LC08UXIjb4Lv64pVSI-pC7c_tY9L221Sb27xBP4Q-qc"}}}\n\n\n\n# Network\n\nThis group of endpoints can provide information on Arweave nodes, peers, and network status. Use "GET" requests for all queries.\n\n\n# Network information\n\nProvides information on the Arweave network and your Gateway, including version and release numbers, block height, current transaction, peers, and latency.\n\n/ or /info\n\nExample\n\nRequest\n\nhttps://arweave.net/info\n\n\nResponse\n\n{\n    "network":"arweave.N.1",\n    "version":5,"release":65,"height":1236124,"current":"QwOoSCP_BEwI0e1hGOU1VRZ2kwrF_lnlcGFLIn8g0hEpDcICtDXzFlVmEZlhgVz4",\n    "blocks":1236125,\n    "peers":90,\n    "queue_length":0,\n    "node_state_latency":1\n}\n\n\n\n# Peer information\n\nProvides an array of peers your Gateway is connected to.\n\n/peers\n\nExample\n\nRequest\n\nhttps://arweave.net/peers\n\n\nResponse\n\n[\n    "159.69.65.150:1984","162.55.176.19:1984","109.120.235.125:10011","23.22.197.174:1984","3.14.99.13:1984","198.244.165.146:1984","144.76.176.26:1984","34.92.74.22:1984","139.59.19.218:1984"\n]\n\n\n\n# Network Block Height\n\nProvides the current Arweave Network block height\n\n/height\n\nExample\n\nRequest\n\nhttps://arweave.net/height\n\n\nResponse\n\n1236128\n\n\n\n# Pricing\n\n\n# Upload\n\nProvides the price (in Winston) for uploading data (in bytes) to the network.\n\n/price/{size}\n\nExample\n\nRequest\n\nhttps://arweave.net/price/5000000\n\n\nResponse\n\n4191625910\n\n\n\n# Transfer and Upload\n\nProvides the price (in Winston) for transferring AR to a new wallet in order to pay for an upload\n\n/price/{size}/target\n\nExample\n\nRequest\n\nhttps://arweave.net/price/5000000/target\n\n\nResponse\n\n16192017846\n\n\n\n# Wallets\n\nProvides information about public Arweave Wallet Addresses\n\n\n# Balance\n\nProvides the current balance of AR (in Winston) of the given address\n\n/wallet/{address}/balance\n\nExample\n\nRequest\n\nhttps://arweave.net/wallet/cF0H0SKdnaDTqWKY9iJKBktTpdEWgb3GnlndE7ABv0Q/balance\n\n\nResponse\n\n49708373893732\n\n\n\n# Last Transaction\n\nProvides the TX ID for the last transaction completed\n\n/wallet/{address}/last_tx\n\nExample\n\nRequest\n\nhttps://arweave.net/wallet/cF0H0SKdnaDTqWKY9iJKBktTpdEWgb3GnlndE7ABv0Q/last_tx\n\n\nResponse\n\n49708373893732\n\n\n\n# Blocks\n\nProvides current or historical Arweave Block Information\n\n\n# Current Block\n\nProvides information on the current block\n\n/current_block or /block/current\n\nExample\n\nRequest\n\nhttps://arweave.net/current_block\n\n\nResponse\n\n{"hash_preimage":"s1E3ea8e2QURpqxzLw3pcjFAUtAr0ESkfju24zOvy0M","recall_byte":"9260453092202","reward":"1117763374946","previous_solution_hash":"_____zVY1JYd6AGEQuV4WoABc_-3XzhQJ6EE_eGJNts","partition_number":2,"nonce_limiter_info":{"output":"_cb61khbFX8kZYv2bYMuuHedIv7voWHv_qtvemAsFmw","global_step_number":15225216,"seed":"1U_RfSKwvKYQv36Wy0Nq0boMeDCTwHum0YTIo1AySdeq2Okb5VEDTTPQ_0QF0BOY","next_seed":"obNyPiROTj3TzLL4FFAKoZxkKGB3dKZ3GX-tYN8I-DsbidYtW-8o6EoySyH1j6JX","zone_upper_bound":146785664016630,"next_zone_upper_bound":146786177556726,"prev_output":"sQTzNvyFifzqYKehwcZn-X2brsJQg_nSb8VvFiKJyp0","last_step_checkpoints":["_cb61khbFX8kZYv2bYMuuHedIv7voWHv_qtvemAsFmw","xP1-mvJrEXiIeus4k06icoAu3W_3iG1p7H9-6qTeVUA","IAt89u4cOSTvx9jKoL2SFJZH6QofiwLU6v2Pr-LcP7s","IwkrIhy7U1YYKTp4nFxi576sM_q6T6diOlx_0bmmT9o","yVzIzqakGhHO1JBDHFJEB1oX8dDepifS3fiMw-WDzI4","yvpDtc0JBMS7OHt3R2fkuf_llUkuxXYWtJP5nJAE9tA","bNwnPk5asJ0cklR9SeH7N7lhvLqFpfZi43erx5NORsA","n0mx3q7yrkoeh4C_mY-UtRRzcznupPsS9h0_zFnXgLE","pr1hpVgAeKvygUr30CrM-afJDvXUWYvdnxjgqXULHRc","qVoCFRXJg6zfz87QI0hXhSnYbOInw4ggD0NnSeNuwiQ","1wPvP13gNBrtxXC-_0bfXLbnu6Xa1vnxFr4bmqsRBfo","YlTEzuiIPsiJag4dKlGXsYF3I7gK0S3EnsTf9ujv4vo","PHQrClL8VYWIujOKikYMcW3a8_NZKbrhT0sxdiYHRWk","gjEUN6wu5ctyoMA8Drh3lTHxbr9_zoXnkljUECj72TA","XFRlhxoaK6iUNDF3kftaue_2fKzSWZWMl2AzWTVcSmA","1yDQLDqgN3blYu42S9k4TXmWwhRSf6AUyohkYlrKa8k","ofpa_dF24Taf6Z1asDJ6K3UInEj4tgN1lZk1S3c48_o","Ma5GBhgbiTUePgIGXHVGxoHYIzlEf5OskeYsKJ8Ahnw","hIpyINbiaP183W1NzsFr2Ynd8bLx8Pccpb2mSXRbx04","yfIXobNb2ASFM-Iua_yGqZxrXcwr101fyNxcB-OwPh8","UrnkSziLHMSGI4ZmPBjSpqhcc9rLFzkjiCqMW4SgdqI","hgducAdk6YP-J4BA2WPEWgaJQCoUUwKHJGZ2VRgnLAE","WZQai7skAwLO0_IKBACwHtEgoHrTE7ofsjYusRQITJE","w-fyr9PEDw5jz_qPjSbETfGxShCb7QTeWBYHc51e7CE","Qc5ME4NhKBi_q0Ptjd18xiB2GeBRJG0JXsDHYUtXxJs"],"checkpoints":["_cb61khbFX8kZYv2bYMuuHedIv7voWHv_qtvemAsFmw","H8N6H9yaIDG3v08QU-uXiIFSE9WUcpX5vL8V3rukZz8","QuU24GS1kqUtZIHwiv6Q0CHVgV1ZUx_r_8mQfifJqUs","3QNtIpHqlE8SwRMyx4L7Gc9h0MPBSCeIme2TgLl_g1E","3omBqTVdLSHWpxrIemFHs_3P0xhlWnqUbOWgXGh1i-8","Ahga-T3cjjocwSa5KwIazTICCrGLfeE5X2AhGakz4Kg","dVo4DpQ4JJ3zmG7qq2GN_1qaB0zrfsveuQ0rmOrGWew","-LiqnXWsZMronoklJh24xXTMf74fm0ywnp1SK0inHEs","aPVdbuncpLXdenfMp18y7KYt7YWCcOisumIFSkLueMc","V-LnDXg6ZOvZFVR6KMiGRLoOKo6oqyE5fQIvYwdjrIY","4xSbHmIrtk0xWS9hycXrJhpbC71uWnDBcx1yPH2436E","EOIGniprmod5SfZPOGGLNMs8oAyA4zTo7MaNxdulW5Y","30CPB4m1fx1jwxzE16AdCCxeFkSvlFjtrO9WO6WqiOY","d6vzbbznMo3RpQtxN3karJUQk5Cfriehbjy2JCa48Rg","-hmAjbZagK-fxftgt0KYQ5ad7xxPCL0hYFoKBtnV2Xo","gyeNtgic7oDkwxd5FDVLT5tnzAIDEyrNe_VM_zla5R4","GPdlTcotWgacUpQEnh3MLkE2kh8yFdqK1yLMS23FyMU","6zLI89QpvK4TwtAs2Vt3uORCYSUC2K9R8k0x1DFqvqw","ZjU5Teboz7aiHYjpygpzDrRgZfknbJGoaDshzsgXpuA","l3sSHWFPn2ERYS8XIIKYvp0H7IVM_Wxb3OTFYUHsNjE","EKCgZ_Iq4af1sXcZWmdV7JoOIPlmnH7nEn49rzNId5Q","qDBcmg-ltN5uTGCAb6d3QLtxf2_-PVQOe-iTz53AGXE","UqRuMrJv8jaGGaLWq8JKHulqJjjsvXRGs4jSo1fKpxc","ZjASfU54H1kMTO2U1Z89wfeAMEa-87HzvALg4KVQQ3s","2YreUATC6T_MSRSi5XDD1271kldXlpoKAX4I2kuHpYs","lF3OR2x0Pe470QFCUkKGpYzO0m-lzQjkaqZJGenpL9w","3g15pQLYNblBs04ooGBP_DwUC3GT5Ir4AbrZOw648Hw","z5zMQvOAmyaizu5_tTKj_RsGKCKcBJRJTIGJAwH3GDg","uCEVnEx9PQ-5IqP-XcwGearaXWLZlJvNizPwCrEMwXU","qRIBQB5OUABjAzcDKot_SItVKuccW1eDPH7-_ogbjTE","eMnEsqiFLF-Gn3jjhIzY0KEYhWc-m4iA9nHlx-_kEqI","0HTtDYyYW7HLPJ4JDiAFXkrSrq0-qESfLt-TehADzvw","RJrrEhL3yeIVgXV8O2zdiwktohxMf_-0wwJcSdWBhBU","v-n3vs7u_nsTAIHbuUmGlyhbYeHzJMHCOD2EN4wmOQA","IHaA4ODvffWHvg7I-orX-NC5bbSqu_NqNIzhF78svmY","Qi2AK4UZjqlG7vUgKuzerlpkk3A8YFfNL0XkslehWkw","U_3sKzR8NXlRFb3zXbP5Ih62bIHZj-jZoLcjsyp4d0s","VGrWNIixmNE5CwzmrcOPPYXrsM63WLFB_n9cnhUokdQ","VKolK-7IrLE8dfJXv79wlEy-81g_7asC_eNEvvGXSpU","k-Zcb13xnbnkQkzEsgg1HO6-8Cn0KH655qBmUl9RMrg","E_qNeb-zNgTPP8Kj97cLY2RIE68kfHqUrtnVniqXvy0","RYuBFbV4jJGj_SlXIPoAthvCg8QwkcdKXXsb8ICzrXU","e_ZYoxOyw05bcHe0zhLYcm-uFAAwPe90lSRpwB_HQu4","Ev3akkrlLDQ7wD0xUJMl8R14HHNqxns8jL42ASU_Cm4","zsf9CN2ZLOXou0KKoG_gAWaDNTE9bDH4Un7b9serW7Y","Qr-jfuw2QWo1BldIJP56Jg4_DFlKzU8YAioDdPqCxfE","VN8NkoE5pqnwYemW137N-vvwFaBSiBUZfC17FjHGk2E","cgzQnrs6KDh_PgIAkiPCsmQAQAIszBc3tB-OzZNnMX4","zk9g918_e4EO6VvuuHGKy6FAVUoaWr4zByHJfbfcJIk","fAAXbEbeV7igzikfjHjQiBsXj-7va5X54i6zQG2AHtw","SprTVk8i9sbVMlTXKH1U1Zoj33Dugd_4a5W4k_Vbbck","xKiOAOTqnG6Qxppa6colI-fNP1jKJEUXRgotvSuwsjc","a2j672lw6Zk59Ri9zp7NTbV4YYhawBdKXqrx6MdNr54","11H8jPAqncOjex1A7xmmI2YpYi1x9lyvYJKItVF247g","ojcWFAee4auP0R6OGTLGDXRPvOLFwncQHLk3ZKRqFWM","TCO_Amjm83EeJxkuD5FykRgQC5z5oAtnBJlqDDYDXJA","OyyKSbRbECEYM71FfVviUtZrRYSd6259kF0IbnDeUQM","eupz6OVOszRMf6qsq7I9wv_HTJCfEZYX45QyL5G6OjE","8QJ2EcUVV48CCpaGmClXq61ERDXexT9A1m7BEF_XT10","7NwIbN94LDrpuIY0capwaVWRUuGJTKXZaQsXB4vgSx8","Lp24ZYVZL-LtbRZiQVOZjIjCiZtAKu5KIIQ0f77MJoM","dA9Wjtj0b933FHuiNv_Qhrb-toxhMHyx6mK9TenzeMY","SCykdagfzSnNleZFgyNmXsXhtZJHeVjHFi8fFukNw7M","xwhK1jDXHKZaMWsyQ_ubu6TVM8TNol4jwW6u3o0b8us","Abo0-brjNangiFMA7gwL4tYPTnAmmHFHgsZE6tNuBg0","lfIvhjYBL8EsC16Sh_6x7VUKOe2RSXCG7_2tX42gsbY","CGdxXq_AevYyQ_aH9hKZStd6ZdnCAIbMzJmksSSYQSg","1kpFj-Jtfe8JSvxCgwxRGObjjfqORuf9kye99qn9ShU","9UJZZ0SWC3HhXlZRXvrWf1IiQkFZxGGKgtlZoFsu0ys","XPXNh-ovK_epPnJioAMhvYRrNjBLIACOi8uQQOS3wo0","2N8YqIOSpiqCIYoe4DhzWOVztwAXrd-AvyPCEnzq0Gg","7lZBsbqtzKmMWzdSjEwhjZcJ99iVEcGswTfswvaVayI","bYvqReU-4PdxKCKRuE3qT4ZEWpADDgI65b8kR4cLzMs","SVZr_l2P8XbO3uszE5M-Khy2uCLgCnqxrUdCbR8R1cI","jOK-BEOYh4OhpEHwLr5HXFMGiMW2LtnNrrtnDnwU35E","yTIil-fNY4X6gYQV1MKZVT0Ksc1IQK8LnBjLJ8n2cmE","cSvrdXGgAXsrRZti5mrN4KuUOh7WPIUc7xQnpzdzqoE","Fk6i_0XV7O9TABdAmfQGecmNn0UoHPqwChpY92G2emI","937E5g-D2LzDPzFjaEu6_IxWu_ad83_3oDUxYB1bYFQ","1FTvWyf-L2mxkyyZJgXjsTc9tnc3Ny5CPqY4UX0CGwg","nwDSgwOXr9lvtNgAJ0TuMmtHJOuvz-eGE2F46Y-ZyOE","f6df-533vnzYn6wTfJ964KqnHkmzFNjYKRpbVuRTw38","PeUE_JPJdrM6au28yRDtvkRktYZgzLYIuo_OTdB6YjQ","00lhmmshalQBbXG_qrkG5sZJ_OCHcFmgWDUjVyrUFA8","bOUMBrygtGan4vfVcK0McyHf0wmlabMk_N8aQsLNhb0","b6RjN4J84EJLfnsZyFEpZ4sDc61uE028NoABIb_y-lY","2grlq5u3h83OPPHmRUPVbJFzEK3fWmiKjutLqMAINlU","MkA3XnWsyPL6TQFIxf1QcJuuhRUEN2eC3hUC-7IHxtM","Gvl4pURJojqeHk2-BxyyMyY-ophOZJZ4W-FaslVOvLo","NT6YzSF-0SXJSUpasmfGv-OSNHhQARY_lhKkRZ77tiY","GRGSaXeCx58v24iIImcAPpOTXFZ_zYnrg8giIKlrEoU","G5CRQx6uUaFnXYGSGBe7gqGoKZZ8XGkQvEAZt3n6zwg","5a_YHu4ZSLiW6jr1yGLt4jP3R3BRRgAl7liBgCCaD84","sN9wcXU3suUS5FqhvjtMTt4gd9zjExpk91VnpO1ymBM","eMug_ochjcpLugqqsfUlovHP-yfeNK0JYFk2iLVH7y4","8AdeVFrpOvRKLCsgz1rtLxzt6Ku4HTskrpuThfRS_YY","F2funIlDr9TuFPQmRgRGM9fHkaAT8CwqVQKyBJPHuvU","otz8WgJ20Lqasc4FZNVAlmphJfAPtl216rj2Pa9L7dE","Phvr1IIaD5qtcC0zfzVuVtzv0h0BgYYnjjHOsy_-Zfc","iGhcgf3rm3laxq_Nbb6Hi0OLx152BsIny_ZARFERoVo","mOGaHBG4CHMjkYczXhm9xPm4NH_JcFth7H5SRgwhCpE","4Mn9eiwXQMjwC2kzYCdMZ1VB4LU5xZoVyTGr9LoaFVg","DWcAgjsS0m_M5kBXMKd1rE0I3jVIhhv4M4sE48aXN2Y","_hBaCDnKWmBC2gRxJeaHnWtuJaBv3S0gvi6jBZ0dW5Y","AJWl9fjtoUJQid6Q725xJV4KsJWFv__wrK0Nu5LbuWM","9RXg-awqMbVLR_pEg16KvtzSWc0eG2_tA8DMgiugtK4","G73SaFmFm5dUkZ7Cw0XEgKZUxf72FYuceCEdrZJGEdk","L41o8OwqOcauSUwSSDhnmu6kSP2tiHbzN7-aPMvSUpM","SIS5w20oJ6z4codtsuGOcI8yNLpqsPbBVnD5y1PvnkU","kYp_frR4KRbB9ZK-54s_i0-KQVLDe-bQ0IZ9gE0_c9A","dXBmc8qMkSVu7DJuxC0E_zyg7Ret6d9am8u15tWIEWw","Du-0QIA3c7Gi4m4OXV2CXj1AcEuHI3aVdpKNPly-e6A","u2sO4p7X8CaVa1ChWpKMuywqyZ-17S5u7jShzwq119U","o2zv0Z0__r1Jst1CBwsEj95XIwL92AU39XBRmh2DR4s","Fj-5o6HXRL5sxQe9qN9pIiHV5dHPjeZlTsQP9toOfMk","lPiyrWJZndxiNA-B9y01QCCHdbvB3pP2euhJzAeqLls","HdwAU8JPyLICqAap56Db5YKNo8h3tpkuzN3xhlOHEe8","Cjm_3h6ICg-AeaAK-G3ZhVE5my7Q2Jra6GSuUHUZFCI","mmsxgkLwXjXJJr7OLFGPtlCb-hWXltF89oiThrG0rI0"]},"poa2":{"option":"1","tx_path":"","data_path":"","chunk":""},"signature":"kncGBT7Qaw7nS8da4W1zTpP1I-OsAB0hsAN9AumO_GUj0LYncpPPGbY1XqIdCjgmL3UVPx0W3JbCQwoBCRBzdzZcCDQ-fLbBrm3I7s_a7y0kq0zPu8DPb0aAqWTvOoCM4exv2KpkDZszgUfZhRCfpDFs_4Y1GeQxmpaNpPHzhO3uXFQr06a5WN-XduP-sDJN0a4vuqUxzF9WIyF4v6seUSj5BefdGOjKj2hq-Ejkm4Lm3UUnUUnfekx68uhgNhtdxJh8YucdXu3jjFw8C5vZ1c-rlE0ItD-EStlmD-fICVdmakLj6avlvk8kFXOCk7CCdWhZLB0eV6gFVD6i9Xp30NG5cLrfnQcQKK7H_Nuv1qKQyfkQozrDldAO9KpKeUToR2V_Z3OHQ8-sStP0KKE2_S6azN1dHvioasLwX5q5EQ60qxTN-4XC3uz3s0m5OBZ84xZfiUFEy5k8Popj5BQfEs3wfZ9hLN5dFaWVneBL1EO0TMroWyBvbVE-stF2UWGLPSFpWMD435bVMnsg21HJz-pjoF3ydoJos9Pv4wilzJlW4GKmQaa2RnV4mWDbOgdJa-j4T7znc2aioL_fOd3MaCJtR67Jp08W1Wvawfy7koGGUcxR2aHyMJE2gw_3uc6tdt6glGQewYSHxa26WVkATvudJGz-uE9CkuiUk17maU4","reward_key":"v3cg39NqS2ojiFN8TCAVbj_61rcf4P7t6_J4OxDiP3f4dJ1QUXS29zfGyv1ZOm8jNlv6GxRFXDun8jswyrDnqp7c241N9uKNoPseSaXjTP8x8uGwmKNPAjBG74j2R0lGVvplPa5FUaEMPHOCvYjJngDU-HbTC98K5zPYmavXMgzreaVQnDei5gf3_4_i7-wNJPyxMXke8k9itx_vcO5A2lIhuNmmhY2pAIMGCvuQINL3EqgFCpmjKiozYt7_G8GgXtIHqY39IuU29w0OksM4T8jyDxY59TyLBOj1kjbU9BKW6fYS_A6xYryc1dGQ8dCzyZti148FsmWBA7Pou9ClvVo9ao-DRX9WjcBQNJ1ptnzIDVgDHocu133ohVBJ16YMRr9F-qtR95DlyZdWHrzOPeynBsaYoBecSomQL707J1xtv4CF90JabatKKP3JVVTajdKyLtYZgoNECbsGGo4jnHDgUDNu4ZLH5-zsdkrX2Me5BY_JtWczY9M9oq0rATQ97iCb8bwHxOIQxk1zJp54jiEghidRb4-wbc9ucuZfIX7nSpnDcqdKDBHZn_m1yYKwKTlmyCyTpv4KjClCLvu5tDBuO0hGjy4hZRBKqePdf1XRRRl1zFqtWR15lCThCQ4x7TPOejvPW2r3M8ux4ZqqSYp-PhACxMfABSW0UqCVnwk","price_per_gib_minute":"4678","scheduled_price_per_gib_minute":"4680","reward_history_hash":"fnqlnKvRVroXzyKkLcWyiHsI1hLtSO7aHQ94a__dWuA","debt_supply":"0","kryder_plus_rate_multiplier":"1","kryder_plus_rate_multiplier_latch":"0","denomination":"1","redenomination_height":0,"double_signing_proof":{},"previous_cumulative_diff":"4613611199179364","usd_to_ar_rate":["1","10"],"scheduled_usd_to_ar_rate":["1","10"],"packing_2_5_threshold":"0","strict_data_split_threshold":"30607159107830","nonce":"AXc","previous_block":"AXMr2F5wI7zH3YpO27HMXwz9yeircnQYCFKrylZhC79DUtsZxfLkPk9j9cBwiL8C","timestamp":1691457810,"last_retarget":1691456466,"diff":"115792089204114897199868697479928234945323558989912924463463184699835139554024","height":1236169,"hash":"_____wymdgde030pdtgFmnZ1hWANBQ7n_pid5E28yRg","indep_hash":"igvYaGWTqKSLdjEPGikWKNdRVZY-o6StOWvh_SR1phr51z7CMS1uCfmzLufCsqio","txs":["_ESIjRtEfMKS1WlLfyFlWMhxB9TWmhz46nP_6VbL0cs","OkH-wvyfY911X9Wo1Ls7xGugROl8Cbz7kZCisXHq6ic","7uXtgs4hYS8M837a5iWwrTIuA0i9_gmxB_Fy1gk1XA4","I6gDrb-Fz-qIM5_fp3O1-Pl4IVDhKKhDwnbRLHfilnw","Wivy6cXew8o-iClElYDUb6v2Frasvj0jmooNvCqjjzE","_Cv05LZFyjRKFy1QbQ0rg6Mzudbwe08gNyzEB2XlT7Y","CkJrCrKrin6-qbaVSEg6GrcnSyUK2lNeTZf36MKWiMc","Ahhvc7p9A1AyU32cPdU-wwYBZJgfUzCHHnQNmvY5WT8","Vz6Na99gbLJq_SVOH4ePdcWmVWMA5FDqeB37WmOsRcQ","9YKKIV1ZlEIvSJ1wEZFnAQ04AwUN_f9hIHwULMcGj_A","4_7VXIBtKo0c_Rz5jNrwnryIYRRvhj-8kC1nDyoGBi4","KVU24YhWGi71Q1ilbJHzpPYWlYVQ2D2o4n1sQUxYeq4","VhonGuwy5KA7VTQfI54I8Yq4vcGnEdbM9wormVru6Ck","nhNienpOVgPJ2n2EYHycMndcQL07hZ99KXK3OvJ4iIY","BDEHL6giNEc_mEOlUVoKnC79PnNZWJaV4n5PaCqvZQU","mgwCVqTxjvfBYs5gpLHATeVEtLxaxF87KXGd4EoON4g","Pyjt93iwCXSDgdlNZfoGyUqcSQtpTp1LUiqDgZAK6NM","AFJmVDDtUyIHXX-GgdHxxXisXVs3kjDfRXX55_FCPRo","k-vgQ0q5RfFAZldoMOWszL6b85S7rvH4MMZa3V6PIw4","55AzaM20SJMuq4pMrJWzMuY9qt6GVOEFDPUWRU2fEUA","4HE75Cw1qLwef4iQdMdt6y4T10B7Ijx4UaWgxfaVp8E","7Hai9TqAGxdSf6Tel6dIgJvY6yTZoLey7aA691dDUwo","BgPFFZv5I64YIoN6Uahb3ThykiwT2XU9BAev1kaNLXU","8Shh6fxdpqBcv8cKmBeE8zmSKvLrqkce8b0Lkg2rhS4","jcoqdAV0yM7Ku0oj-czQl4iHq2L1TID-gb6Pw0pjSRM","SIANTxflSH7AFVakFFK1H9rntlnQJidFDNS13MrsGLE","0pQrOXm5ypLJtEfp0Nv82x8KW2ihe-GYtEOJssI9FgA","AW9WELHnqacBZzwn4VRAJeO998eOjf-h1zZHx7K2XrA","PGyTTQ1XTebC0CzhWaNsVi2cbIxeWdFh9V2y5BeMcZ4","mUynV55DP4Ld5gbmyXqnU_PPOweBKSWcViI5_oOIMbA","QgX5tuxFWP_Mo9jcUwxsixTvAW9PY0cSanibaFq--sI"],"tx_root":"B2lGoEuxpz9F6_4gnFOgbwTJ6vvW6bZfHD5957sg2Xw","wallet_list":"hkM4z_HHcqx4fEbtn9Bf0T-VIBaWC4LfHD_HMI1cPNc4HHwbs150g4Cvh5BZnEKJ","reward_addr":"lFGp-b0emZozpekJyrckWBem8MN3av7GxzsSjgHw_vM","tags":[],"reward_pool":"54107380272440297","weave_size":"146786495013110","block_size":"33030144","cumulative_diff":"4613614686756520","hash_list_merkle":"nkoxmBKUe3mLYM0hyExHfl65gKXdcZevX8Ii-x7s8USSN6MvC_mRGEX4vctSSGZu","poa":{"option":"1","tx_path":"1fvAyXR0-pOODlaMC7jUVKy8HgP_u6Wpfa5kBvUlNRJj7ZUaCvE0YWZwOFPR5Rp91XLJCmgUqfg0itF3SNgaHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALbnxBNa5rJGL66XLbsqulyNtKP23drTEyk8rfl78eQBcF5G5HIoUPWbRxi8454vGidGIsS0uPl0wzqT2AOSw331MQywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtCsQkeFXRt5a8rSDZGLG_grYIEk7L_0E2wcx8QB2_3r9r7lrd3lGXWenr7W63WtQP3WiVnQXQpKAG0SVfzWlpQrrogAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALX4plP6tEYuvtOXLBzCukcMQhK9AMfQUGDC__CfWOyTPlx43vJPqUbw9jm8nSDaz-6tHdu5P29_ykbkceCIJD-J32YQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtC9ukTAwUDqGGumoUdDLpEJpMDw0CQp0R5XfI7Tig9N9MsH2qk99ViTyGwwVnH6iuFpPDfgtZtmz9J1CLvszgMdbJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtDIXZsh62P8lyp6sMoLRSgSLFRyHYF2u5RIeAzBWTVXuyXLG4NX4-pqc_H0vIHNPqZ1tFI_su-A9u2PzrcOE94s3BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFtDMhgHFe4kG0rXGfXkrNoeakNqipqNca9t2rUxaWxRRrCkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1-KZQ","data_path":"3wne16JgixyH8CGfF0jX26ov9h66jGs69sRqH-Tke77wBcCuuyecY274E4VTwFi6UB1qCU5FHH-ps1bktZAHVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADqQLpaKKKxIbzHo5srworwZV2bFT25KlvnznzoPxep3JQLaSmRAUK8x0UE_2Qs5koZY5cB0NF0pfrBOhHL7ktQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAH_vvXX9kzFIdeeQsxVxPfz9uszY9X49n_Z-xU2lFvO69J1mh72ce8g2-8z1KTE-_BLi95oOThvIbtlqf4SpUhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAGbqgiMYTHY0hI1SpVbk0BH_S2SPKjzmdwQ0YYLJ9w611TJt82TPGAOIJwDW5hw7nJqWAoUcWb-NQU7bCXzqb6QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAUEOhH3X1TiA3Z8vgjiF8lRC02GOhVQc4OQPboOoTK-hnRhPrI75z3CdOt5QJ9POV-kqw43mGpMHgdpSjY3j41QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAfPyi1Msgba1eAqxOFLlt6e9KYKLHUEQIn25wtlqK4pghtnReVHYzV4Jx4qPw4Nd_XYIm42ow5ugjESJVR0TbxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAASyNZ2CSG-EsLt9Z6Wfzx35PfA_S_urhPFb7nSyhbgD8pMuq1csOpimNHrs7Pdz5pxE2eS_FXUFoo5o6EIp5xngAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0AAAb4mglTYCRHvTSB46eOvSXAr_57eosVEoWIr1OhxPwFzZu8c-IlOEdU13kkrw_ObsBQRIvOB5-NmOmLpFivcaMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD2AAAFC-Xr8-v6XQCbsg0w4ckiBRbEzOyiPHtFncPWLsr4BEnnvvJVxRT0iGoBh3dWz0NNgv0nH76KKVJzYqEaNjOCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD1AAAH-vSuQhlTdzYZural1g0a5dzzQyU1GjGL6IXl7RFs7oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9gAAA","chunk":""}}\n\n\n\n# Specific Block\n\nProvides information on a specific block height.\n\n/block/height/{height}\n\nExample\n\nRequest\n\nhttps://arweave.net/block/height/1984\n\n\nResponse\n\n{"nonce":"AAEBAAABAQABAAABAQEBAAEAAQEAAQEBAAEBAQABAAEAAQAAAAEBAQABAQEAAQEAAAAAAQEAAQAAAAABAQAAAQAAAQEAAAABAAABAAEAAAEBAAAAAQEBAQAAAQEBAAEAAAEBAQEBAAAAAAAAAAEAAAEAAAABAQAAAAAAAQABAQABAQEAAAEAAAABAAEBAAEAAQEBAQEAAQABAAEAAQEBAQEBAQABAAAAAAAAAAEBAAEBAAEBAAEAAAAAAQEAAQEAAAEBAAAAAAAAAQEBAAEAAAEBAQEAAAAAAQEBAQAAAAAAAAEBAAEBAAAAAAAAAQAAAQAAAQABAAABAAEBAQAAAAAAAQEAAQABAQAAAQAAAAEAAQABAAEAAQEAAAAAAQABAQAAAAEAAQAAAQABAAEBAQAAAAAA","previous_block":"WTUIX0EsjLZ-LzMo5hDL1VoS-QNfAuHFLYSyIvFQa0xSoLTwsv9Bnr9Tl8qYV4so","timestamp":1528744314,"last_retarget":1528744023,"diff":31,"height":1984,"hash":"AAAAAfd5fL39rCwTXLe_5Jik9oTnmkMkPDzcDFLTq0ON_Fpl47mHrw-yrCVsAUPH","indep_hash":"CA_J-ci5ePeg7_I7YS3Be66MGrhA_DM6nzS5azlhKpkc7yOZ0p-2sf6OsR6slNr7","txs":[],"tx_root":"","tx_tree":[],"wallet_list":"9Oo9B1VQrlDYVNH97ejduubUM_tr-ZYcDPa7dJwGr_o","reward_addr":"xJ2g4XL2iNFg3Zs0naUaUxWzf45hBxMeE7lfp8J1oLo","tags":[],"reward_pool":146475228801,"weave_size":599058,"block_size":0,"poa":{"option":"1","tx_path":"","data_path":"","chunk":""}}\n\n\n\n# Get Block by Hash\n\nFinds and returns a block based on the provided hash\n\n/block/hash/{hash}\n\nExample\n\nRequest\n\nhttps://arweave.net/block/hash/CA_J-ci5ePeg7_I7YS3Be66MGrhA_DM6nzS5azlhKpkc7yOZ0p-2sf6OsR6slNr7\n\n\nResponse\n\n{"nonce":"AAEBAAABAQABAAABAQEBAAEAAQEAAQEBAAEBAQABAAEAAQAAAAEBAQABAQEAAQEAAAAAAQEAAQAAAAABAQAAAQAAAQEAAAABAAABAAEAAAEBAAAAAQEBAQAAAQEBAAEAAAEBAQEBAAAAAAAAAAEAAAEAAAABAQAAAAAAAQABAQABAQEAAAEAAAABAAEBAAEAAQEBAQEAAQABAAEAAQEBAQEBAQABAAAAAAAAAAEBAAEBAAEBAAEAAAAAAQEAAQEAAAEBAAAAAAAAAQEBAAEAAAEBAQEAAAAAAQEBAQAAAAAAAAEBAAEBAAAAAAAAAQAAAQAAAQABAAABAAEBAQAAAAAAAQEAAQABAQAAAQAAAAEAAQABAAEAAQEAAAAAAQABAQAAAAEAAQAAAQABAAEBAQAAAAAA","previous_block":"WTUIX0EsjLZ-LzMo5hDL1VoS-QNfAuHFLYSyIvFQa0xSoLTwsv9Bnr9Tl8qYV4so","timestamp":1528744314,"last_retarget":1528744023,"diff":31,"height":1984,"hash":"AAAAAfd5fL39rCwTXLe_5Jik9oTnmkMkPDzcDFLTq0ON_Fpl47mHrw-yrCVsAUPH","indep_hash":"CA_J-ci5ePeg7_I7YS3Be66MGrhA_DM6nzS5azlhKpkc7yOZ0p-2sf6OsR6slNr7","txs":[],"tx_root":"","tx_tree":[],"wallet_list":"9Oo9B1VQrlDYVNH97ejduubUM_tr-ZYcDPa7dJwGr_o","reward_addr":"xJ2g4XL2iNFg3Zs0naUaUxWzf45hBxMeE7lfp8J1oLo","tags":[],"reward_pool":146475228801,"weave_size":599058,"block_size":0,"poa":{"option":"1","tx_path":"","data_path":"","chunk":""}}\n\n\n\n# Transactions\n\nProvides information on Arweave Transactions.\n\n\n# Pending\n\nProvides array of pending transactions\n\n/tx/pending\n\nExample\n\nRequest\n\nhttps://arweave.net/tx/pending\n\n\nResponse\n\n["A8lCZPTAwuBY5HfuVbFJsJ4F0KB205_UEO8XNJ9ArSU","hTLgucGtdEfWqiWYqqaEQB97o8NyN6zA6cXTHX8pI8E","aH-Qk6q4LZ0K1GLB1rmX8YvxB9g7rLsekwR79jqxCOM","RuMRsMMbezwBo-5HjqLHG8guex8fu18o5_XHI0TxZsY","C05c6xfq1m7z-kdIyVwaVftIj0N8AcQc9XB9h5NYgHQ","l_eODdrwQqjgzcDUr6NE-tt2V4ikYTTPXE9Jz3FNSGU","p4IPTJPCrS7wlB3p7s1o-JM6npTDm3QEv2CTHZXD7JU","bKlMQOoy1N4J9ATvjlytAuXuhm_Tkm_vy9CpabkMUv0","ADsLCxBfsWfEZeR62MTMnw1i54R_JA_7woeEh5sFZv8","P8lhRilLZyPdnn70yaphbfHM5IxtOneZvK3gUSPXG7E","ecoEWsHW1jbuQriKeASvrPEzS7rJ2Mzajf4pzGyiO0s","mswc2wOm4tcevSBRqg840RTBLebVI2w5MjuDGXvCX8E","UC9RyAztDfMJCx7HlZ2z4ykOUJzidqRE1T0v-f_6BPU","JGmJPI7n0qHk7RCzEvKCXWbEBCrazAFGrL8_WiJFF1U","NVUYFvLdubJ5gUPfPy3jZvws6KZ1yL2mD7wwKdXjdOE","-rnYkfarerxLtfLsXzAkU6On_T0IQyarO7Zn5rP7Rl4","8j6o4fqp-vl6_GYMbFibAf5ajzwTf-Swgd_eovIGwp0","Os19pbfIynoDZCR9JCYDmC1gQxc6x4iY0N_JIX9N7Rg","WQtP7nfqFByTR3ZXF3O7a1Ueb9X9bObTj6N-OiDjxXs","lPk88ilQk7PSeHD-4M8G49CgMQ30RlkVjEv0-ENbv80","lKDFDPRo1_VXZNiXMsxcMp5u_fbSGuJEri-FyO3bu0g","Zkx8Jrk__oNSHdUyN1WAVBLdIIzc2oAVZvDSciOyfn0","Ic6ucH_LZv1-3lrGgvXDJoMh8ZOAz2JyRrnsYRuVE20","JaVM0GT37c0P015cCR24ltYcsRH7x8ubniXzoAojh1Y","MtCURfaU3mvnOObVkVEVUJv6LlaCRoHrbQskxCdE_Bg","ur6r8PS2RC3J0A3hQyq4IrON4QJHJQxkHZOGkpZ_Mqk","hL_ZItvhslgS4s_mY-o6_TH78DyEvIqzaEjRfKuGQaI","k2pFW1ysC9QyX9aPeEHcr1yiO8JVi06PUz7L7y-Il4U","8XYuS9SQ0SLkuzZWDWlW58D0KHeEkrChwPdh0ZnTYWo"]\n\n\n\n# Transaction\n\nProvides information on a transaction based on a txId\n\n/tx/{txId}\n\nExample\n\nRequest\n\nhttps://arweave.net/tx/A8lCZPTAwuBY5HfuVbFJsJ4F0KB205_UEO8XNJ9ArSU\n\n\nResponse\n\n{"format":2,"id":"A8lCZPTAwuBY5HfuVbFJsJ4F0KB205_UEO8XNJ9ArSU","last_tx":"8DPH9WNEAUhupX_WqDDQFVStbCkkFQsgOOMPmoCsqKVOPY7kLCe1LJxQlgOWgO27","owner":"sq9JbppKLlAKtQwalfX5DagnGMlTirditXk7y4jgoeA7DEM0Z6cVPE5xMQ9kz_T9VppP6BFHtHyZCZODercEVWipzkr36tfQkR5EDGUQyLivdxUzbWgVkzw7D27PJEa4cd1Uy6r18rYLqERgbRvAZph5YJZmpSJk7r3MwnQquuktjvSpfCLFwSxP1w879-ss_JalM9ICzRi38henONio8gll6GV9-omrWwRMZer_15bspCK5txCwpY137nfKwKD5YBAuzxxcj424M7zlSHlsafBwaRwFbf8gHtW03iJER4lR4GxeY0WvnYaB3KDISHQp53a9nlbmiWO5WcHHYsR83OT2eJ0Pl3RWA-_imk_SNwGQTCjmA6tf_UVwL8HzYS2iyuu85b7iYK9ZQoh8nqbNC6qibICE4h9Fe3bN7AgitIe9XzCTOXDfMr4ahjC8kkqJ1z4zNAI6-Leei_Mgd8JtZh2vqFNZhXK0lSadFl_9Oh3AET7tUds2E7s-6zpRPd9oBZu6-kNuHDRJ6TQhZSwJ9ZO5HYsccb_G_1so72aXJymR9ggJgWr4J3bawAYYnqmvmzGklYOlE_5HVnMxf-UxpT7ztdsHbc9QEH6W2bzwxbpjTczEZs3JCCB3c-NewNHsj9PYM3b5tTlTNP9kNAwPZHWpt11t79LuNkNGt9LfOek","tags":[{"name":"QXBwLU5hbWU","value":"QnVuZGxy"},{"name":"QWN0aW9u","value":"QnVuZGxl"},{"name":"QnVuZGxlLUZvcm1hdA","value":"YmluYXJ5"},{"name":"QnVuZGxlLVZlcnNpb24","value":"Mi4wLjA"},{"name":"UHJvdG9jb2wtbmFtZQ","value":"QkFS"},{"name":"QWN0aW9u","value":"QnVybg"},{"name":"QXBwLU5hbWU","value":"U21hcnRXZWF2ZUFjdGlvbg"},{"name":"QXBwLVZlcnNpb24","value":"MC4zLjA"},{"name":"SW5wdXQ","value":"eyJmdW5jdGlvbiI6Im1pbnQifQ"},{"name":"Q29udHJhY3Q","value":"S1R6VFhUX0FObUY4NGZXRUtIeldVUkQxTFdkOVFhRlI5eWZZVXdIMkx4dw"}],"target":"","quantity":"0","data":"","data_size":"17281162","data_tree":[],"data_root":"eu3Xce8mGabqh6VQhlht_SdtFe94-UuuKdYCWkfMQIE","reward":"14379525145","signature":"jzYb8ioR7CXS4-Y-__rxTflSnGeA9i4F7J5DKP9dOCogCdkthsgnbY8zRMS_MVereSxdPXqagAquwu8k9NaBe-ndYWO-kDRCq3IpbR95NVoNnekfFJ3p32k2G-bQEQCOk5hpzDiZyRK6Zr9kpYasys2L4grOQildhwE0C0HSpMykUozudhAsUNHPD7RYSE63HkWTmEdwGCpvKKtteXg9GJekoNNnNXTE3Bl4hnU5wOLKPkYTwT8WwYKEzCPpANKbysf1HkNLOXrUWfcFFm-O8Q6TOdg1I0AKBjp7Yr9YmmcxOU0E-Y3XgblDYj9b940k2A7fvgwK2hP_wOQzs2KfS9lXwzcMFJ9AG454qKeMd1PWVVmxFrGON_sCVdtmYAc-ElDiRGvWpZY77G1m59dO81bML2_ZO7g7Duzw7PcsFxjbnesemMV4mUnS5gimilr7snSipW_yLlgbbUFjK3dknEe4AGI22Gk_2B0ZNJRTUhEqViO15IHzX1NBFltQdm-EsffSzr7f4gK-zHiJv_HEm183S75jH3mLHgDJjAk1oisJKEUtp09_4_wYs3JGNBBLejiX7JMNM20k4tM2whWjg4wZ4PoY6_EtGohCt0lhah1XtK08NWbE6tkqeOJxBBiOY0JXa8GYDGI4rRVmuoAsisjdWcuVOze7jELQyoaXW7U"}\n\n\n\n# Offset\n\nProvides information on the size and offset of a given txId\n\ntx/{txId}/offset\n\nExample\n\nRequest\n\nhttps://arweave.net/tx/A8lCZPTAwuBY5HfuVbFJsJ4F0KB205_UEO8XNJ9ArSU/offset\n\n\nResponse\n\n{"size":"17281162","offset":"146788128412032"}\n\n\n\n# Status\n\nProvides the status of a transaction based on its txId\n\n/tx/{txId}/status\n\nExemple\n\nRequest\n\nhttps://bobinstein.com/tx/A8lCZPTAwuBY5HfuVbFJsJ4F0KB205_UEO8XNJ9ArSU/status\n\n\nResponse\n\n{"block_height":1236198,"block_indep_hash":"BiNSjNDLURchLF34-J0pEPcyPkWwAGslY_ziQn235s2RoyLlveVso_iMPkZvgU4w","number_of_confirmations":14}\n\n\n\n# Chunks\n\nGet existing chunk offset information\n\n/chunk/{offset}\n\nExample\n\nRequest\n\nhttps://arweave.net/chunk/146788128412032\n\n\nResponse\n\n{"tx_path":"hdWq1ZszBltk9XIkGv2yDLijyWbG7tnrRGT7VLc3hrKq2uqaqCHhijNLumytek1GK_EfsHS5zGYSyXP218ZrlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEAL9xRcPRiJdHwKIwqVWFc03WLQPX_pdPK6eBkGDyoyglINUplsTV9ctXMDznPacmopzSYyxvbMbEql8jRW9z3uvdQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAAHWcAO5fnvS8i1dR0DMvq47fvjc6BCAKRYUyEQj1HeOkrQwuFz108Gvrl6UZteWygR75jjAmC3XxnY6hjnGMvTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtAAAAp86EvExjN5pmMbgA0epeTQQSmcu48Y2VDDcPA_lKJ6IQow56ogsMrzbS8S5IQG-7_L5dWzKCKDsAeaZ_az4CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmAAA8r751YA8Kq2_AleQT_A_R7HU59WAPFZaAlzRwXB8aYTpsfD9gtQXIN87OK0DEkDrBif6D-0YYrDVEG-8JCZtfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFAAA5Kqqj2vVHEG_K4NunOiODeMSfXnXyT0eCaf_xJDDIAbfUzMg0K612E47CYUVQSbeR46GAPRm7bHMXjtmJii7YQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAME1z0BlQq8hEamYDmMnYo2ESNoQ33F466PT9IccTwKdxGcmv67CXThF9yIhkiiujvXaVK8lJ7jSJei_OTNLA1gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABE7CKeu3Xce8mGabqh6VQhlht_SdtFe94-UuuKdYCWkfMQIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAROwig","packing":"unpacked","end_offset":"146788128412032","data_path":"yGaK4gUHpKT592HBM52EPtYPTOlXQ0xEsYAtsTLDKZf5DH-Cgsm9ozNJz1GyUWfGl1821cKPzRYEXyS-2ElccAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA0tWhxbuyMy_85pTq-fKmzglh8tf7enrnc0CTObxp4B1h6Bbz_ro2lKtst64jbBFv2hmJULiXZFuS2FGiOTXxFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBAAAkLsCIhZqqii07Ogt1xLB9tcJCy6nXb-PLCX4uJffDUEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQewig","chunk":""}\n',normalizedContent:'# operation\n\n\n# overview\n\nar.io gateways are the interface between users and the permaweb. each gateway acts like a "permaweb service provider" and supports multiple, value-added, low-trust services for users and applications. the ar.io http api is served by all ar.io gateways, and is used by all arweave clients looking to read, write, and query data. it supports the following capabilities:\n\n * seeding layer one transactions to the greater arweave network\n * caching and serving chain and transaction data\n * resolving friendly names to transaction data with the arweave name system\n * indexing and querying layer one and two transactions\n * proxy for arweave nodes serving the arweave http api\n\n\n# errors\n\nthe api uses standard http status codes to indicate the success of failure of the api call\n\n\n# authentication\n\nall inbound transactions to the arweave network must contain a valid signature from an arweave wallet with the appropriate amount of ar tokens. at this time, clients are not required to sign their requests for outbound data from the arweave network.\n\n\n# cache\n\nprovides data from the ar.io gateway cache\n\n\n# transaction\n\ngets transaction data\n\n/{txid}\n\nexample\n\nrequest\n\nhttps://arweave.net/dbstug33lasc5thfwitxao873v34qnm_x-bvaaok13e\n\n\nresponse\n\n{"name":"bananas.jpg","size":587828,"lastmodifieddate":1684980169000,"datatxid":"h6sv7st1gkalrsvdolosigg2nl2vzky_kytj9m0gvs0","datacontenttype":"image/jpeg"}\n\n\n\n# raw transation\n\ngets the raw data from a transaction, for example it can display the contents of an arweave manifest instead of directing your gateway to where the manifest is pointing.\n\n/raw/{txid}\n\nexample\n\nrequest\n\nhttps://arweave.net/raw/gpox8dgupfpt8ivuyyfbmippfwz9exhzjni42w4-_50\n\n\nresponse\n\n{"manifest":"arweave/paths","version":"0.1.0","index":{"path":"index.html"},"paths":{"about.html":{"id":"foahahrcavzbmgmwaedpncx-zskvzgrfoor2boqklu4"},"index.html":{"id":"m4tic72vrxupffzonmql1csllzdmrponnelpyod31ki"},"style.css":{"id":"cvgtq3ypfsoq6xh1hphsnytqfpa6tupgfmgzsiwazdu"},"script.js":{"id":"xr8thtsuyrsnemxueecknpbipvdcckqqcg79thos_i4"},"home.html":{"id":"2sziqpi_fwuxx0j-fymfivuxtf7de0aaqjvp39d12uu"},"deploy.html":{"id":"hpdpumdutm17_awnd2vdeaxjjhc_egd2qlop0zc0byk"},"hash.html":{"id":"0p6gssmz3r9idfscwd9jkcw9snwtw5rqhnr5o8jxyy4"},"paths.html":{"id":"6ncmndmxfb9zmysl3pwfzfq-afipjhvc9w4zrs4qh4c"},"update.html":{"id":"bnkayc6zmes7abycqmhlcmehqkxw4b5rtd-v3nz2rdk"},"code.html":{"id":"lc08uxijb4lv64pvsi-pc7c_ty9l221sb27xbp4q-qc"}}}\n\n\n\n# network\n\nthis group of endpoints can provide information on arweave nodes, peers, and network status. use "get" requests for all queries.\n\n\n# network information\n\nprovides information on the arweave network and your gateway, including version and release numbers, block height, current transaction, peers, and latency.\n\n/ or /info\n\nexample\n\nrequest\n\nhttps://arweave.net/info\n\n\nresponse\n\n{\n    "network":"arweave.n.1",\n    "version":5,"release":65,"height":1236124,"current":"qwooscp_bewi0e1hgou1vrz2kwrf_lnlcgflin8g0hepdcictdxzflvmezlhgvz4",\n    "blocks":1236125,\n    "peers":90,\n    "queue_length":0,\n    "node_state_latency":1\n}\n\n\n\n# peer information\n\nprovides an array of peers your gateway is connected to.\n\n/peers\n\nexample\n\nrequest\n\nhttps://arweave.net/peers\n\n\nresponse\n\n[\n    "159.69.65.150:1984","162.55.176.19:1984","109.120.235.125:10011","23.22.197.174:1984","3.14.99.13:1984","198.244.165.146:1984","144.76.176.26:1984","34.92.74.22:1984","139.59.19.218:1984"\n]\n\n\n\n# network block height\n\nprovides the current arweave network block height\n\n/height\n\nexample\n\nrequest\n\nhttps://arweave.net/height\n\n\nresponse\n\n1236128\n\n\n\n# pricing\n\n\n# upload\n\nprovides the price (in winston) for uploading data (in bytes) to the network.\n\n/price/{size}\n\nexample\n\nrequest\n\nhttps://arweave.net/price/5000000\n\n\nresponse\n\n4191625910\n\n\n\n# transfer and upload\n\nprovides the price (in winston) for transferring ar to a new wallet in order to pay for an upload\n\n/price/{size}/target\n\nexample\n\nrequest\n\nhttps://arweave.net/price/5000000/target\n\n\nresponse\n\n16192017846\n\n\n\n# wallets\n\nprovides information about public arweave wallet addresses\n\n\n# balance\n\nprovides the current balance of ar (in winston) of the given address\n\n/wallet/{address}/balance\n\nexample\n\nrequest\n\nhttps://arweave.net/wallet/cf0h0skdnadtqwky9ijkbkttpdewgb3gnlnde7abv0q/balance\n\n\nresponse\n\n49708373893732\n\n\n\n# last transaction\n\nprovides the tx id for the last transaction completed\n\n/wallet/{address}/last_tx\n\nexample\n\nrequest\n\nhttps://arweave.net/wallet/cf0h0skdnadtqwky9ijkbkttpdewgb3gnlnde7abv0q/last_tx\n\n\nresponse\n\n49708373893732\n\n\n\n# blocks\n\nprovides current or historical arweave block information\n\n\n# current block\n\nprovides information on the current block\n\n/current_block or /block/current\n\nexample\n\nrequest\n\nhttps://arweave.net/current_block\n\n\nresponse\n\n{"hash_preimage":"s1e3ea8e2qurpqxzlw3pcjfautar0eskfju24zovy0m","recall_byte":"9260453092202","reward":"1117763374946","previous_solution_hash":"_____zvy1jyd6agequv4woabc_-3xzhqj6ee_egjnts","partition_number":2,"nonce_limiter_info":{"output":"_cb61khbfx8kzyv2bymuuhediv7vowhv_qtvemasfmw","global_step_number":15225216,"seed":"1u_rfskwvkyqv36wy0nq0bomedctwhum0ytio1aysdeq2okb5vedttpq_0qf0boy","next_seed":"obnypirotj3tzll4ffakozxkkgb3dkz3gx-tyn8i-dsbidytw-8o6eoysyh1j6jx","zone_upper_bound":146785664016630,"next_zone_upper_bound":146786177556726,"prev_output":"sqtznvyfifzqykehwczn-x2brsjqg_nsb8vvfikjyp0","last_step_checkpoints":["_cb61khbfx8kzyv2bymuuhediv7vowhv_qtvemasfmw","xp1-mvjrexiieus4k06icoau3w_3ig1p7h9-6qtevua","iat89u4costvx9jkol2sfjzh6qofiwlu6v2pr-lcp7s","iwkrihy7u1yyktp4nfxi576sm_q6t6diolx_0bmmt9o","yvzizqakghho1jbdhfjeb1ox8ddepifs3fimw-wdzi4","yvpdtc0jbms7oht3r2fkuf_llukuxxywtjp5njae9ta","bnwnpk5asj0cklr9seh7n7lhvlqfpfzi43erx5norsa","n0mx3q7yrkoeh4c_my-utrrzcznuppss9h0_zfnxgle","pr1hpvgaekvygur30crm-afjdvxuwyvdnxjgqxulhrc","qvocfrxjg6zfz87qi0hxhsnyboinw4ggd0nnsenuwiq","1wpvp13gnbrtxxc-_0bfxlbnu6xa1vnxfr4bmqsrbfo","yltezuiipsijag4dklgxsyf3i7gk0s3enstf9ujv4vo","phqrcll8vywiujokikymcw3a8_nzkbrht0sxdiyhrwk","gjeun6wu5ctyoma8drh3lthxbr9_zoxnkljuecj72ta","xfrlhxoak6iundf3kftaue_2fkzswzwml2azwtvcsma","1ydqldqgn3blyu42s9k4txmwwhrsf6auyohkylrka8k","ofpa_df24taf6z1asdj6k3uinej4tgn1lzk1s3c48_o","ma5gbhgbituepgigxhvgxohyizlef5oskeyskj8ahnw","hipyinbiap183w1nzsfr2ynd8blx8pccpb2msxrbx04","yfixobnb2asfm-iua_ygqzxrxcwr101fynxcb-owph8","urnkszilhmsgi4zmpbjspqhcc9rlfzkjicqmw4sgdqi","hgducadk6yp-j4ba2wpewgajqcouuwkhjgz2vrgnlae","wzqai7skawlo0_ikbacwhtegohrte7ofsjyusrqitje","w-fyr9pedw5jz_qpjsbetfgxshcb7qtewbyhc51e7ce","qc5me4nhkbi_q0ptjd18xib2gebrjg0jxsdhyutxxjs"],"checkpoints":["_cb61khbfx8kzyv2bymuuhediv7vowhv_qtvemasfmw","h8n6h9yaidg3v08qu-uxiifse9wucpx5vl8v3rukzz8","quu24gs1kqutzihwiv6q0chvgv1zux_r_8mqfifjqus","3qntiphqle8swrmyx4l7gc9h0mpbsceime2tgll_g1e","3ombqtvdlshwpxriemfhs_3p0xhlwnqubowgxgh1i-8","ahga-t3cjjocwsa5kwiazticcrglfee5x2ahgakz4kg","dvo4dpq4jj3zmg7qq2gn_1qab0zrfsveuq0rmorgwew","-liqnxwszmronokljh24xxtmf74fm0ywnp1sk0inhes","apvdbuncplxdenfmp18y7kyt7ywccoisumifskluemc","v-lndxg6zovzfvr6kmigrlooko6oqye5fqivywdjriy","4xsbhmirtk0xws9hycxrjhpbc71uwndbcx1yph2436e","eoigniprmod5sfzpogglnms8oaya4zto7manxdulw5y","30cpb4m1fx1jwxze16adccxefksvlfjtro9wo6wqioy","d6vzbbznmo3rpqtxn3karjuqk5cfriehbjy2jca48rg","-hmajbzagk-fxftgt0kyq5ad7xxpcl0hyfokbtnv2xo","gyentgic7odkwxd5fdvlt5tnzaideyrne_vm_zla5r4","gpdltcotwgacupqenh3mlke2kh8yfdqk1ylms23fymu","6zli89qpvk4twtas2vt3uorcysuc2k9r8k0x1dfqvqw","zju5teboz7aihyjpygpzdrrgzfknbjgoadshzsgxpua","l3sshwfpn2erys8xiikyvp0h7ivm_wxb3otfyuhsnje","ekcgz_iq4af1sxczwmdv7jooiplmnh7nen49rznid5q","qdbcmg-ltn5utgcab6d3qltxf2_-pvqoe-itz53agxe","uqrumrjv8jaggalwq8jkhulqjjjsvxrgs4jso1fkpxc","zjasfu54h1kmto2u1z89wfeamea-87hzvalg4kvqq3s","2yreuatc6t_msrsi5xdd1271kldxlpokax4i2kuhpys","lf3or2x0pe470qfcukkgpyzo0m-lzqjkaqzjgenpl9w","3g15pqlynblbs04oogbp_dwuc3gt5ir4abrzow648hw","z5zmqvoamyaizu5_ttkj_rsgkckcbjrjtigjawh3gdg","ucevnex9pq-5iqp-xcwgearaxwlzljvnizpwcremwxu","qribqb5ouabjazcdkot_sitvkuccw1edph7-_ogbjte","emnesqiflf-gn3jjhizy0keyhwc-m4ia9nhlx-_keqi","0httdyyyw7hlpj4jdiafxkrsrq0-qesflt-tehadzvw","rjrrehl3yeivgxv8o2zdiwktohxmf_-0wwjcsdwbhbu","v-n3vs7u_nstaihbuumglyhbyehzjmhcod2en4wmoqa","ihaa4odvffwhvg7i-orx-nc5bbsqu_nqnizhf78svmy","qi2ak4uzjqlg7vugkuzerlpkk3a8yffnl0xkslehwkw","u_3skzr8nxlrfb3zxbp5ih62bihzj-jzolcjsyp4d0s","vgrwniixmne5cwzmrcoppyxrsm63wlfb_n9cnhuokdq","vkolk-7irle8dfjxv79wley-81g_7asc_enevvgxspu","k-zcb13xnbnkqkzesgg1ho6-8cn0kh655qbmul9rmrg","e_qneb-zngtpp8kj97cly2rie68kfhqurtnvniqxvy0","ryubfbv4jjgj_slxipoathvcg8qwkcdkxxsb8iczrxu","e_zyoxoyw05bche0zhlycm-ufaawpe90lsrpwb_hqu4","ev3akkrlldq7wd0xujml8r14hhnqxns8jl42asu_cm4","zsf9cn2zloxou0kkog_gawadnte9bdh4un7b9serw7y","qr-jfuw2qwo1bldijp56jg4_dflkzu8yaioddpqcxfe","vn8nkoe5pqnwyemw137n-vvwfabsibuzfc17fjhgk2e","cgzqnrs6kdh_pgiakipcsmqaqaiszbc3tb-ozznnmx4","zk9g918_e4eo6vvuuhgky6favuoawr4zbyhjfbfcjik","faaxbebev7igzikfjhjqibsxj-7va5x54i6zqg2ahtw","sprtvk8i9sbvmltxkh1u1zoj33dugd_4a5w4k_vbbck","xkioaotqng6qxppa6coli-fnp1jkjeuxrgotvsuwsjc","a2j672lw6zk59ri9zp7ntbv4yyhawbdkxqrx6mdnr54","11h8jpaqncojex1a7xmmi2ypyi1x9lyvyjkitvf247g","ojcwfaee4aup0r6ogtlgdxrpvolfwncqhlk3zkrqfwm","tco_amjm83eejxkud5fykrgqc5z5oatnbjlqddydxja","oyyksbrbeceym71ffvviutzrrysd6259kf0ibndeuqm","eupz6ovoszrmf6qsq7i9wv_htjcfezyx45qyl5g6oje","8qj2ecuvv48ccpagmclxq61erdxext9a1m7bef_xt10","7nwibn94ldrpuiy0capwavwruugjtkxzaqsxb4vgsx8","lp24zyvzl-ltbrziqvozjijciztaku5kiiq0f77mjom","da9wjtj0b933fhuinv_qhrb-toxhmhyx6mk9tenzemy","scykdagfzsnnlezfgynmxsxhtzjhevjhfi8ffuknw7m","xwhk1jdxhkzamwsyq_ubu6tvm8tnol4jww6u3o0b8us","abo0-brjnangifma7gwl4typtnammhfhgsze6tnubg0","lfivhjybl8esc16sh_6x7vukoe2rsxcg7_2tx42gsby","cgdxxq_aevyyq_ah9hkzstd6zdncaibmzjmksssyqsg","1kpfj-jtfe8jsvxcgwxrgobjjfqoruf9kye99qn9shu","9ujzz0swc3hhxlzrxvrwf1iiqkfzxggkgtlzofsu0ys","xpxnh-ovk_eppnjioamhvyrrnjbliacoi8uqqos3wo0","2n8yqiospiqciyoe4dhzwovztwaxrd-avypcenzq0gg","7lzbsbqtzkmmwzdsjewhjzcj99ivecgswtfswvavayi","byvqreu-4pdxkckrue3qt4zewpaddgi65b8kr4clzms","svzr_l2p8xbo3usze5m-khy2uclgcnqxrudcbr8r1ci","jok-beoyh4ohpehwlr5hxfmgimw2ltnnrrtndnwu35e","ytiil-fny4x6gyqv1mkzvt0ksc1iqk8lnbjlj8n2cme","csvrdxggaxsrrzti5mrn4kuuoh7wpiuc7xqnpzdzqoe","fk6i_0xv7o9tabdamfqgecmnn0uohpqwchpy92g2emi","937e5g-d2lzdpzfjaeu6_ixwu_ad83_3oduxyb1byfq","1ftvwyf-l2mxkyyzjgxjstc9tnc3ny5cpqy4ux0cgwg","nwdsgwoxr9lvtngaj0tummthjouvz-ege2f46y-zyoe","f6df-533vnzyn6wtfj964kqnhkmzfnjykrpbvurtw38","peue_jpjdrm6au28yrdtvkrktyzgzlyiuo_otdb6yjq","00lhmmshalqbbxg_qrkg5szj_ochcfmgwdujvyrufa8","boumbrygtgan4vfvck0mcyhf0wmlabmk_n8aqslnhb0","b6rjn4j84ejlfnszyfepz4sdc61ue028noabib_y-ly","2grlq5u3h83opphmrupvbjfzek3fwmikjutlqmainlu","mka3xnwsypl6tqfixf1qcjuuhruen2ec3huc-7ihxtm","gvl4purjojqehk2-bxyymyy-ophozjz4w-faslvovlo","nt6yzsf-0sxjsupasmfgv-osnhhqary_lhkkrz77tiy","grgsaxecx58v24iiimcappotxfz_zynrg8giiklreou","g5crqx6uuafnxygsgbe7gqgokzz8xgkqveazt3n6zwg","5a_yhu4zsliw6jr1yglt4jp3r3brrgal7libgccad84","sn9wcxu3suus5fqhvjtmtt4gd9zjexpk91vnpo1ymbm","emug_ochjcplugqqsfulovhp-yfenk0jyfk2ilvh7y4","8adevfrpovrklcsgz1rtlxzt6ku4htskrputhfrs_yy","f2funildr9tufpqmrgrgm9fhkaat8cwqvqkybjphuvu","otz8wgj20lqasc4fznvalmphjfaptl216rj2pa9l7de","phvr1iiad5qtcc0zfzvuvtzv0h0bgyynjjhosy_-zfc","ighcgf3rm3laxq_nbb6hi0olx152bsiny_zarferovo","mogahbg4chmjkyczxhm9xpm4nh_jcfth7h5srgwhcpe","4mn9eiwxqmjwc2kzycdmz1vb4lu5xzovytgr9loafvg","dwcagjss0m_m5kbxmkd1re0i3jvihhv4m4se48axn2y","_hbacdnkwmbc2grxjeahnwtujabv3s0gvi6jbz0dw5y","ajwl9fjtoujqid6q725xjv4ksjwfv__wrk0nu5lbuwm","9rxg-awqmbvlr_peg16kvtzswc0eg2_ta8dmgiugtk4","g73safmfm5dukz7cw0xegkzuxf72fyucecedrzjgedk","l41o8owqocausuwssdhnmu6ksp2tihbzn7-apmvsupm","sis5w20oj6z4codtsugoci8ynlpqspbbvnd5y1pvnku","kyp_frr4krbb9zk-54s_i0-kqvlde-bq0iz9ge0_c9a","dxbmc8qmksvu7djuxc0e_zyg7ret6d9am8u15twieww","du-0qia3c7gi4m4oxv2cxj1aceuhi3avdpknply-e6a","u2so4p7x8cava1chwpkmuywqyz-17s5u7jshzwq119u","o2zv0z0__r1jst1cbwsej95xiwl92au39xbrmh2dr4s","fj-5o6hxrl5sxqe9qn9piihv5dhpjezltsqp9toofmk","lpiyrwjzndxina-b9y01qcchdbvb3pp2euhjzaeqlls","hdwau8jpylicqaap56db5ykno8h3tpkuzn3xhlohee8","cjm_3h6icg-aeaak-g3zhve5my7q2jra6gsuuhuzfci","mmsxgklwxjxjjr7olfgptlcb-hwxltf89oithrg0ri0"]},"poa2":{"option":"1","tx_path":"","data_path":"","chunk":""},"signature":"kncgbt7qaw7ns8da4w1ztpp1i-osab0hsan9aumo_guj0lyncpppgby1xqidcjgml3uvpx0w3jbcqwobcrbzdzzccdq-flbbrm3i7s_a7y0kq0zpu8dpb0aaqwtvoocm4exv2kpkdzszgufzhrcfpdfs_4y1geqxmpanpphzho3uxfqr06a5wn-xdup-sdjn0a4vuquxzf9wiyf4v6seusj5befdgojkj2hq-ejkm4lm3uunuunfekx68uhgnhtdxjh8yucdxu3jjfw8c5vz1c-rle0itd-estlmd-ficvdmaklj6avlvk8kfxock7ccdwhzlb0ev6gfvd6i9xp30ng5clrfnqcqkk7h_nuv1qkqyfkqozrdldao9kpkeutor2v_z3ohq8-sstp0kke2_s6azn1dhvioaslwx5q5eq60qxtn-4xc3uz3s0m5obz84xzfiufey5k8popj5bqfes3wfz9hln5dfawvnebl1eo0tmrowybvbve-stf2uwglpsfpwmd435bvmnsg21hjz-pjof3ydojos9pv4wilzjlw4gkmqaa2rnv4mwdbogdja-j4t7znc2aiol_fod3macjtr67jp08w1wvawfy7koggucxr2ahymje2gw_3uc6tdt6glgqewyshxa26wvkatvudjgz-ue9ckuiuk17mau4","reward_key":"v3cg39nqs2ojifn8tcavbj_61rcf4p7t6_j4oxdip3f4dj1quxs29zfgyv1zom8jnlv6gxrfxdun8jswyrdnqp7c241n9uknopsesaxjtp8x8ugwmknpajbg74j2r0lgvvplpa5fuaemphocvyjjngdu-hbtc98k5zpymavxmgzreavqndei5gf3_4_i7-wnjpyxmxke8k9itx_vco5a2lihunmmhy2paimgcvuqinl3eqgfcpmjkiozyt7_g8ggxtihqy39iuu29w0oksm4t8jydxy59tylboj1kjbu9bkw6fys_a6xyryc1dgq8dczyzti148fsmwba7pou9clvvo9ao-drx9wjcbqnj1ptnzidvgdhocu133ohvbj16ymrr9f-qtr95dlyzdwhrzopeynbsayobecsomql707j1xtv4cf90jabatkkp3jvvtajdkyltyzgonecbsggo4jnhdgudnu4zlh5-zsdkrx2me5by_jtwczy9m9oq0ratq97icb8bwhxoiqxk1zjp54jieghidrb4-wbc9ucuzfix7nspndcqdkdbhzn_m1yykwktlmycytpv4kjclclvu5tdbuo0hgjy4hzrbkqepdf1xrrrl1zfqtwr15lcthcq4x7tpoejvpw2r3m8ux4zqqsyp-phacxmfabsw0uqcvnwk","price_per_gib_minute":"4678","scheduled_price_per_gib_minute":"4680","reward_history_hash":"fnqlnkvrvroxzykklcwyihsi1hltso7ahq94a__dwua","debt_supply":"0","kryder_plus_rate_multiplier":"1","kryder_plus_rate_multiplier_latch":"0","denomination":"1","redenomination_height":0,"double_signing_proof":{},"previous_cumulative_diff":"4613611199179364","usd_to_ar_rate":["1","10"],"scheduled_usd_to_ar_rate":["1","10"],"packing_2_5_threshold":"0","strict_data_split_threshold":"30607159107830","nonce":"axc","previous_block":"axmr2f5wi7zh3ypo27hmxwz9yeircnqycfkrylzhc79dutszxflkpk9j9cbwil8c","timestamp":1691457810,"last_retarget":1691456466,"diff":"115792089204114897199868697479928234945323558989912924463463184699835139554024","height":1236169,"hash":"_____wymdgde030pdtgfmnz1hwanbq7n_pid5e28yrg","indep_hash":"igvyagwtqksldjepgikwkndrvzy-o6stowvh_sr1phr51z7cms1ucfmzlufcsqio","txs":["_esijrtefmks1wllfyflwmhxb9twmhz46np_6vbl0cs","okh-wvyfy911x9wo1ls7xgugrol8cbz7kzcisxhq6ic","7uxtgs4hys8m837a5iwwrtiua0i9_gmxb_fy1gk1xa4","i6gdrb-fz-qim5_fp3o1-pl4ivdhkkhdwnbrlhfilnw","wivy6cxew8o-iclelydub6v2frasvj0jmoonvcqjjze","_cv05lzfyjrkfy1qbq0rg6mzudbwe08gnyzeb2xlt7y","ckjrcrkrin6-qbavseg6grcnsyuk2lnetzf36mkwimc","ahhvc7p9a1ayu32cpdu-wwybzjgfuzchhnqnmvy5wt8","vz6na99gbljq_svoh4epdcwmvwma5fdqeb37wmosrcq","9ykkiv1zleivsj1wezfnaq04awun_f9hihwulmcgj_a","4_7vxibtko0c_rz5jnrwnryiyrrvhj-8kc1ndyogbi4","kvu24yhwgi71q1ilbjhzppywlyvq2d2o4n1squxyeq4","vhonguwy5ka7vtqfi54i8yq4vcgnedbm9wormvru6ck","nhnienpovgpj2n2eyhycmndcql07hz99kxk3ovj4iiy","bdehl6ginec_meoluvoknc79pnnzwjav4n5pacqvzqu","mgwcvqtxjvfbys5gplhatevetlxaxf87kxgd4eoon4g","pyjt93iwcxsdgdlnzfogyuqcsqtptp1luiqdgzak6nm","afjmvddtuyihxx-ggdhxxxisxvs3kjdfrxx55_fcpro","k-vgq0q5rffazldomowszl6b85s7rvh4mmza3v6piw4","55azam20sjmuq4pmrjwzmuy9qt6gvoefdpuwru2feua","4he75cw1qlwef4iqdmdt6y4t10b7ijx4uawgxfavp8e","7hai9tqagxdsf6tel6digjvy6ytzoley7aa691dduwo","bgpffzv5i64yion6uahb3thykiwt2xu9baev1kanlxu","8shh6fxdpqbcv8ckmbee8zmskvlrqkce8b0lkg2rhs4","jcoqdav0ym7ku0oj-czql4ihq2l1tid-gb6pw0pjsrm","siantxflsh7afvakffk1h9rntlnqjidfdns13mrsgle","0pqroxm5ypljtefp0nv82x8kw2ihe-gyteojssi9fga","aw9welhnqacbzzwn4vrajeo998eojf-h1zzhx7k2xra","pgyttq1xtebc0czhwansvi2cbixewdfh9v2y5bemcz4","muynv55dp4ld5gbmyxqnu_ppowebkswcvii5_ooimba","qgx5tuxfwp_mo9jcuwxsixtvaw9py0csanibafq--si"],"tx_root":"b2lgoeuxpz9f6_4gnfogbwtj6vvw6bzfhd5957sg2xw","wallet_list":"hkm4z_hhcqx4febtn9bf0t-vibawc4lfhd_hmi1cpnc4hhwbs150g4cvh5bznekj","reward_addr":"lfgp-b0emzozpekjyrckwbem8mn3av7gxzssjghw_vm","tags":[],"reward_pool":"54107380272440297","weave_size":"146786495013110","block_size":"33030144","cumulative_diff":"4613614686756520","hash_list_merkle":"nkoxmbkue3mlym0hyexhfl65gkxdczevx8ii-x7s8ussn6mvc_mrgex4vctssgzu","poa":{"option":"1","tx_path":"1fvayxr0-poodlamc7juvky8hgp_u6wpfa5kbvulnrjj7zuacve0ywzwofpr5rp91xljcmguqfg0itf3sngahaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaalbnxbna5rjgl66xlbsqulyntkp23drteyk8rfl78eqbcf5g5hioupwbrxi8454vgidgiss0upl0wzqt2aosw331mqywaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaftcsqkefxrt5a8rsdzglg_gryiek7l_0e2wcx8qb2_3r9r7lrd3lgxwenr7w63wtqp3wivnqxqpkag0svfzwlpqrrogaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaalx4plp6teyuvtoxlbzcukcmqhk9amfqugdc__cfwoytplx43vjpqubw9jm8nsdaz-6thdu5p29_ykbkcecijd-j32yqaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaftc9uktawudqggumouddlpejpmdw0cqp0r5xfi7tig9n9msh2qk99vitygwwvnh6iufppdfgtztmz9j1clvszgmdbjqaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaftdixzsh62p8lyp6smolrsgslfryhyf2u5rieazbwtvxuyxlg4nx4-pqc_h0vihnpqz1tfi_su-a9u2pzrcoe94s3bwaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaftdmhghfe4kg0rxgfxkrnoeaknqipqnca9t2ruxawxrrrckiaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac1-kzq","data_path":"3wne16jgixyh8cgff0jx26ov9h66jgs69srqh-tke77wbccuuyecy274e4vtwfi6ub1qcu5fhh-ps1bktzahvaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeaaaadqqlpakkkxibzho5srworwzv2bft25klvnznzopxep3jqlasmrauk8x0ue_2qs5kozy5cb0nf0pfrbohhl7ktqaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacaaaah_vvxx9kzfideeqsxvxpfz9uszy9x49n_z-xu2lfvo69j1mh72ce8g2-8z1kte-_bli95oothvibtlqf4spuhgaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaaagbqgimythy0hi1spvbk0bh_s2spkjzmdwq0yylj9w611tjt82tpgaoijwdw5hw7njqwaoucwb-nqu7bcxzqb6qaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadgaaaueohh3x1tia3z8vgjif8lrc02gohvqc4oqpboootk-hnrhpri75z3cdot5qj9pov-kqw43mgpmhgdpsjy3j41qaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadwaaafpyi1msgba1eaqxofllt6e9kyklhueqin25wtlqk4pghtnrevhyzv4jx4qpw4nd_xyim42ow5ugjesjvr0tbxgaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaad4aaasynz2csg-eslt9z6wfzx35pfa_s_urhpfb7nsyhbgd8pmuq1csopimnhrs7pdz5pxe2es_fxufoo5o6eip5xngaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaad0aaab4mgltycrhvtsb46eovsxar_57eosveowir1ohxpwfzzu8c-iloedu13kkrw_obsbqrivob5-nmomlpfivcamwaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaad2aaafc-xr8-v6xqcbsg0w4ckibrbezoyiphtfncpwlsr4bennvvjvxrt0igobh3dwz0nngv0nh76kkvjzyqeanjocaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaad1aaah-vsuqhltdzyzural1g0a5dzzqyu1gjgl6ixl7rfs7oaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa9gaaa","chunk":""}}\n\n\n\n# specific block\n\nprovides information on a specific block height.\n\n/block/height/{height}\n\nexample\n\nrequest\n\nhttps://arweave.net/block/height/1984\n\n\nresponse\n\n{"nonce":"aaebaaabaqabaaabaqebaaeaaqeaaqebaaebaqabaaeaaqaaaaebaqabaqeaaqeaaaaaaqeaaqaaaaabaqaaaqaaaqeaaaabaaabaaeaaaebaaaaaqebaqaaaqebaaeaaaebaqebaaaaaaaaaaeaaaeaaaabaqaaaaaaaqabaqabaqeaaaeaaaabaaebaaeaaqebaqeaaqabaaeaaqebaqebaqabaaaaaaaaaaebaaebaaebaaeaaaaaaqeaaqeaaaebaaaaaaaaaqebaaeaaaebaqeaaaaaaqebaqaaaaaaaaebaaebaaaaaaaaaqaaaqaaaqabaaabaaebaqaaaaaaaqeaaqabaqaaaqaaaaeaaqabaaeaaqeaaaaaaqabaqaaaaeaaqaaaqabaaebaqaaaaaa","previous_block":"wtuix0esjlz-lzmo5hdl1vos-qnfauhflysyivfqa0xsoltwsv9bnr9tl8qyv4so","timestamp":1528744314,"last_retarget":1528744023,"diff":31,"height":1984,"hash":"aaaaafd5fl39rcwtxle_5jik9otnmkmkpdzcdfltq0on_fpl47mhrw-yrcvsauph","indep_hash":"ca_j-ci5epeg7_i7ys3be66mgrha_dm6nzs5azlhkpkc7yoz0p-2sf6osr6slnr7","txs":[],"tx_root":"","tx_tree":[],"wallet_list":"9oo9b1vqrldyvnh97ejduubum_tr-zycdpa7djwgr_o","reward_addr":"xj2g4xl2infg3zs0nauauxwzf45hbxmee7lfp8j1olo","tags":[],"reward_pool":146475228801,"weave_size":599058,"block_size":0,"poa":{"option":"1","tx_path":"","data_path":"","chunk":""}}\n\n\n\n# get block by hash\n\nfinds and returns a block based on the provided hash\n\n/block/hash/{hash}\n\nexample\n\nrequest\n\nhttps://arweave.net/block/hash/ca_j-ci5epeg7_i7ys3be66mgrha_dm6nzs5azlhkpkc7yoz0p-2sf6osr6slnr7\n\n\nresponse\n\n{"nonce":"aaebaaabaqabaaabaqebaaeaaqeaaqebaaebaqabaaeaaqaaaaebaqabaqeaaqeaaaaaaqeaaqaaaaabaqaaaqaaaqeaaaabaaabaaeaaaebaaaaaqebaqaaaqebaaeaaaebaqebaaaaaaaaaaeaaaeaaaabaqaaaaaaaqabaqabaqeaaaeaaaabaaebaaeaaqebaqeaaqabaaeaaqebaqebaqabaaaaaaaaaaebaaebaaebaaeaaaaaaqeaaqeaaaebaaaaaaaaaqebaaeaaaebaqeaaaaaaqebaqaaaaaaaaebaaebaaaaaaaaaqaaaqaaaqabaaabaaebaqaaaaaaaqeaaqabaqaaaqaaaaeaaqabaaeaaqeaaaaaaqabaqaaaaeaaqaaaqabaaebaqaaaaaa","previous_block":"wtuix0esjlz-lzmo5hdl1vos-qnfauhflysyivfqa0xsoltwsv9bnr9tl8qyv4so","timestamp":1528744314,"last_retarget":1528744023,"diff":31,"height":1984,"hash":"aaaaafd5fl39rcwtxle_5jik9otnmkmkpdzcdfltq0on_fpl47mhrw-yrcvsauph","indep_hash":"ca_j-ci5epeg7_i7ys3be66mgrha_dm6nzs5azlhkpkc7yoz0p-2sf6osr6slnr7","txs":[],"tx_root":"","tx_tree":[],"wallet_list":"9oo9b1vqrldyvnh97ejduubum_tr-zycdpa7djwgr_o","reward_addr":"xj2g4xl2infg3zs0nauauxwzf45hbxmee7lfp8j1olo","tags":[],"reward_pool":146475228801,"weave_size":599058,"block_size":0,"poa":{"option":"1","tx_path":"","data_path":"","chunk":""}}\n\n\n\n# transactions\n\nprovides information on arweave transactions.\n\n\n# pending\n\nprovides array of pending transactions\n\n/tx/pending\n\nexample\n\nrequest\n\nhttps://arweave.net/tx/pending\n\n\nresponse\n\n["a8lczptawuby5hfuvbfjsj4f0kb205_ueo8xnj9arsu","htlgucgtdefwqiwyqqaeqb97o8nyn6za6cxthx8pi8e","ah-qk6q4lz0k1glb1rmx8yvxb9g7rlsekwr79jqxcom","rumrsmmbezwbo-5hjqlhg8guex8fu18o5_xhi0txzsy","c05c6xfq1m7z-kdiyvwavftij0n8acqc9xb9h5nyghq","l_eoddrwqqjgzcdur6ne-tt2v4ikyttpxe9jz3fnsgu","p4iptjpcrs7wlb3p7s1o-jm6nptdm3qev2cthzxd7ju","bklmqooy1n4j9atvjlytauxuhm_tkm_vy9cpabkmuv0","adslcxbfswfezer62mtmnw1i54r_ja_7woeeh5sfzv8","p8lhrillzypdnn70yaphbfhm5ixtonezvk3guspxg7e","ecoewshw1jbuqrikeasvrpezs7rj2mzajf4pzgyio0s","mswc2wom4tcevsbrqg840rtblebvi2w5mjudgxvcx8e","uc9ryaztdfmjcx7hlz2z4ykoujzidqre1t0v-f_6bpu","jgmjpi7n0qhk7rczevkcxwbebcrazafgrl8_wijff1u","nvuyfvldubj5gupfpy3jzvws6kz1yl2md7wwkdxjdoe","-rnykfarerxltflsxzaku6on_t0iqyaro7zn5rp7rl4","8j6o4fqp-vl6_gymbfibaf5ajzwtf-swgd_eovigwp0","os19pbfiynodzcr9jcydmc1gqxc6x4iy0n_jix9n7rg","wqtp7nfqfbytr3zxf3o7a1ueb9x9bobtj6n-oidjxxs","lpk88ilqk7psehd-4m8g49cgmq30rlkvjev0-enbv80","lkdfdpro1_vxznixmsxcmp5u_fbsgujeri-fyo3bu0g","zkx8jrk__onshduyn1wavbldiizc2oavzvdscioyfn0","ic6uch_lzv1-3lrggvxdjomh8zoaz2jyrrnsyruve20","javm0gt37c0p015ccr24ltycsrh7x8ubnixzoaojh1y","mtcurfau3mvnoobvkvevujv6llacrohrbqskxcde_bg","ur6r8ps2rc3j0a3hqyq4iron4qjhjqxkhzogkpz_mqk","hl_zitvhslgs4s_my-o6_th78dyeviqzaejrfkugqai","k2pfw1ysc9qyx9apeehcr1yio8jvi06puz7l7y-il4u","8xyus9sq0slkuzzwdwlw58d0kheekrchwpdh0zntywo"]\n\n\n\n# transaction\n\nprovides information on a transaction based on a txid\n\n/tx/{txid}\n\nexample\n\nrequest\n\nhttps://arweave.net/tx/a8lczptawuby5hfuvbfjsj4f0kb205_ueo8xnj9arsu\n\n\nresponse\n\n{"format":2,"id":"a8lczptawuby5hfuvbfjsj4f0kb205_ueo8xnj9arsu","last_tx":"8dph9wneauhupx_wqddqfvstbckkfqsgoompmocsqkvopy7klce1ljxqlgowgo27","owner":"sq9jbppkllaktqwalfx5dagngmltirditxk7y4jgoea7dem0z6cvpe5xmq9kz_t9vppp6bfhthyzczodercevwipzkr36tfqkr5edguqylivdxuzbwgvkzw7d27pjea4cd1uy6r18rylqergbrvazph5yjzmpsjk7r3mwnqquuktjvspfclfwsxp1w879-ss_jalm9iczri38henonio8gll6gv9-omrwwrmzer_15bspck5txcwpy137nfkwkd5ybauzxxcj424m7zlshlsafbwarwfbf8ghtw03ijer4lr4gxey0wvnyab3kdishqp53a9nlbmiwo5wchhysr83ot2ej0pl3rwa-_imk_snwgqtcjma6tf_uvwl8hzys2iyuu85b7iyk9zqoh8nqbnc6qibice4h9fe3bn7agitie9xzctoxdfmr4ahjc8kkqj1z4znai6-leei_mgd8jtzh2vqfnzhxk0lsadfl_9oh3aet7tuds2e7s-6zprpd9obzu6-knuhdrj6tqhzswj9zo5hysccb_g_1so72axjymr9ggjgwr4j3bawayynqmvmzgklyole_5hvnmxf-uxpt7ztdshbc9qeh6w2bzwxbpjtczezs3jccb3c-newnhsj9pym3b5ttltnp9knawpzhwpt11t79lunkngt9lfoek","tags":[{"name":"qxbwlu5hbwu","value":"qnvuzgxy"},{"name":"qwn0aw9u","value":"qnvuzgxl"},{"name":"qnvuzgxlluzvcm1hda","value":"ymluyxj5"},{"name":"qnvuzgxllvzlcnnpb24","value":"mi4wlja"},{"name":"uhjvdg9jb2wtbmftzq","value":"qkfs"},{"name":"qwn0aw9u","value":"qnvybg"},{"name":"qxbwlu5hbwu","value":"u21hcnrxzwf2zufjdglvbg"},{"name":"qxbwlvzlcnnpb24","value":"mc4zlja"},{"name":"sw5wdxq","value":"eyjmdw5jdglvbii6im1pbnqifq"},{"name":"q29udhjhy3q","value":"s1r6vfhux0fobuy4ngzxrutieldvukqxtfdkovfhrli5ewzzvxdimkx4dw"}],"target":"","quantity":"0","data":"","data_size":"17281162","data_tree":[],"data_root":"eu3xce8mgabqh6vqhlht_sdtfe94-uuukdycwkfmqie","reward":"14379525145","signature":"jzyb8ior7cxs4-y-__rxtflsngea9i4f7j5dkp9docogcdkthsgnby8zrms_mveresxdpxqagaquwu8k9nabe-ndywo-kdrcq3ipbr95nvonnekffj3p32k2g-bqeqcok5hpzdizyrk6zr9kpyasys2l4groqildhwe0c0hspmykuozudhasunhpd7ryse63hkwtmedwgcpvkkttexg9gjekonnnnxte3bl4hnu5wolkpkytwt8wwykezcppankbysf1hknloxruwfcffm-o8q6todg1i0akbjp7yr9ymmcxou0e-y3xgbldyj9b940k2a7fvgwk2hp_woqzs2kfs9lxwzcmfj9ag454qkemd1pwvvmxfrgon_scvdtmyac-eldirgvwpzy77g1m59do81bml2_zo7g7duzw7pcsfxjbnesemmv4muns5gimilr7snsipw_yllgbbufjk3dknee4agi22gk_2b0znjrtuheqvio15ihzx1nbfltqdm-esffszr7f4gk-zhijv_hem183s75jh3mlhgdjjak1oisjkeutp09_4_wys3jgnbblejix7jmnm20k4tm2whwjg4wz4poy6_etgohct0lhah1xtk08nwbe6tkqeojxbbioy0jxa8gydgi4rrvmuoasisjdwcuvoze7jelqyoaxw7u"}\n\n\n\n# offset\n\nprovides information on the size and offset of a given txid\n\ntx/{txid}/offset\n\nexample\n\nrequest\n\nhttps://arweave.net/tx/a8lczptawuby5hfuvbfjsj4f0kb205_ueo8xnj9arsu/offset\n\n\nresponse\n\n{"size":"17281162","offset":"146788128412032"}\n\n\n\n# status\n\nprovides the status of a transaction based on its txid\n\n/tx/{txid}/status\n\nexemple\n\nrequest\n\nhttps://bobinstein.com/tx/a8lczptawuby5hfuvbfjsj4f0kb205_ueo8xnj9arsu/status\n\n\nresponse\n\n{"block_height":1236198,"block_indep_hash":"binsjndlurchlf34-j0pepcypkwwagsly_ziqn235s2royllvevso_impkzvgu4w","number_of_confirmations":14}\n\n\n\n# chunks\n\nget existing chunk offset information\n\n/chunk/{offset}\n\nexample\n\nrequest\n\nhttps://arweave.net/chunk/146788128412032\n\n\nresponse\n\n{"tx_path":"hdwq1zszbltk9xikgv2ydlijywbg7tnrrgt7vlc3hrkq2uqaqchhijnlumytek1gk_efshs5zgysyxp218zrlaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaeeal9xrcprijdhwkiwqvwfc03wlqpx_pdpk6ebkgdyoyglinuplstv9ctxmdznpacmopzsyyxvbmbeql8jrw9z3uvdqaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab8aaahwcao5fnvs8i1dr0dmvq47fvjc6bcakryuyeqj1heokrqwufz108gvrl6uztewygr75jjamc3xxny6hjngmvtaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabtaaaap86evexjn5pmmbga0epetqqsmcu48y2vddcpa_lkj6iqow56ogsmrzbs8s5iqg-7_l5dwzkckdsaeaz_az4cgaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabmaaa8r751ya8kq2_aleqt_a_r7hu59wapfzaalzrwxb8aytpsfd9gtqxin87ok0dekdrbif6d-0yyrdveg-8jcztfwaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabfaaa5kqqj2vvheg_k4nunoiodemsfxnxyt0ecaf_xjddiabfuzmg0k612e47cyuvqsber46gaprm7bhmxjtmjii7yqaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadaaame1z0blqq8heamydmmnyo2esnoq33f466pt9icctwkdxgcmv67cxthf9yihkiiujvxavk8lj7jsjei_otnla1gaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabe7ckeu3xce8mgabqh6vqhlht_sdtfe94-uuukdycwkfmqieaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaarowig","packing":"unpacked","end_offset":"146788128412032","data_path":"ygak4guhpkt592hbm52eptyptolxq0xesyatstldkzf5dh-cgsm9oznjz1gyuwfgl1821ckpzryexys-2elccaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaa0twhxbuymy_85ptq-fkmzglh8tf7enrnc0ctobxp4b1h6bbz_ro2lktst64jbbfv2hmjulixzfus2fgiotxxfqaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbaaaklscihzqqii07ogt1xlb9tcjcy6nxb-plcx4ujffdueaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaqewig","chunk":""}\n',charsets:{}}],themeConfig:{footer:!0,fontFamily:{base:["Dancing Script","cursive"]},searchPlaceholder:"Ctrl + K",repo:"",editLinks:!1,docsDir:"",editLinkText:"",lastUpdated:!1,initialOpenGroupIndex:-1,logo:"/docs//images/logo-party.gif",sidebar:{"/":[{title:"Welcome",path:"/"},{title:"White Paper",path:"https://arweave.net/lNjWn3LpyhKC95Kqe-x8X2qgju0j98MhucdDKK85vc4"},{title:"Network Overview",children:[{title:"Introduction",path:"/introduction"},{title:"Arweave and the Permaweb",path:"/arweave"},{title:"The IO Token",path:"/token.md"},{title:"Gateway Architecture",path:"/gateways/gateways"},{title:"Gateway Network",path:"/gateway-network"},{title:"Arweave name System (ArNS)",path:"/arns.md"},{title:"Observation and Incentive Protocol",path:"/gateways/ar-io-node/arnsoip/observer"}]},{title:"Gateway Operators",children:[{title:"Getting Started",children:[{title:"Overview",path:"/gateways/ar-io-node/overview"},{title:"Setting up on Windows",path:"/gateways/ar-io-node/windows-setup"},{title:"Setting up on Linux",path:"/gateways/ar-io-node/linux-setup"},{title:"Join the Network",path:"/gateways/ar-io-node/testnet"},{title:"Upgrading",path:"/gateways/ar-io-node/upgrading"}]},{title:"Advanced Configurations",path:"/gateways/ar-io-node/advanced-config"},{title:"Delegated Staking",path:"/gateways/ar-io-node/delegated-staking"},{title:"Environmental Variables",path:"/gateways/ar-io-node/env"},{title:"AR.IO HTTP API",path:"/gateways/ar-io-node/api"},{title:"AR.IO Admin API",path:"/gateways/ar-io-node/admin/admin-api"},{title:"Upgrading to Observer",path:"/gateways/ar-io-node/observer-upgrade"},{title:"Troubleshooting",path:"/gateways/ar-io-node/troubleshooting"},{title:"Troubleshooting Observer",path:"/gateways/ar-io-node/observer-troubleshooting"},{title:"Release Notes",path:"/gateways/ar-io-node/release-notes"}]},{title:"Concepts",children:[{title:"ar:// (ARCSS)",path:"/concepts/arcss"},{title:"manifests",path:"/concepts/manifests"},{title:"Browser Sandboxing",path:"/concepts/sandboxing"}]},{title:"SDK",path:"/guides/sdk"},{title:"SDK Release Notes",path:"/guides/sdk-release-notes"},{title:"Guides",children:[{title:"Arweave Name System (ArNS)",children:[{title:"ArNS App",children:[{title:"Overview",path:"/guides/arns/overview"},{title:"Registering a Name",path:"/guides/arns/registering"},{title:"Managing Assets",path:"/guides/arns/managing"}]}]},{title:"GraphQL",path:"/guides/gql"},{title:"Delegated Staking",path:"/guides/delegated-staking"},{title:"Experimental",children:[{title:"AO ArNS Resolver",path:"/experimental/ao-resolver"},{title:"AO ANT",path:"/experimental/ao-ant"},{title:"Farcaster Frames",path:"/gateways/ar-io-node/experimental/frames"}]}]},{title:"Glossary",path:"/glossary"},{title:"Community Resources",path:"/community-resources"}]}}};function Qs(){return"undefined"!=typeof navigator&&"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}}const Js="function"==typeof Proxy;let Ss,Xs;function Bs(){return void 0!==Ss||("undefined"!=typeof window&&window.performance?(Ss=!0,Xs=window.performance):"undefined"!=typeof global&&(null===(e=global.perf_hooks)||void 0===e?void 0:e.performance)?(Ss=!0,Xs=global.perf_hooks.performance):Ss=!1),Ss?Xs.now():Date.now();var e}class Cs{constructor(e,n){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=e,this.hook=n;const t={};if(e.settings)for(const n in e.settings){const a=e.settings[n];t[n]=a.defaultValue}const a="__vue-devtools-plugin-settings__"+e.id;let i=Object.assign({},t);try{const e=localStorage.getItem(a),n=JSON.parse(e);Object.assign(i,n)}catch(e){}this.fallbacks={getSettings:()=>i,setSettings(e){try{localStorage.setItem(a,JSON.stringify(e))}catch(e){}i=e},now:()=>Bs()},n&&n.on("plugin:settings:set",(e,n)=>{e===this.plugin.id&&this.fallbacks.setSettings(n)}),this.proxiedOn=new Proxy({},{get:(e,n)=>this.target?this.target.on[n]:(...e)=>{this.onQueue.push({method:n,args:e})}}),this.proxiedTarget=new Proxy({},{get:(e,n)=>this.target?this.target[n]:"on"===n?this.proxiedOn:Object.keys(this.fallbacks).includes(n)?(...e)=>(this.targetQueue.push({method:n,args:e,resolve:()=>{}}),this.fallbacks[n](...e)):(...e)=>new Promise(t=>{this.targetQueue.push({method:n,args:e,resolve:t})})})}async setRealTarget(e){this.target=e;for(const e of this.onQueue)this.target.on[e.method](...e.args);for(const e of this.targetQueue)e.resolve(await this.target[e.method](...e.args))}}function Ls(e,n){const t=e,a=Qs(),i=Qs().__VUE_DEVTOOLS_GLOBAL_HOOK__,o=Js&&t.enableEarlyProxy;if(!i||!a.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__&&o){const e=o?new Cs(t,i):null;(a.__VUE_DEVTOOLS_PLUGINS__=a.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:t,setupFn:n,proxy:e}),e&&n(e.proxiedTarget)}else i.emit("devtools-plugin:setup",e,n)}
/*!
 * vuex v4.1.0
 * (c) 2022 Evan You
 * @license MIT
 */function Hs(e,n){if(void 0===n&&(n=[]),null===e||"object"!=typeof e)return e;var t,a=(t=function(n){return n.original===e},n.filter(t)[0]);if(a)return a.copy;var i=Array.isArray(e)?[]:{};return n.push({original:e,copy:i}),Object.keys(e).forEach((function(t){i[t]=Hs(e[t],n)})),i}function Ps(e,n){Object.keys(e).forEach((function(t){return n(e[t],t)}))}function Ks(e){return null!==e&&"object"==typeof e}function $s(e,n){if(!e)throw new Error("[vuex] "+n)}function el(e,n,t){return n.indexOf(e)<0&&(t&&t.prepend?n.unshift(e):n.push(e)),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}function nl(e,n){e._actions=Object.create(null),e._mutations=Object.create(null),e._wrappedGetters=Object.create(null),e._modulesNamespaceMap=Object.create(null);var t=e.state;al(e,t,[],e._modules.root,!0),tl(e,t,n)}function tl(e,n,t){var a=e._state,i=e._scope;e.getters={},e._makeLocalGettersCache=Object.create(null);var o,r=e._wrappedGetters,s={},l={},d=new He(!0);d.run((function(){Ps(r,(function(n,t){s[t]=function(e,n){return function(){return e(n)}}(n,e),l[t]=function(e,n){var t,a,i=m(e);i?(t=e,a=W):(t=e.get,a=e.set);var o=re()?null:new et(ce,t,W,{lazy:!0}),r={effect:o,get value(){return o?(o.dirty&&o.evaluate(),ge.target&&o.depend(),o.value):t()},set value(e){a(e)}};return X(r,"__v_isRef",!0),X(r,"__v_isReadonly",i),r}((function(){return s[t]()})),Object.defineProperty(e.getters,t,{get:function(){return l[t].value},enumerable:!0})}))})),e._state=(Re(o={data:n},!1),o),e._scope=d,e.strict&&function(e){Ce((function(){return e._state.data}),(function(){$s(e._committing,"do not mutate vuex store state outside mutation handlers.")}),{deep:!0,flush:"sync"})}(e),a&&t&&e._withCommit((function(){a.data=null})),i&&i.stop()}function al(e,n,t,a,i){var o=!t.length,r=e._modules.getNamespace(t);if(a.namespaced&&(e._modulesNamespaceMap[r]&&console.error("[vuex] duplicate namespace "+r+" for the namespaced module "+t.join("/")),e._modulesNamespaceMap[r]=a),!o&&!i){var s=ol(n,t.slice(0,-1)),l=t[t.length-1];e._withCommit((function(){l in s&&console.warn('[vuex] state field "'+l+'" was overridden by a module with the same name at "'+t.join(".")+'"'),s[l]=a.state}))}var m=a.context=function(e,n,t){var a=""===n,i={dispatch:a?e.dispatch:function(t,a,i){var o=rl(t,a,i),r=o.payload,s=o.options,l=o.type;if(s&&s.root||(l=n+l,e._actions[l]))return e.dispatch(l,r);console.error("[vuex] unknown local action type: "+o.type+", global type: "+l)},commit:a?e.commit:function(t,a,i){var o=rl(t,a,i),r=o.payload,s=o.options,l=o.type;s&&s.root||(l=n+l,e._mutations[l])?e.commit(l,r,s):console.error("[vuex] unknown local mutation type: "+o.type+", global type: "+l)}};return Object.defineProperties(i,{getters:{get:a?function(){return e.getters}:function(){return il(e,n)}},state:{get:function(){return ol(e.state,t)}}}),i}(e,r,t);a.forEachMutation((function(n,t){!function(e,n,t,a){(e._mutations[n]||(e._mutations[n]=[])).push((function(n){t.call(e,a.state,n)}))}(e,r+t,n,m)})),a.forEachAction((function(n,t){var a=n.root?t:r+t,i=n.handler||n;!function(e,n,t,a){(e._actions[n]||(e._actions[n]=[])).push((function(n){var i,o=t.call(e,{dispatch:a.dispatch,commit:a.commit,getters:a.getters,state:a.state,rootGetters:e.getters,rootState:e.state},n);return(i=o)&&"function"==typeof i.then||(o=Promise.resolve(o)),e._devtoolHook?o.catch((function(n){throw e._devtoolHook.emit("vuex:error",n),n})):o}))}(e,a,i,m)})),a.forEachGetter((function(n,t){!function(e,n,t,a){if(e._wrappedGetters[n])return void console.error("[vuex] duplicate getter key: "+n);e._wrappedGetters[n]=function(e){return t(a.state,a.getters,e.state,e.getters)}}(e,r+t,n,m)})),a.forEachChild((function(a,o){al(e,n,t.concat(o),a,i)}))}function il(e,n){if(!e._makeLocalGettersCache[n]){var t={},a=n.length;Object.keys(e.getters).forEach((function(i){if(i.slice(0,a)===n){var o=i.slice(a);Object.defineProperty(t,o,{get:function(){return e.getters[i]},enumerable:!0})}})),e._makeLocalGettersCache[n]=t}return e._makeLocalGettersCache[n]}function ol(e,n){return n.reduce((function(e,n){return e[n]}),e)}function rl(e,n,t){return Ks(e)&&e.type&&(t=n,n=e,e=e.type),$s("string"==typeof e,"expects string as the type, but found "+typeof e+"."),{type:e,payload:n,options:t}}var sl=0;function ll(e,n){Ls({id:"org.vuejs.vuex",app:e,label:"Vuex",homepage:"https://next.vuex.vuejs.org/",logo:"https://vuejs.org/images/icons/favicon-96x96.png",packageName:"vuex",componentStateTypes:["vuex bindings"]},(function(t){t.addTimelineLayer({id:"vuex:mutations",label:"Vuex Mutations",color:ml}),t.addTimelineLayer({id:"vuex:actions",label:"Vuex Actions",color:ml}),t.addInspector({id:"vuex",label:"Vuex",icon:"storage",treeFilterPlaceholder:"Filter stores..."}),t.on.getInspectorTree((function(t){if(t.app===e&&"vuex"===t.inspectorId)if(t.filter){var a=[];!function e(n,t,a,i){i.includes(a)&&n.push({id:i||"root",label:i.endsWith("/")?i.slice(0,i.length-1):i||"Root",tags:t.namespaced?[dl]:[]});Object.keys(t._children).forEach((function(o){e(n,t._children[o],a,i+o+"/")}))}(a,n._modules.root,t.filter,""),t.rootNodes=a}else t.rootNodes=[ul(n._modules.root,"")]})),t.on.getInspectorState((function(t){if(t.app===e&&"vuex"===t.inspectorId){var a=t.nodeId;il(n,a),t.state=function(e,n,t){n="root"===t?n:n[t];var a=Object.keys(n),i={state:Object.keys(e.state).map((function(n){return{key:n,editable:!0,value:e.state[n]}}))};if(a.length){var o=function(e){var n={};return Object.keys(e).forEach((function(t){var a=t.split("/");if(a.length>1){var i=n,o=a.pop();a.forEach((function(e){i[e]||(i[e]={_custom:{value:{},display:e,tooltip:"Module",abstract:!0}}),i=i[e]._custom.value})),i[o]=hl((function(){return e[t]}))}else n[t]=hl((function(){return e[t]}))})),n}(n);i.getters=Object.keys(o).map((function(e){return{key:e.endsWith("/")?cl(e):e,editable:!1,value:hl((function(){return o[e]}))}}))}return i}((i=n._modules,(r=(o=a).split("/").filter((function(e){return e}))).reduce((function(e,n,t){var a=e[n];if(!a)throw new Error('Missing module "'+n+'" for path "'+o+'".');return t===r.length-1?a:a._children}),"root"===o?i:i.root._children)),"root"===a?n.getters:n._makeLocalGettersCache,a)}var i,o,r})),t.on.editInspectorState((function(t){if(t.app===e&&"vuex"===t.inspectorId){var a=t.nodeId,i=t.path;"root"!==a&&(i=a.split("/").filter(Boolean).concat(i)),n._withCommit((function(){t.set(n._state.data,i,t.state.value)}))}})),n.subscribe((function(e,n){var a={};e.payload&&(a.payload=e.payload),a.state=n,t.notifyComponentUpdate(),t.sendInspectorTree("vuex"),t.sendInspectorState("vuex"),t.addTimelineEvent({layerId:"vuex:mutations",event:{time:Date.now(),title:e.type,data:a}})})),n.subscribeAction({before:function(e,n){var a={};e.payload&&(a.payload=e.payload),e._id=sl++,e._time=Date.now(),a.state=n,t.addTimelineEvent({layerId:"vuex:actions",event:{time:e._time,title:e.type,groupId:e._id,subtitle:"start",data:a}})},after:function(e,n){var a={},i=Date.now()-e._time;a.duration={_custom:{type:"duration",display:i+"ms",tooltip:"Action duration",value:i}},e.payload&&(a.payload=e.payload),a.state=n,t.addTimelineEvent({layerId:"vuex:actions",event:{time:Date.now(),title:e.type,groupId:e._id,subtitle:"end",data:a}})}})}))}var ml=8702998,dl={label:"namespaced",textColor:16777215,backgroundColor:6710886};function cl(e){return e&&"root"!==e?e.split("/").slice(-2,-1)[0]:"Root"}function ul(e,n){return{id:n||"root",label:cl(n),tags:e.namespaced?[dl]:[],children:Object.keys(e._children).map((function(t){return ul(e._children[t],n+t+"/")}))}}function hl(e){try{return e()}catch(e){return e}}var yl=function(e,n){this.runtime=n,this._children=Object.create(null),this._rawModule=e;var t=e.state;this.state=("function"==typeof t?t():t)||{}},wl={namespaced:{configurable:!0}};wl.namespaced.get=function(){return!!this._rawModule.namespaced},yl.prototype.addChild=function(e,n){this._children[e]=n},yl.prototype.removeChild=function(e){delete this._children[e]},yl.prototype.getChild=function(e){return this._children[e]},yl.prototype.hasChild=function(e){return e in this._children},yl.prototype.update=function(e){this._rawModule.namespaced=e.namespaced,e.actions&&(this._rawModule.actions=e.actions),e.mutations&&(this._rawModule.mutations=e.mutations),e.getters&&(this._rawModule.getters=e.getters)},yl.prototype.forEachChild=function(e){Ps(this._children,e)},yl.prototype.forEachGetter=function(e){this._rawModule.getters&&Ps(this._rawModule.getters,e)},yl.prototype.forEachAction=function(e){this._rawModule.actions&&Ps(this._rawModule.actions,e)},yl.prototype.forEachMutation=function(e){this._rawModule.mutations&&Ps(this._rawModule.mutations,e)},Object.defineProperties(yl.prototype,wl);var zl=function(e){this.register([],e,!1)};zl.prototype.get=function(e){return e.reduce((function(e,n){return e.getChild(n)}),this.root)},zl.prototype.getNamespace=function(e){var n=this.root;return e.reduce((function(e,t){return e+((n=n.getChild(t)).namespaced?t+"/":"")}),"")},zl.prototype.update=function(e){!function e(n,t,a){if(gl(n,a),t.update(a),a.modules)for(var i in a.modules){if(!t.getChild(i))return void console.warn("[vuex] trying to add a new module '"+i+"' on hot reloading, manual reload is needed");e(n.concat(i),t.getChild(i),a.modules[i])}}([],this.root,e)},zl.prototype.register=function(e,n,t){var a=this;void 0===t&&(t=!0),gl(e,n);var i=new yl(n,t);0===e.length?this.root=i:this.get(e.slice(0,-1)).addChild(e[e.length-1],i);n.modules&&Ps(n.modules,(function(n,i){a.register(e.concat(i),n,t)}))},zl.prototype.unregister=function(e){var n=this.get(e.slice(0,-1)),t=e[e.length-1],a=n.getChild(t);a?a.runtime&&n.removeChild(t):console.warn("[vuex] trying to unregister module '"+t+"', which is not registered")},zl.prototype.isRegistered=function(e){var n=this.get(e.slice(0,-1)),t=e[e.length-1];return!!n&&n.hasChild(t)};var jl={assert:function(e){return"function"==typeof e},expected:"function"},pl={getters:jl,mutations:jl,actions:{assert:function(e){return"function"==typeof e||"object"==typeof e&&"function"==typeof e.handler},expected:'function or object with "handler" function'}};function gl(e,n){Object.keys(pl).forEach((function(t){if(n[t]){var a=pl[t];Ps(n[t],(function(n,i){$s(a.assert(n),function(e,n,t,a,i){var o=n+" should be "+i+' but "'+n+"."+t+'"';e.length>0&&(o+=' in module "'+e.join(".")+'"');return o+=" is "+JSON.stringify(a)+"."}(e,t,i,n,a.expected))}))}}))}var bl=function e(n){var t=this;void 0===n&&(n={}),$s("undefined"!=typeof Promise,"vuex requires a Promise polyfill in this browser."),$s(this instanceof e,"store must be called with the new operator.");var a=n.plugins;void 0===a&&(a=[]);var i=n.strict;void 0===i&&(i=!1);var o=n.devtools;this._committing=!1,this._actions=Object.create(null),this._actionSubscribers=[],this._mutations=Object.create(null),this._wrappedGetters=Object.create(null),this._modules=new zl(n),this._modulesNamespaceMap=Object.create(null),this._subscribers=[],this._makeLocalGettersCache=Object.create(null),this._scope=null,this._devtools=o;var r=this,s=this.dispatch,l=this.commit;this.dispatch=function(e,n){return s.call(r,e,n)},this.commit=function(e,n,t){return l.call(r,e,n,t)},this.strict=i;var m=this._modules.root.state;al(this,m,[],this._modules.root),tl(this,m),a.forEach((function(e){return e(t)}))},fl={state:{configurable:!0}};bl.prototype.install=function(e,n){e.provide(n||"store",this),e.config.globalProperties.$store=this,(void 0===this._devtools||this._devtools)&&ll(e,this)},fl.state.get=function(){return this._state.data},fl.state.set=function(e){$s(!1,"use store.replaceState() to explicit replace store state.")},bl.prototype.commit=function(e,n,t){var a=this,i=rl(e,n,t),o=i.type,r=i.payload,s=i.options,l={type:o,payload:r},m=this._mutations[o];m?(this._withCommit((function(){m.forEach((function(e){e(r)}))})),this._subscribers.slice().forEach((function(e){return e(l,a.state)})),s&&s.silent&&console.warn("[vuex] mutation type: "+o+". Silent option has been removed. Use the filter functionality in the vue-devtools")):console.error("[vuex] unknown mutation type: "+o)},bl.prototype.dispatch=function(e,n){var t=this,a=rl(e,n),i=a.type,o=a.payload,r={type:i,payload:o},s=this._actions[i];if(s){try{this._actionSubscribers.slice().filter((function(e){return e.before})).forEach((function(e){return e.before(r,t.state)}))}catch(e){console.warn("[vuex] error in before action subscribers: "),console.error(e)}var l=s.length>1?Promise.all(s.map((function(e){return e(o)}))):s[0](o);return new Promise((function(e,n){l.then((function(n){try{t._actionSubscribers.filter((function(e){return e.after})).forEach((function(e){return e.after(r,t.state)}))}catch(e){console.warn("[vuex] error in after action subscribers: "),console.error(e)}e(n)}),(function(e){try{t._actionSubscribers.filter((function(e){return e.error})).forEach((function(n){return n.error(r,t.state,e)}))}catch(e){console.warn("[vuex] error in error action subscribers: "),console.error(e)}n(e)}))}))}console.error("[vuex] unknown action type: "+i)},bl.prototype.subscribe=function(e,n){return el(e,this._subscribers,n)},bl.prototype.subscribeAction=function(e,n){return el("function"==typeof e?{before:e}:e,this._actionSubscribers,n)},bl.prototype.watch=function(e,n,t){var a=this;return $s("function"==typeof e,"store.watch only accepts a function."),Ce((function(){return e(a.state,a.getters)}),n,Object.assign({},t))},bl.prototype.replaceState=function(e){var n=this;this._withCommit((function(){n._state.data=e}))},bl.prototype.registerModule=function(e,n,t){void 0===t&&(t={}),"string"==typeof e&&(e=[e]),$s(Array.isArray(e),"module path must be a string or an Array."),$s(e.length>0,"cannot register the root module by using registerModule."),this._modules.register(e,n),al(this,this.state,e,this._modules.get(e),t.preserveState),tl(this,this.state)},bl.prototype.unregisterModule=function(e){var n=this;"string"==typeof e&&(e=[e]),$s(Array.isArray(e),"module path must be a string or an Array."),this._modules.unregister(e),this._withCommit((function(){delete ol(n.state,e.slice(0,-1))[e[e.length-1]]})),nl(this)},bl.prototype.hasModule=function(e){return"string"==typeof e&&(e=[e]),$s(Array.isArray(e),"module path must be a string or an Array."),this._modules.isRegistered(e)},bl.prototype.hotUpdate=function(e){this._modules.update(e),nl(this,!0)},bl.prototype._withCommit=function(e){var n=this._committing;this._committing=!0,e(),this._committing=n},Object.defineProperties(bl.prototype,fl);var vl=Zl((function(e,n){var t={};return Nl(n)||console.error("[vuex] mapState: mapper parameter must be either an Array or an Object"),_l(n).forEach((function(n){var a=n.key,i=n.val;t[a]=function(){var n=this.$store.state,t=this.$store.getters;if(e){var a=Ml(this.$store,"mapState",e);if(!a)return;n=a.context.state,t=a.context.getters}return"function"==typeof i?i.call(this,n,t):n[i]},t[a].vuex=!0})),t})),kl=Zl((function(e,n){var t={};return Nl(n)||console.error("[vuex] mapMutations: mapper parameter must be either an Array or an Object"),_l(n).forEach((function(n){var a=n.key,i=n.val;t[a]=function(){for(var n=[],t=arguments.length;t--;)n[t]=arguments[t];var a=this.$store.commit;if(e){var o=Ml(this.$store,"mapMutations",e);if(!o)return;a=o.context.commit}return"function"==typeof i?i.apply(this,[a].concat(n)):a.apply(this.$store,[i].concat(n))}})),t})),xl=Zl((function(e,n){var t={};return Nl(n)||console.error("[vuex] mapGetters: mapper parameter must be either an Array or an Object"),_l(n).forEach((function(n){var a=n.key,i=n.val;i=e+i,t[a]=function(){if(!e||Ml(this.$store,"mapGetters",e)){if(i in this.$store.getters)return this.$store.getters[i];console.error("[vuex] unknown getter: "+i)}},t[a].vuex=!0})),t})),ql=Zl((function(e,n){var t={};return Nl(n)||console.error("[vuex] mapActions: mapper parameter must be either an Array or an Object"),_l(n).forEach((function(n){var a=n.key,i=n.val;t[a]=function(){for(var n=[],t=arguments.length;t--;)n[t]=arguments[t];var a=this.$store.dispatch;if(e){var o=Ml(this.$store,"mapActions",e);if(!o)return;a=o.context.dispatch}return"function"==typeof i?i.apply(this,[a].concat(n)):a.apply(this.$store,[i].concat(n))}})),t}));function _l(e){return Nl(e)?Array.isArray(e)?e.map((function(e){return{key:e,val:e}})):Object.keys(e).map((function(n){return{key:n,val:e[n]}})):[]}function Nl(e){return Array.isArray(e)||Ks(e)}function Zl(e){return function(n,t){return"string"!=typeof n?(t=n,n=""):"/"!==n.charAt(n.length-1)&&(n+="/"),e(n,t)}}function Ml(e,n,t){var a=e._modulesNamespaceMap[t];return a||console.error("[vuex] module namespace not found in "+n+"(): "+t),a}function Il(e,n,t){var a=t?e.groupCollapsed:e.group;try{a.call(e,n)}catch(t){e.log(n)}}function Yl(e){try{e.groupEnd()}catch(n){e.log("—— log end ——")}}function Tl(){var e=new Date;return" @ "+Al(e.getHours(),2)+":"+Al(e.getMinutes(),2)+":"+Al(e.getSeconds(),2)+"."+Al(e.getMilliseconds(),3)}function Al(e,n){return t="0",a=n-e.toString().length,new Array(a+1).join(t)+e;var t,a}var Wl={version:"4.1.0",Store:bl,storeKey:"store",createStore:function(e){return new bl(e)},useStore:function(e){return void 0===e&&(e=null),function(e,n,t){void 0===t&&(t=!1);var a=ce;if(a){var i=a.$parent&&a.$parent._provided;if(i&&e in i)return i[e];if(arguments.length>1)return t&&m(n)?n.call(a):n}else 0}(null!==e?e:"store")},mapState:vl,mapMutations:kl,mapGetters:xl,mapActions:ql,createNamespacedHelpers:function(e){return{mapState:vl.bind(null,e),mapGetters:xl.bind(null,e),mapMutations:kl.bind(null,e),mapActions:ql.bind(null,e)}},createLogger:function(e){void 0===e&&(e={});var n=e.collapsed;void 0===n&&(n=!0);var t=e.filter;void 0===t&&(t=function(e,n,t){return!0});var a=e.transformer;void 0===a&&(a=function(e){return e});var i=e.mutationTransformer;void 0===i&&(i=function(e){return e});var o=e.actionFilter;void 0===o&&(o=function(e,n){return!0});var r=e.actionTransformer;void 0===r&&(r=function(e){return e});var s=e.logMutations;void 0===s&&(s=!0);var l=e.logActions;void 0===l&&(l=!0);var m=e.logger;return void 0===m&&(m=console),function(e){var d=Hs(e.state);void 0!==m&&(s&&e.subscribe((function(e,o){var r=Hs(o);if(t(e,d,r)){var s=Tl(),l=i(e),c="mutation "+e.type+s;Il(m,c,n),m.log("%c prev state","color: #9E9E9E; font-weight: bold",a(d)),m.log("%c mutation","color: #03A9F4; font-weight: bold",l),m.log("%c next state","color: #4CAF50; font-weight: bold",a(r)),Yl(m)}d=r})),l&&e.subscribeAction((function(e,t){if(o(e,t)){var a=Tl(),i=r(e),s="action "+e.type+a;Il(m,s,n),m.log("%c action","color: #03A9F4; font-weight: bold",i),Yl(m)}})))}}};na.use(Wl);var Ol=new Wl.Store({state:{isLight:!1,isSearchModalOpen:!1},mutations:{openSearchModal(e){e.isSearchModalOpen=!0},closeSearchModal(e){e.isSearchModalOpen=!1},toggleLightMode(e){e.isLight=!e.isLight}}});t(239);na.component("CodeBlock",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,323))),na.component("Badge",()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,327))),na.component("CodeGroup",()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,324)));t(240);var Dl=[({Vue:e,options:n,router:t,siteData:a})=>{e.mixin({beforeCreate(){this.$store=Ol}})},{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:e})=>{e.component("CodeCopy",Rs)}],Rl=[];class Ul extends class{constructor(){this.store=new na({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,n){na.set(this.store.state,e,n)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Ul.prototype,{getPageAsyncComponent:ws,getLayoutAsyncComponent:zs,getAsyncComponent:js,getVueComponent:ps});var Vl={install(e){const n=new Ul;e.$vuepress=n,e.prototype.$vuepress=n}};function El(e,n){const t=n.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===t)}var Gl={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const n=this.pageKey||this.$parent.$page.key;return bs("pageKey",n),na.component(n)||na.component(n,ws(n)),na.component(n)?e(n):e("")}},Fl={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:n,slots:t})=>e("div",{class:["content__"+n.slotKey]},t()[n.slotKey])},Ql={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Jl=(t(241),t(242),Object(Ds.a)(Ql,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Sl={functional:!0,render(e,{parent:n,children:t}){if(n._isMounted)return t;n.$once("hook:mounted",()=>{n.$forceUpdate()})}};na.config.productionTip=!1,na.use($r),na.use(Vl),na.mixin(function(e,n,t=na){!function(e){e.locales&&Object.keys(e.locales).forEach(n=>{e.locales[n].path=n});Object.freeze(e)}(n),t.$vuepress.$set("siteData",n);const a=new(e(t.$vuepress.$get("siteData"))),i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),o={};return Object.keys(i).reduce((e,n)=>(n.startsWith("$")&&(e[n]=i[n].get),e),o),{computed:o}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let n,t;for(const a in e)"/"===a?t=e[a]:0===this.$page.path.indexOf(a)&&(n=e[a]);return n||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:n}=this.$page.frontmatter;if("string"==typeof n)return n;const t=this.$siteTitle,a=e.frontmatter.home?null:e.frontmatter.title||e.title;return t?a?a+" | "+t:t:a||"VuePress"}get $description(){const e=function(e){if(e){const n=e.filter(e=>"description"===e.name)[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,n){for(let t=0;t<e.length;t++){const a=e[t];if(a.path.toLowerCase()===n.toLowerCase())return a}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Fs)),na.component("Content",Gl),na.component("ContentSlotsDistributor",Fl),na.component("OutboundLink",Jl),na.component("ClientOnly",Sl),na.component("Layout",zs("Layout")),na.component("NotFound",zs("NotFound")),na.prototype.$withBase=function(e){const n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.9.10",hash:"b15bcf7"},async function(e){const n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Fs.routerBase||Fs.base,t=new $r({base:n,mode:"history",fallback:!1,routes:Gs,scrollBehavior:(e,n,t)=>t||(e.hash?!na.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((n,t,a)=>{if(El(e,n.path))a();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){const t=n.path.replace(/\/$/,"")+".html";El(e,t)?a(t):a()}else a();else{const t=n.path+"/",i=n.path+".html";El(e,i)?a(i):El(e,t)?a(t):a()}})}(t);const a={};try{await Promise.all(Dl.filter(e=>"function"==typeof e).map(n=>n({Vue:na,options:a,router:t,siteData:Fs,isServer:e})))}catch(e){console.error(e)}return{app:new na(Object.assign(a,{router:t,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Rl.map(n=>e(n)))])})),router:t}}(!1).then(({app:e,router:n})=>{n.onReady(()=>{e.$mount("#app")})})}]);